build time -- 2022-05-27 05:46:31.305046
  Beginning Test, file ESMF_ArrayCreateGetUTest.  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROC  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROCESSORS 4
F90, line 97
  NUMBER_OF_PROCESSORS 4
  NUMBER_OF_PROCESSORS 4
ESSORS 4
  PAS  PASS  Testi  PASS  TestinS  Testing Array   PASS  Testing Arng Array IsCreated forg Array IsCreated for uncreated objIsCreated for uncreated object, ESMF_Arrray IsCreated for uncreated object, ESMF_A uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
ect, ESMF_ArrayCreateGetUTest.F90, line 118
ayCreateGetUTest.F90, line 118
rrayCreateGetUTest.F90, line 118
  PASS  Testing Array Is  PASS  Testing Array IsCreated f  PASS  Testing Array IsCreCreated for uncreated object, ESMF_ArrayCre  PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetUTesor uncreated object, ESMF_ArrayCreateGetUTest.F90, lineated for uncreated object, ESMF_ArrayCreateGetUTesateGetUTest.F90, line 125
t.F90, line 125
 125
t.F90, line 125
  PASS    PASS  Create test A  PASS  Create test Array for ICreate test Array for IsCreated, ESMF_Ar  PASS  Create test Array for IsCreated, ESMF_Arrayrray for IsCreated, ESMF_ArrayCreateGetUTest.F90, sCreated, ESMF_ArrayCreateGetUTest.F90, line 143
rayCreateGetUTest.F90, line 143
CreateGetUTest.F90, line 143
line 143
  PASS  Tes  PASS  Testing Array Is  PASS  Testing Array Isting Array IsCreated for created ob  PASS  Testing Array IsCreated for created object, ESMF_ArCreated for created object, ESMF_ArrayCreateGeCreated for created object, ESMF_ArrayCreject, ESMF_ArrayCreateGetUTest.F90, line 150rayCreateGetUTest.F90, line 150
tUTest.F90, line 150
  PASateGetUTest.F90, line 150

  PASS  Testing Array IsC  PASS  Testing Array IsCreated for S  Testing Array IsCreated for created obj  PASS  Testing Array IsCreated foreated for created object, ESMF_ArrayCreatecreated object, ESMF_ArrayCreateGetUTest.F9ect, ESMF_ArrayCreateGetUTest.F90, line 157r created object, ESMF_ArrayCreateGetUTestGetUTest.F90, line 157
0, line 157

  PASS  .F90, line 157
  PASS  Destroy test Array f  PASS  Destroy test Array for IsCreateDestroy test Array for IsCreated, ESMF_Arra  PASS  Destroy test Array for Ior IsCreated, ESMF_ArrayCreateGetUTest.F90, d, ESMF_ArrayCreateGetUTest.F90, line 164
yCreateGetUTest.F90, line 164
sCreated, ESMF_ArrayCreateGetUTest.F90, liline 164
  PASS  Testing Arr  PASS  Testing Array IsCreated ne 164
  PASS  Tay IsCreated for destroyed object, E  PASS  Testing Array IsCreated for destroyed object, ESMF_Arrayfor destroyed object, ESMF_ArrayCreateGetUTesesting Array IsCreated for destroyed objSMF_ArrayCreateGetUTest.F90, line 171
CreateGetUTest.F90, line 171
t.F90, line 171
  PASS  ect, ESMF_ArrayCreateGetUTest.F90, line   PASS  Testing Array IsCreated   PASS  Testing Array IsCreated for deTesting Array IsCreated for destroyed objec171
  PASS  Testinfor destroyed object, ESMF_ArrayCreateGetUTestroyed object, ESMF_ArrayCreateGetUTest.F9t, ESMF_ArrayCreateGetUTest.F90, line 178
g Array IsCreated for destroyed object, st.F90, line 178
0, line 178
ESMF_ArrayCreateGetUTest.F90, l  PASS  Array  PASS  ArrayCreate Aine 178
Create Allocate 2D ESMF_TYPEKIND  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Testllocate 2D ESMF_TYPEKIND_R8 Test, ESMF_Arr  PASS  ArrayCrea_R8 Test, ESMF_ArrayCreateGetUTest.F90, line, ESMF_ArrayCreateGetUTest.F90, line 186
ayCreateGetUTest.F90, line 186
te Allocate 2D ESMF_TYPEKIND_R8 Test, E 186
  PASS  Array e  PASS  Array equality SMF_ArrayCreateGetUTest.F90, linequality before assignment Test, ESMF  PASS  Array equality before assignment Test, ESMF_Arraybefore assignment Test, ESMF_ArrayCreateGetU 186
  PASS  Ar_ArrayCreateGetUTest.F90, line 193
CreateGetUTest.F90, line 193
Test.F90, line 193
  PASSray equality before assignment Test, ESM  PASS  Array assignment and equal  PASS  Array assignment and equality Te  Array assignment and equality Test, ESMF_F_ArrayCreateGetUTest.F90, line 193
ity Test, ESMF_ArrayCreateGetUTest.F90, linst, ESMF_ArrayCreateGetUTest.F90, line 202
ArrayCreateGetUTest.F90, line 202
  PASS  Array assignment e 202
  PASS  ArrayDest  PASS  ArrayDestroy Teand equality Test, ESMF_ArrayCrroy Test, ESMF_ArrayCreateGetUTest  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90st, ESMF_ArrayCreateGetUTest.F90, line 209
eateGetUTest.F90, line 202
.F90, line 209
  PASS  Ar, line 209
  PASS  Array e  PASS  Array equality afte  PASS  ArrayDestroy Test, ESMF_ArrayCray equality after destroy Test, ESMF_ArrayCreaquality after destroy Test, ESMF_ArrayCreateGer destroy Test, ESMF_ArrayCreateGetUTest.F90,reateGetUTest.F90, line 209
teGetUTest.F90, line 217
  PAtUTest.F90, line 217
  PAS line 217
  PASS  Array non  PASS  Array equality after destroSS  Array non-equality after destroy Test, S  Array non-equality after destroy Test, E-equality after destroy Test, ESMF_ArrayCrey Test, ESMF_ArrayCreateGetUTest.F90, liESMF_ArrayCreateGetUTest.F90, line 225
SMF_ArrayCreateGetUTest.F90, line 225
ateGetUTest.F90, line 225
ne 217
  PASS  Array   PASS  Double ArrayDestroy   PASS  Double ArrayDestroy thnon-equality after destroy Testthrough alias Test, ESMF_ArrayCre  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreatrough alias Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 22ateGetUTest.F90, line 232
eGetUTest.F90, line 232
.F90, line 232
5
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS   PASS  ArrayCreat ArrayCreate Allocate 2D E  PASS  ArrayCreate Allocate 2D ESMF_Te Allocate 2D ESMF_TYPEKIND_R8 raSMF_TYPEKIND_R8 rank inconsistencYPEKIND_R8 rank inconsistency Tenk inconsistency Test, ESMF_Arrayy Test, ESMF_ArrayCreateGetUTest.F90st, ESMF_ArrayCreateGetUTest.F90, liCreateGetUTest.F90, line 241
, line 241
ne 241
  PASS  ArrayCreate Allo  PASS cate 2D ESMF_TYPEKIN  PASS  ArrayCreate Allocate 2D  PASS  ArrayCreate Allocate 2D ESMF ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 TD_R8 rank inconsistency Test, ESMF_Arra ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGet_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTesest, ESMF_ArrayCreateGetUTest.F90, line 24yCreateGetUTest.F90, line 241
UTest.F90, line 249
t.F90, line 249
9
  PASS  Array  PASS  ArraySet Test  PASS  ArrayCreateSet Test, ESMF_ArrayCreateGetUTes  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 256
 Allocate 2D ESMF_TYPEKIND_R8 Test, ESMFt.F90, line 256
  PASS  .F90, line 256
  PASS    PASS  ArrayDestroy Test,_ArrayCreateGetUTest.F90, line 249
ArrayDestroy Test, ESMF_ArrayCreateGetUTestArrayDestroy Test, ESMF_ArrayCreateGetUTest ESMF_ArrayCreateGetUTest.F90, line 263
.F90, line 263
.F90, line 263
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
  PASS   PASS  ArrayCreat  PASS  ArrayCreate Allocate  ArrayDestroy Test, ESMF_ArrayCreae Allocate 2D ESMF_TYPEKIND_R8 Test   PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test w/2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_AteGetUTest.F90, line 263
w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90,  ArraySpec, ESMF_ArrayCreateGetUTest.F90, lirrayCreateGetUTest.F90, line 277
line 277
ne 277
  PASS  A  PASS  ArrayCreaterrayCreate Allocate 2D Allocate 2D ESMF_TYPEK  PASS  ArrayCreate Allocate 2D ESMF_TYPEKI ESMF_TYPEKIND_R8 Test with Array  PASS  ArrayCreate Allocate 2D ESMIND_R8 Test with ArraySpec, ESMF_ArrayCreatND_R8 Test with ArraySpec, ESMF_ArrayCreateSpec, ESMF_ArrayCreateGetUTest.F90, line 28F_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArreGetUTest.F90, line 285
GetUTest.F90, line 285
--- ESMCI::Array::print start ---
5
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpecayCreateGetUTest.F90, line 277
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  Arra
 Root Info (Attributes):
{}yCreate Allocate 2D ESMF_TYPEK{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xf7f040:
            rank = 2, typekind = 6, IND_R8 Test with ArraySpec, ESMF{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18a8830:
            rank = 2, typekind = 6, base_addr = 0x7f63a5dd0700
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2028830:
            rank = 2, typekind = 6, base_addr = 0x7f5afb9236b0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
base_addr = 0x7fcd2c51e740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
_ArrayCreateGetUTest.F90, line 285
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_T--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 TeArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
st, ESMF_ArrayCreateGetUTest.F90, line 292
rayCreateGetUTest.F90, line 292
90, line 292
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x242a830:
            rank = 2, typekind = 6, base_addr = 0x7f9bb401a6e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
 Array na(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
 Array name: MyArray with  Array name: MyArray with ArraySpec me: MyArray with ArraySpec                  (10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2ArraySpec                                                                                                                      
D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreat                       
  PASS  ArrayGe              
  PASS  ArrayGet arraysp  PASS  ArrayGet arrayspec and name, 2D EeGetUTest.F90, line 292
t arrayspec and name, 2D ESMF_TYPEKIND_R8 Teec and name, 2D ESMF_TYPEKIND_R8 Test, ESMF_SMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90,ArrayCreateGetUTest.F90, line 300st.F90, line 300
 Array name: MyArray with  line 300
  PASS  V
  PASS  Verify Array  PASS  Verify ArraySpec returned froArraySpec                             erify ArraySpec returned from Array, ESMF_ASpec returned from Array, ESMF_ArrayCreateGm Array, ESMF_ArrayCreateGetUTest.F90, line                             
  PASS rrayCreateGetUTest.F90, line 306
etUTest.F90, line 306
 306
  PASS  Ver ArrayGet arrayspec and name, 2D ESMF_TYPEKIN  PASS  Verify name returned from Array  PASS  Verify name returned from Array, ESMF_Arrify name returned from Array, ESMF_ArrayCreateGeD_R8 Test, ESMF_ArrayCreateGetUTest.F90, , ESMF_ArrayCreateGetUTest.F90, line 312
ayCreateGetUTest.F90, line 312
tUTest.F90, line 312
line 300
  PASS  V  PASS  ArrayGerify ArraySpec returne  PASS  ArrayGet Fortran array poin  PASS  ArrayGet Fortran array pointer, 2D et Fortran array pointer, 2D ESMF_TYPEKIND_R8 Ted from Array, ESMF_ArrayCreateGetUTest.F9ter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 319
0, line 306
  PateGetUTest.F90, line 319
st.F90, line 319
ASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, line 312
  PASS  ArrayGet Fortran array p  PASS  Gettointer, 2D ESMF_TYPEKIing Attribute count from ND_R8 Test, ESMF_Array  PASS  Getting Attribute count from an   PASS  Getting Attribute count from an Array, ESMan Array, ESMF_ArrayCreateGetUTest.F90, line 32CreateGetUTest.F90, line 319
Array, ESMF_ArrayCreateGetUTest.F90, line 32F_ArrayCreateGetUTest.F90, line 326
6
  PASS  Verify Attribute co6
  PASS  Verify  PASS  Verify Attributeunt from an Array, ESMF_ArrayCreateGe Attribute count from an Array, ESM count from an Array, ESMF_ArrayCrtUTest.F90, line 332
F_ArrayCreateGetUTest.F90, line 3eateGetUTest.F90, line 332
  PASS 32
 ArrayCreate from Copy, uninitialized Ar  PASS  Getting  PASS  ArrayCreate from Copy, un  PASS  ArrayCreate from Copy, uninitialiray Test, ESMF_ArrayCreateGetUTest.F90, line 3 Attribute count from an Array, ESMF_Arrainitialized Array Test, ESMF_ArrayCreateGetUTzed Array Test, ESMF_ArrayCreateGetUTest.F90,39
yCreateGetUTest.F90, line 326
est.F90, line 339
 line 339
  PASS  ArrayCreate from Copy (ALLOC), 2D ES  PASS  Verify Attribute count fr  PASS  ArrayCreate from C  PASS  ArrayCreate from Copy (ALLOMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.om an Array, ESMF_ArrayCreateGetUTest.F9opy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_C), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreF90, line 347
0, line 332
ArrayCreateGetUTest.F90, line 347
ateGetUTest.F90, line 347
 Array name: Array007                    PASS  ArrayCreate fr                        om Copy, uninitialize Array name: Array007                 Array name: Array007                                                     
  PASS  Arrd Array Test, ESMF_ArrayCreateGetUTest                                                                                     ayGet arrayspec from Array Copy (ALLOC) Test, .F90, line 339
             
  PASS  ArrayGet arrayspe       
  PASS  ArrayGet arrayspec fromESMF_ArrayCreateGetUTest.F90, line 355
  PASS  ArrayCreatec from Array Copy (ALLOC) Test, ESMF_ArrayCr Array Copy (ALLOC) Test, ESMF_ArrayCreateG  PASS  Verify ArraySpec returned f from Copy (ALLOC), 2D ESMF_TYPEKIND_R8 TeateGetUTest.F90, line 355
etUTest.F90, line 355
 rom Array (ALLOC) Copy, ESMF_ArrayCreateGetUTeest, ESMF_ArrayCreateGetUTest.F90, line   PASS  Verify ArraySpec returned from Ar PASS  Verify ArraySpec returned from Array (Ast.F90, line 361
  PASS  347
ray (ALLOC) Copy, ESMF_ArrayCreateGetUTest.FLLOC) Copy, ESMF_ArrayCreateGetUTest.F90, lArrayGet Fortran array pointer, from Array Cop Array name: Array007                90, line 361
  PASS  Arine 361
  PASS  Array (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90,                                        rayGet Fortran array pointer, from Array CoyGet Fortran array pointer, from Array Copyline 368
                 
  PASS  ArrayGet apy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90rrayspec from Array Copy (ALLOC90, line 368
, line 368
) Test, ESMF_ArrayCreateGetUTest.F90, line 355
  PASS  Verify ArraySpec returned from Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  Verify Array vs  PASS  Verify Array vs A Array Copy (ALLOC) no darray Copy (ALLOC) no datta copy, ESMF_ArrayCreateGe  PASS  Verify Aa copy, ESMF_ArrayCreateGetUTest.tUTest.F90, line 384
rray vs Array Copy (ALLOC) no datF90, line 384
a copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_  PASS  Verify Array ArrayCreateGetUTest.F90, livs Array Copy (ALLOC) sepne 402
arate memory allocation, E  PASS  Verify Array vs  PASS  ArrayDestroy TestSMF_ArrayCreateGetUTest.F90, line 4 Array Copy (ALLOC) separate memor, ESMF_ArrayCreateGetUTest.F90, lin02
  PASS  Arrayy allocation, ESMF_ArrayCreateGetUTee 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = Destroy Test, ESMF_ArrayCreateGetUTesst.F90, line 402
no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x20296a0:
            rank = 2, typekind = 6, base_addr = 0x7f5afb923930
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
t.F90, line 409
--- ESMCI::Array::print start ---
 Base name    =   PASS  ArrayDestroy Test, ES( 9,13) =  103
(10,13) =  103
(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103
(15,13) =  103
( 9,14) =  103
(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
(15,22) =  103
( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xf7fcf0:
            rank = 2, typekind = 6, MF_ArrayCreateGetUTest.F90, line (13,23) =  103
(14,23) =  103
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrinbase_addr = 0x7fcd2c51ea50
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
( 5, 1) =  100
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
( 8,11) =  100
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
( 4,12) =  100
409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):t from Copy (ALLOC) after original de( 5,12) =  100
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrin
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18a96a0:
            rank = 2, typekind = 6, base_addr = 0x7f63a5dd09d0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  102
( 2,13) =  102
stroy, 2D ESMF_TYPEKIND_R8 Test, Et from Copy (ALLOC) after original de( 3,13) =  102
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
( 2,14) =  102
  skipping to end ...
( 7,22) =  102
( 8,22) =  102
( 1,23) =  102
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
SMF_ArrayCreateGetUTest.F90, line 416
stroy, 2D ESMF_TYPEKIND_R8 Test, E  PASS  ArrayPrint from CopSMF_ArrayCreateGetUTest.  PASS  Verify Array vs Array Copyy (ALLOC) after original destroy,   PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_F90, line 416
  PASS  Ar (ALLOC) separate memory allocation, ESM2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreaArrayCreateGetUTest.F90, line 423
rayDestroy of Copy (ALLOC) Test, ESMF_ArraF_ArrayCreateGetUTest.F90, line 402
teGetUTest.F90, line 416
yCreateGetUTest.F90, line 423
  PASS  ArrayD  PASS  ArrayDestroy of Co  PASS  ArrayCreate Allocate 2D ESMF  PASS  Aestroy Test, ESMF_ArrayCreateGetUTest.F9py (ALLOC) Test, ESMF_ArrayCreateGetUTes_TYPEKIND_R8 Test with ArraySpec, ESMF_rrayCreate Allocate 2D ESMF_TYPEKIND_R8 Te0, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Readyt.F90, line 423
ArrayCreateGetUTest.F90, line 431
st with ArraySpec, ESMF_ArrayCreateGetUTes
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x242b6a0:
            rank = 2, typekind = 6, base_addr = 0x7f9bb401a990
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
  PASS  ArrayCreate At.F90, line 431
(10, 1) =  101
(11, 1) =  101
(12, 1) =  101
(13, 1) =  101
(14, 1) =  101
(15, 1) =  101
( 9, 2) =  101
(10, 2) =  101
(11, 2) =  101
  skipping to end ...
(13,11) =  101
(14,11) =  101
(15,11) =  101
( 9,12) =  101
(10,12) =  101
(11,12) =  101
llocate 2D ESMF_TYPEKIND_R8 Tes  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8  PASS  ArrayGet Fortran array pointer, 2D(12,12) =  101
(13,12) =  101
(14,12) =  101
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint fromt with ArraySpec, ESMF_ArrayCreateGetUTes Test, ESMF_ArrayCreateGetUTest.F90, line  ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetU Copy (ALLOC) after original destroy, 2Dt.F90, line 431
  PASS 438
  PASS Test.F90, line 438
 ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG ArrayGet Fortran array pointer, 2D ESMF_ ArrayCreate from Copy (VALUE), 2D ESMF_  PASS  ArrayCreate from Copy (VALUE), 2etUTest.F90, line 416
TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTeTYPEKIND_R8 Test, ESMF_ArrayCreateGetUTD ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGe  PASS  ArrayDestroy of Copy (ALLOC) st.F90, line 438
est.F90, line 446
tUTest.F90, line 446
Test, ESMF_ArrayCreateGetUTest.F90, lin  PASS  ArrayCreate from Copy (VA Array name: Arrae 423
LUE), 2D ESMF_TYPEKIND_R8 Test Array name: Array009                                  y009                                        PASS  ArrayCreate Alloc, ESMF_ArrayCreateGetUTest.F90, line 446                                      
                                  
  PAate 2D ESMF_TYPEKIND_R8 Test with ArrayS
 Ar  PASS  ArrayGet arrayspec from Array SS  ArrayGet arrayspec from Array Copy (VALUpec, ESMF_ArrayCreateGetUTest.F90, line ray name: Array009                      Copy (VALUE) Test, ESMF_ArrayCreateGetUTE) Test, ESMF_ArrayCreateGetUTest.F90, lin431
  PASS  ArrayGet Fo                                        est.F90, line 454
  e 454
  PASS  Verify Artran array pointer, 2D ESMF_TYPEKIND_R          
  PASS  ArrayGet arrayspPASS  Verify ArraySpec returned from ArrraySpec returned from Array (VALUE) Copy, 8 Test, ESMF_ArrayCreateGetUTest.F90, linec from Array Copy (VALUE) Test, ESMF_Arrray (VALUE) Copy, ESMF_ArrayCreateGetUTeESMF_ArrayCreateGetUTest.F90, line 460
e 438
  PASayCreateGetUTest.F90, line 454
st.F90, line 460
  PA  PASS  ArrayGet Fortran arS  ArrayCreate from Copy (VALUE), 2D ESM  PASS  Verify ArraySpec rSS  ArrayGet Fortran array pointer, fromray pointer, from Array Copy (VALUE) Test, F_TYPEKIND_R8 Test, ESMF_ArrayCreateGeteturned from Array (VALUE) Copy, ESMF_A Array Copy (VALUE) Test, ESMF_ArrayCreESMF_ArrayCreateGetUTest.F90, line 467
UTest.F90, line 446
rrayCreateGetUTest.F90, line 460
ateGetUTest.F90, line 467
 Array name: A  PASS  ArrayGet Forray009             rtran array pointer, f                       rom Array Copy (VALUE                     ) Test, ESMF_ArrayCre               
ateGetUTest.F90, line  PASS  ArrayGet arra 467
yspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, lin  PASS e 483
 Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (V  PASS  VeriALUE) Test, ESMF_ArrayCrfy Array vs Array CopyeateGetUTest.F90, lin (VALUE) separate memoe 515
ry allocation, ESMF_ArrayCreateGetUT  PASS  ArrayCreate est.F90, line 501
Allocate 2D ESMF_TYPEK  PA  PASS  Verify Array vsIND_R8 Test with ArraySpec, ESMF_SS  ArrayDestroy Test, ESMF_Array Array Copy (VALUE) separate memorArrayCreateGetUTest.F90, line 523
CreateGetUTest.F90, line 508
y allocation, ESMF_ArrayCreateGet  PASS  ArUTest.F90, line 501
  PASS  ArrayGet Fortran array pointer,rayDestroy of Copy (VALUE) Test, E  PASS  ArrayDest 2D ESMF_TYPEKIND_R8 Test, ESMF_SMF_ArrayCreateGetUTest.F9roy Test, ESMF_ArrayCreateGetUTest.ArrayCreateGetUTest.F90, line 530
0, line 515
F90, line 508
  PASS  ArrayC  PASS  ArrayDestroy of Create Allocate 2D ESMF_TYPopy (VALUE) Test, ESMF_  PASS  ArrayCreate from Copy (REF), 2D ESMFEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 515_TYPEKIND_R8 Test, ESMF_ArrayCreArrayCreateGetUTest.F90, line 523
  PASS  Verify Array vs Array
  PASS ateGetUTest.F90, line 538
  PASS  ArrayGet Fortran a Copy (VALUE) separate memory allocation, E ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Testrray pointer, 2D ESMF_TYPEKIND_R8 TesSMF_ArrayCreateGetUTest.F90, li with ArraySpec, ESMF_ArrayCreate Array name: Array011                                    t, ESMF_ArrayCreateGetUTest.F90, line 530
ne 501
  PASS  ArGetUTest.F90, line 523
                                    
   PASS  ArrarayDestroy Test, ESMF_ArrayCreateGetUTe  PASS  ArrayGet Fortran array pointer, 2D PASS  ArrayGet arrayspec from Array Copy (yCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 st.F90, line 508
  PASS  ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTeREF) Test, ESMF_ArrayCreateGetUTest.F90, linTest, ESMF_ArrayCreateGetUTest.F90, line 538
 ArrayDestroy of Copy (VALUE) Test, ESMst.F90, line 530
e 546
  PASS  Verify Arra ArrayF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate from Copy (RySpec returned from Array Copy (REF), ESMF name: Array011                              EF), 2D ESMF_TYPEKIND_R8 Test, ES_ArrayCreateGetUTest.F90, line 5                                    PASS  ArrayCreate Allocate 2D ESMF_TYMF_ArrayCreateGetUTest.F90, line 538
52
  PASS  ArrayGet Fort        
  PASS  ArrayGet arrayspec from PEKIND_R8 Test with ArraySpec, ESMF_Arrran array pointer, from Array CoArray Copy (REF) Test, ESMF_ArrayCayCreateGetUTest.F90, line 523 Array name: Array011                     py (REF) Test, ESMF_ArrayCreateGetUTest.F90reateGetUTest.F90, line 546

  PASS  ArrayGet For                                          , line 559
  PASS  Verify ArraySpec returned from Arraytran array pointer, 2D ESMF_TYPEKIND_R8 Te         
  PASS  ArrayGet arrayspec from Copy (REF), ESMF_ArrayCreateGetUTestst, ESMF_ArrayCreateGetUTest.F9 Array Copy (REF) Test, ESMF_Arra.F90, line 552
0, line 530
yCreateGetUTest.F90, line 546
  PASS  ArrayGet Fortran array poin  PASS  Arrater, from Array Copy (REyCreate from Copy (R  PASS  Verify ArraySpec returned from ArF) Test, ESMF_ArrayCreateGetUTest.FEF), 2D ESMF_TYPEKIND_R8 Test, ray Copy (REF), ESMF_ArrayCreateG90, line 559
ESMF_ArrayCreateGetUTest.F90, etUTest.F90, line 552
line 538
  PASS  ArrayGet Fortran ar Array naray pointer, from Array Copme: Array011            y (REF) Test, ESMF_Arra                    yCreateGetUTest.F90, li                     ne 559
                   
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy T  PASS  ArrayCreest, ESMF_ArrayCreateGetUTate from Ptr with 3D farest.F90, line 600
  PASS  Verify Array vs Array on 2D DistGrid Test as Ptr,   PASS  ArrayDestroy of Cray Copy (REF) shared allocation ESMF_ArrayCreateGetUTest.F90, line opy Test, ESMF_ArrayCreateGetUTest.F9Test2, ESMF_ArrayCreateGetUTest.F90616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):0, line 607
, line 593
  PASS 
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2028830:
            rank = 3, typekind = 5, base_addr = 0x7f5afb923c40
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
 ArrayDestroy Test, ESMF(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
_ArrayCreateGetUTest.F90(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
, line 600
  PASS  ArrayPrint for A  PASS  ArrayDestroy rrayCreate from Ptr Test  PASS  ArrayCreof Copy Test, ESMF_ArrayCreateGetUT, ESMF_ArrayCreateGetUTest.F90, liate from Ptr with 3D farray on 2D Diest.F90, line 607
ne 623
  PAstGrid Test as Ptr, ESMF_ArrayCreateSS  ArrayGet Test, ESMFGetUTest.F90, line 616
_ArrayCreateGetUTest.F90--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = , line 630
no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xf7f040:
            rank = 3, typekind = 5, base_addr = 0x7fcd2c51edf0
  PASS  Deallocat            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
  PASS  Verify Array vs Array Copy (Re returned pointer Test, ESMF_Arra( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
EF) shared allocation Test2, ESMF_  PASS  ArrayCreate from PtryCreateGetUTest.F90, line 637
  PASS  ArrayPrint for ArrayCreate from Ptr TeArrayCreateGetUTest.F90, line 593
 with 3D farray on 2D DistGrid Test as Ptr,  PASS  ArrayDestroy Test, ESMF_ArrayCst, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayDestroy Test, ESMF_ ESMF_ArrayCreateGetUTest.F90, line 616
reateGetUTest.F90, line 644
  PASS  ArrayGet Test, ESArrayCreateGetUTest.F90, line 600
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18a8830:
MF_ArrayCreateGetUTest.F90, line 630
  PASS  ArrayDestroy of Co            rank = 3, typekind = 5, base_addr = 0x7f63a5dd0d30
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
  PASS  Deallocpy Test, ESMF_ArrayCreateGetUTest.F( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  Pate returned pointer Test, ESMF_Arra90, line 607
ASS  ArrayPrint for ArrayCreate fro  PASS  ArrayCreate with 3D farray on 2D DyCreateGetUTest.F90, line 637
m Ptr Test, ESMF_ArrayCreateGetUTistGrid Test, ESMF_ArrayCreateGetU  PASS  ArrayDestroy Test, ESMF_Aest.F90, line 623
Test.F90, line 653
rrayCreateGetUTest.F90, line 644
  PASS  ArrayGet Test, ESMF  PASS  ArrayDestroy Test, ES_ArrayCreateGetUTest.F90MF_ArrayCreateGetUTest.F  PASS  ArrayCre, line 630
 90, line 660
ate with 3D farray on 2D DistGrid Te  PASS  ArrayCreate from Ptr with 3D farray PASS  Deallocate returned pointer Test, ESMst, ESMF_ArrayCreateGetUTest.F90, li on 2D DistGrid Test as Ptr, ESMF_ArrayCreF_ArrayCreateGetUTest.F90, line 637
ne 653
  PASS  ArrayDeateGetUTest.F90, line 616
stroy Test, ESMF_ArrayCr--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        =   PASS  ArrayDestroy Test, ESMF_ArrayCr  PASS  ArrayCreate with 3D farrayeateGetUTest.F90, line 660
no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x242a830:
            rank = 3, typekind = 5, base_addr = 0x7f9bb401acd0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
eateGetUTest.F90, line 644
 on 2D DistGrid w/ ESMF_DATACOPY_VALUE Te  PASS  A( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
st, ESMF_ArrayCreateGetUTest.FrrayCreate with 3D farray on 2D dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for 90, line 671
DistGrid w/ ESMF_DATACOPY_VALUEArrayCreate from Ptr Test, ES  PASS  ArrayCreate with 3D farra  PASS  ArrayDestroy Test, ESMF_Arra Test, ESMF_ArrayCreateGetUTest.F90, line 6MF_ArrayCreateGetUTest.F90, line 623
y on 2D DistGrid Test, ESMF_ArrayCreateGyCreateGetUTest.F90, line 678
71
  PASS  ArrayDestro  PASS  ArrayGet TesetUTest.F90, line 653
y Test, ESMF_ArrayCreateGetUTestt, ESMF_ArrayCreateGetUTest.F9  PASS  ArrayDestroy Test, ES.F90, line 678
0, line 630
MF_ArrayCreateGetUTest.F90, lin  PASS    PASS  Deallocate returned pe 660
ArrayCreate with 3D farrayPtr onointer Test, ESMF_ArrayCreateG  PASS  ArrayCreate with 3D farrayPtr on 2D Dis 2D DistGrid w/ ESMF_DATACOPY_VAetUTest.F90, line 637
tGrid w/ ESMF_DATACOPY_VALUE TestLUE Test, ESMF_ArrayCreateGetUTest.  PASS  ArrayDestroy Test  PASS  ArrayCreate with 3D farray on, ESMF_ArrayCreateGetUTest.F90, line 689
F90, line 689
  PASS  Arra, ESMF_ArrayCreateGetUTest.F90, line 644 2D DistGrid w/ ESMF_DATACOPY_VALUE TestyDestroy Test, ESMF_ArrayCreateG
, ESMF_ArrayCreateGetUTest.F90,   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F9etUTest.F90, line 696
line 671
  0, line 696
PASS  ArrayDestroy Tes  PASS  Arrt, ESMF_ArrayCreateGetayCreate with 3D farrUTest.F90, line 678
ay on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
  PASS    PASS  ArrayArrayCreate with 3D farDestroy Test, ESMF_ArrayPtr on 2D DistGrid   PASS  rayCreateGetUTest.F90, line 660w/ ESMF_DATACOPY_VALUE Test, EArrayCreate with 3D farray on 2D
SMF_ArrayCreateGetUTest.F90, lin DistGrid w/ distgridToArrayMap Tee 689
st, ESMF_ArrayCreateGe  PASS  ArrayDestrotUTest.F90, line 708
y Test, ESMF_ArrayCr  P  PASS  ArrayCreate with 3DeateGetUTest.F90, line 696
ASS  ArrayDestroy Test, ESMF_Arr farray on 2D DistGrid w/ ESMayCreateGetUTest.F90, F_DATACOPY_VALUE Test,line 715
 ESMF_ArrayCreateGetU  PATest.F90, line 671
  PASS  ArrayCreate with 3D SS  ArrayCreate Allocate 2D ESMF_TYP  PASS  ArrayDestrfarray on 2D DistGrid w/ distgridEKIND_R8 w/ negative computationaloy Test, ESMF_ArrayCreateGetUTToArrayMap Test, ESMF_ArrayCre widths Test, ESMF_ArrayCreateGeest.F90, line 678
ateGetUTest.F90, line 708
tUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no  PASS  ArrayDestr
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xf7f040:
            rank = 2, typekind = 6, base_addr = 0x7fcd2c51e740
            oy Test, ESMF_ArrayCreadim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.94258e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
  PASS  ArrayCreate with  PASS  ArrayCreate with 3teGetUTest.F90, line 715
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS   3D farrayPtr on 2D DistGrid w/ ESMF_DATAD farray on 2D DistGrid w/ distgridToArraArrayPrint 2D ESMF_TYPEKIND_R8 w/ cCOPY_VALUE Test, ESMF_ArrayCreateyMap Test, ESMF_ArrayCreateGetUT  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative compomputational widths Test, ESMF_ArrayCreateGeGetUTest.F90, line 689
est.F90, line 708
  Putational widths Test, ESMF_ArrayCreateGetUtUTest.F90, line 732
  PA  PASS  ArrayDestroy Test, ESMF_ArrayASS  ArrayDestroy Test, ESMF_ArrayCreateTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = ReadySS  ArrayDestroy Test, ESMF_ArrayCreateGetUCreateGetUTest.F90, line 696
GetUTest.F90, line 715

 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x202b6f0:
            rank = 2, typekind = 6, base_addr = 0x7f5afb9236b0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.91835e-310
(10,13) =  303
(11,13) =  303
(12,13) =  303
Test.F90, line 739
  PASS  ArrayCrea(13,13) =  303
(14,13) =  303
(15,13) =  303
( 9,14) =  303
(10,14) =  303
(11,14) =  303
  skipping to end ...
(13,22) =  303
(14,22) =  303
(15,22) =  303
( 9,23) =  303
(10,23) =  303
(11,23) =  303
(12,23) =  303
(13,23) =  303
(14,23) =  303
(15,23) =  -3.01583e+58
  PASS  te Allocate 2D ESMF_TYPEKIND_R8 dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESArrayCreate Allocate 2D ESMF_TYPEKw/ negative computational widtMF_TYPEKIND_R8 w/ computational IND_R8 w/ computationalEdge widthhs Test, ESMF_ArrayCreateGetUTeswidths Test, ESMF_ArrayCreateGetUTs Test, ESMF_ArrayCreateGetUTestt.F90, line 725
--- ESMCI::Array::print start ---
est.F90, line 732
.F90, line 748
--- ESMCI::Array::print start ---
 Base name    =  Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
  PASS  ArrayDestroy Test, EMyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xf83340:
            rank = 2, typekind = 6, base_addr = 0x7fcd2c51e740
            LocalArrayPrint: Array at address 0x18a8830:
            rank = 2, typekind = 6, base_addr = 0x7f63a5dd0700
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  6.92019e-310
( 2,13) =  302
( 3,13) =  302
( 4,13) =  302
( 5,13) =  302
( 6,13) =  302
( 7,13) =  302
SMF_ArrayCreateGetUTest.F90, linedim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.94258e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 8,13) =  302
( 1,14) =  302
( 2,14) =  302
  skipping to end ...
( 7,22) =  302
( 8,22) =  302
( 1,23) =  302
( 2,23) =  302
( 3,23) =  302
( 4,23) =  302
( 5,23) =  302
( 6,23) =  302
( 7,23) =  302
( 8,23) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
 739
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  Ar  PASS  ArrayPrint 2D ESMF_TrayPrint 2D ESMF_TYPEKIYPEKIND_R8 w/ computati  PASS  ArrayCreate Allocate 2D ESMFND_R8 w/ computationalEdge widths Tonal widths Test, ESMF_ArrayCrea_TYPEKIND_R8 w/ computationalEdgeest, ESMF_ArrayCreateGetUTest.F9teGetUTest.F90, line 732
 widths Test, ESMF_ArrayCreateGe0, line 755
  PASS  ArrayDesttUTest.F90, line 748
  PASS  PASS  ArrayCreate with 3D farrroy Test, ESMF_ArrayCreateGetUTest.F90,--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x202b6f0:
            rank = 2, typekind = 6, base_addr = 0x7f5afb923c40
            dim[0] = 7  dim[1] = 12    ArrayGet 2D ESMF_TYPEKIND_R8 w/ computatiay on 2D DistGrid w/ distgridToArrayMap T line 739

  Real, *8, Dim 2, Data values:
( 9,13) =  2.74283e-317
(10,13) =  3.53751e-321
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,23) =  0
(14,23) =  0
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---onalEdge widths Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line   PASS  ArrayCreate 
  PASS  ArrayPrint 2D ESMF_TYPEKIND_Rest.F90, line 768
  PASS  C708
  PASS  ArrayDestrAllocate 2D ESMF_TYPEKIND_R8 w/ computatio8 w/ computationalEdge widths Test, ESMF_Arrheck total widths for 2D ESMF_TYPEKIND_R8 woy Test, ESMF_ArrayCreateGetUTest.F90, lnalEdge widths Test, ESMF_ArrayCreateGetayCreateGetUTest.F90, line 755
/ computationalEdge widths Test, ESMF_Arrayine 715
UTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative EdgeCreateGetUTest.F90, line 778
  PASS  ArrayCreate Allocate 
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18ae9e0:
            rank = 2, typekind = 6, base_addr = 0x7f63a5dd0d30
              PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w  PASS  ArrayDestroy Test, ES2D ESMF_TYPEKIND_R8 w/ negative computatdim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.74283e-317
( 2,13) =  3.53751e-321
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  0
( 3,24) =  0
( 4,24) =  0
( 5,24) =  0
/ computationalEdge widths Test, ESMF_ArrayMF_ArrayCreateGetUTest.F90, line 787
ional widths Test, ESMF_ArrayCreateGetU( 6,24) =  0
( 7,24) =  0
( 8,24) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMCreateGetUTest.F90, line 768
Test.F90, line 725
F_TYPEKIND_R8 w/ computational  PASS  Check total widths fo--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
Edge widths Test, ESMF_ArrayCrear 2D ESMF_TYPEKIND_R8 w/ computatio  PASS  ArraylocalDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x242a830:
            rank = 2, typekind = 6, base_addr = 0x7f9bb401a6e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.93208e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
teGetUTest.F90, line 755
nalEdge widths Test, ESMF_ArrayCreateGetUTeCreate Allocate 2D ESMF_TYPEKIND_R8 w/ com(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  Arrast.F90, line 778
putationalEdge and total widths TyPrint 2D ESMF_TYPEKIND_R8 w/ c  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ com  PASS  ArrayDestroy Test, ESMF_ArrayCreatest, ESMF_ArrayCreateGetUTest.F90, line 797omputational widths Test, ESMF_ArrayCreaputationalEdge widths Test, ESMF_ArrayeGetUTest.F90, line 787

--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
teGetUTest.F90, line 732
CreateGetUTest.F90, line 768
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xf7f040:
            rank = 2, typekind = 6, base_addr = 0x7fcd2c51edf0
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.74283e-317
( 1,-1) =  3.53751e-321
( 2,-1) =  0
( 3,-1) =  0
( 4,-1) =  0
( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
  PASS  ArrayDestroy Test,   PASS  Check total widths( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
ESMF_ArrayCreateGetUTest.F90,  for 2D ESMF_TYPEKIND_R8 w/ co  PASS  ArrayCreate Allocate 2D ESMF_TYP  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 wline 739
mputationalEdge widths Test, ESMF_ArrayCEKIND_R8 w/ computationalEdge and total wi/ computationalEdge and total widths Test,  PASS  ArrayCreate AllreateGetUTest.F90, line 778
dths Test, ESMF_ArrayCreateGetUTest.F90, lin ESMF_ArrayCreateGetUTest.F90, line 804
ocate 2D ESMF_TYPEKIND_R8 w/ computatio  PASS  ArrayDestroy Test, ESMF_Arraye 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
  PASS nalEdge widths Test, ESMF_ArrayCreateGetUCreateGetUTest.F90, line 787
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x202b6f0:
            rank = 2, typekind = 6, base_addr = 0x7f5afb923ef0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  0
( 9,11) =  0
(10,11) =  0
(11,11) =  0
(12,11) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
(16,11) =  0
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
(12,27) =  0
 ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = (13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayalEdge and total widths Test, ESMF_Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x24309e0:
            rank = 2, typekind = 6, base_addr = 0x7f9bb401a6e0
            dim[0] = 7  dim[1] = 12  
Print 2D ESMF_TYPEKIND_R8 w/ compuArrayCreateGetUTest.F90, line 816  Real, *8, Dim 2, Data values:
( 9, 1) =  6.93208e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
tationalEdge and total widths Te
  PASS  Check tot(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  Arr  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ compust, ESMF_ArrayCreateGetUTest.F90, line 804
al widths for 2D ESMF_TYPEKIND_R8 w/ computaayPrint 2D ESMF_TYPEKIND_R8 w/ computatitationalEdge and total widths Test, ESMF_AtionalEdge and total widths TestonalEdge widths Test, ESMF_ArrayrrayCreateGetUTest.F90, line 797
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ co, ESMF_ArrayCreateGetUTest.F90, line 824
CreateGetUTest.F90, line 755
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18ae9e0:
mputationalEdge and total widths Test, ESM  PASS  Check total bounds for             rank = 2, typekind = 6, base_addr = 0x7f63a5dd1040
            dim[0] = 12  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  0
( 1,11) =  0
( 2,11) =  0
( 3,11) =  0
( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  skipping to end ...
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
F_ArrayCreateGetUTest.F90, line 812D ESMF_TYPEKIND_R8 w/ computation  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
(11,27) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 6
  PASS  Check total widtalEdge and total widths Test, ESMF_ArrayC computationalEdge widths Test, ESMF_A2D ESMF_TYPEKIND_R8 w/ computationalEdge ahs for 2D ESMF_TYPEKIND_R8 w/ computationareateGetUTest.F90, line 834
rrayCreateGetUTest.F90, line 768
nd total widths Test, ESMF_ArrayCreateGetUTlEdge and total widths Test, ESMF_ArrayCrea  PASS  ArrayDestroy Test, ESMF_Arra  PASS  Check total widths for est.F90, line 804
teGetUTest.F90, line 824
 yCreateGetUTest.F90, line 855
2D ESMF_TYPEKIND_R8 w/ computationalEdge  PASS  ArrayGet 2D ESMF_TYPE PASS  Check total bounds for 2D ESMF_TYPE  PASS  Create t widths Test, ESMF_ArrayCreateGetUTest.KIND_R8 w/ computationalEdge and total widKIND_R8 w/ computationalEdge and total widest Array with ESMF_PIN_DE_TO_PET, ESMF_ArrF90, line 778
  PASS  ths Test, ESMF_ArrayCreateGetUTest.F90, linths Test, ESMF_ArrayCreateGetUTest.F90, liayCreateGetUTest.F90, line 864
ArrayDestroy Test, ESMF_ArrayCreateGetUe 816
  PASS  Check total wine 846
  PASS  ArrayDestr  PASS  ArrayGet Fortran array pointeTest.F90, line 787
dths for 2D ESMF_TYPEKIND_R8 w/ computatioy Test, ESMF_ArrayCreateGetUTest.F90, linr for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayConalEdge and total widths Test, e 855
reateGetUTest.F90, line 871
ESMF_ArrayCreateGetUTest.F90, li  PASS  Arrane 824
    PASS  Create test Array with ESMF_PIN_DE  PASS  ArrayDestroy TesyCreate Allocate 2D ESMF_TYPEKIND_R8 w/ PASS  Check total bounds for 2D ESMF_TYPEK_TO_PET, ESMF_ArrayCreateGetUTest.F90, lint for array with ESMF_PIN_DE_TO_PET, EcomputationalEdge and total widths Test, ESMFIND_R8 w/ computationalEdge and total widths Teste 864
  PASS  ArrayGet ForSMF_ArrayCreateGetUTest.F90, line 885
_ArrayCreateGetUTest.F90, line 797
, ESMF_ArrayCreateGetUTest.F90, line 842
tran array pointer for ESMF_PIN_DE_TO_PET --- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}  PASS  ArrayDestTest, ESMF_ArrayCreateGetUTest.FArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x242a830:
            rank = 2, typekind = 6, base_addr = 0x7f9bb401acd0
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  2.74283e-317
( 9,-1) =  3.53751e-321
(10,-1) =  0
(11,-1) =  0
roy Test, ESMF_ArrayCreateGetUTe90, line 871
(12,-1) =  0
(13,-1) =  0
(14,-1) =  0
(15,-1) =  0
(16,-1) =  0
(17,-1) =  0
  skipping to end ...
( 9,16) =  0
(10,16) =  0
(11,16) =  0
(12,16) =  0
(13,16) =  0
(14,16) =  0
(15,16) =  0
(16,16) =  0
(17,16) =  0
(18,16) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
st.F90, line 855
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  Arr  PASS  ArrayDestroy Test foayPrint 2D ESMF_TYPEKI  PASS  Create test Arrr array with ESMF_PIN_DE_TO_PET,ND_R8 w/ computationalEdge anday with ESMF_PIN_DE_TO_PET, ESMF_A ESMF_ArrayCreateGetUTest.F90, line  total widths Test, ESMF_ArrayCrrrayCreateGetUTest.F90, line 864
885
eateGetUTest.F90, line 804
  PASS  ArrayGet Fortran array pointer for E  PASS  ArraSMF_PIN_DE_TO_PET Test, yGet 2D ESMF_TYPEKIND_ESMF_ArrayCreateGetUTesR8 w/ computationalEdt.F90, line 871
ge and total widths Test, ESMF_ArrayCreateGetUT  PASS  ArrayDestroy Teest.F90, line 816
st for array with ESM  PASS  F_PIN_DE_TO_PET, ESMF_ArCheck total widths for rayCreateGetUTest.F90,2D ESMF_TYPEKIND_R8  line 885
w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 824
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 838
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F9DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
   895
  PASS  ArrayGet Fortran   PASS  ArrayGet Fortran array pointer for ESMF_PIN_D0, line 895
  PASS  ArrayGet ForPASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCrE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
tran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreSSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
eateGetUTest.F90, line 907
ateGetUTest.F90, line 907
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN  PASS  ArrayGet ss  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_D_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, lin  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI iLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
e 925
  PASS Test, ESMF_ArrayCreateGetUTest.F90, line 925
Test.F90, line 925
 ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test,  PASS  ArrayGet   PASS  ArrayGet localDeToDeMap ES  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, E ESMF_ArrayCreateGetUTest.F90, line 944
localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTestMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
SMF_ArrayCreateGetUTest.F90, line 944
.F90, line 944
  PASS  ArraySyn  PASS  ArraySync() for ESM  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCc() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F9F_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line Test, ESMF_ArrayCreateGetUTest.F90, line 966
reateGetUTest.F90, line 966
  PASS  LocalArray0, line 966
  PASS  LocalArrayGet Fortran arr 966
  PASS  LocalArrayGet Fortran arra  PASS  LocalArrayGet Fortran array pointer forGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_ay pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Testy pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI  last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayDE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
, ESMF_ArrayCreateGetUTest.F90, line 979
Test, ESMF_ArrayCreateGetUTest.F90, line 979
CreateGetUTest.F90, line 979
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_Arra  PASS  Test data in LyCreateGetUTest.F90, line 1009
  PASS  Test data in LocalArray for last ssiLocalDe focalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Tes  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test,or ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90t, ESMF_ArrayCreateGetUTest.F90, line 1009
 ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  ArrayC, line 1009
  PASS  ArrayCreate from Copy  PASS  ArrayCreate from Copy (REF), ESMF_PIN_  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_Arrreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90,  (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASayCreateGetUTest.F90, line 1023
  PASS  ArrayGet Fortran array pointer fline 1023
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI ar  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI S  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, or ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
rayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
ESMF_ArrayCreateGetUTest.F90, line 1035
  PASS  ArrayGet ssiLocalD  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_eCount ESMF_PIN_DE_TO_SSI arrayCpy Test, E  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI a  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
SMF_ArrayCreateGetUTest.F90, line 1053
rrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
SMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arra  PASS  ArrayGet localDeToD  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
yCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
eMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, li_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
ne 1072
  PASS  ArraySync() for   PASS  ArraySync() for ESMF_PIN_DE_TO_  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Tes  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTeESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
t, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  Locst.F90, line 1094
  PASS  LocalArrayGet Fortran array pointer  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for EalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_ for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUT ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
SMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 110SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
est.F90, line 1107
7
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUT  PASS  Test data in Local  PASS  Test data in LocalArray for last est.F90, line 1137
Array for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrassiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_A  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayyCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
rrayCreateGetUTest.F90, line 1137
CreateGetUTest.F90, line 1137
  PASS   PASS  ArrayDestroy Test for ar  PASS  ArrayDestroy Test for arrayCpy with E  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTerayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
SMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
, ESMF_ArrayCreateGetUTest.F90, line 1151
st.F90, line 1151
  PASS  Arr  PASS  ArrayCreate from Copy (  PASS  ArrayCreate from Copy (REF), ES  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TOayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTeREF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1MF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 11_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
st.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xfbc280:
            rank = 2, typekind = 6, base_addr = 0x7fcd37794000
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
66
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PAS--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18b5540:
            rank = 2, typekind = 6, base_addr = 0x7f63b1048000
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_Array( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xfdb430:
            rank = 2, typekind = 6, base_addr = 0x7fcd37795000
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
(13,11) =  10
(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(11,12) =  10
(12,12) =  10
(13,12) =  10
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---S  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateG( 8,13) =  20
( 1,14) =  20
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
( 2,23) =  20
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
( 6,23) =  20
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x18b5870:
            rank = 2, typekind = 6, base_addr = 0x7f63b1049000
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
(14,23) =  30
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
CreateGetUTest.F90, line 1177
  PASS  ArrayGet ss
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_AetUTest.F90, line 1177
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayoutiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F9rrayCreateGetUTest.F90, line 1177
    PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ Test, ESMF_ArrayCreateGetUTest.F90, line 1177
0, line 1185
  PASS  ArrayGet lPASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCrArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCocalDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, leateGetUTest.F90, line 1185
  P  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
ine 1204
  PASS  Test data in LocalArray for last ssASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateF_ArrayCreateGetUTest.F90, line 1204
  PASS  Test   PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, liGetUTest.F90, line 1204
data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy TesI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
ne 1236
t, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  PASS  ArraySync() for  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI   PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_Arra  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 125 ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
yCreateGetUTest.F90, line 1250
  PASS  ArrayDestroy Test for0
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELay arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, lSSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
 w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
out, ESMF_ArrayCreateGetUTest.F90, line 1262
ine 1262
  PASS  Ar  PASS  ArrayDestroy Test for array wi  PASS  ArrayDestroy Test for array with ESMF_PIN_DE  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TOrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, lth ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
ine 1274
  PASS  ArrayCreate AssmdShape 1D E  PASS  ArrayCreate AssmdShape 1D ESMF_TY  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArSMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
PEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, linrayCreateGetUTest.F90, line 1296
  PASS  ArrayGet Fort  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKe 1296
  PASS  ArrayGet Fortran array pointer, ran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, li8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
IND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
ne 1303
  PASS  ArrayGet w/ incompatible Fortran arra  PASS  ArrayGet w/ in  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D y pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.compatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test,  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xfda460:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
 ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
F_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2037960:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  Array( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCre{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2438440:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18b60f0:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PAPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
ateGetUTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_ArrayCre 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
SS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUT  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, lineateGetUTest.F90, line 1324
  PASS  ArrayCre  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
est.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_Arra 1324
  PASS  ArrayCreate AssmdShape 1Date AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF  PASS  ArrayCreate AssmdShape 1D ESMFyCreateGetUTest.F90, line 1324
   ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetU_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xfda460:
            rank = 1, typekind = 6, _TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTPASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationaTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2037960:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ est.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2438440:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
lEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negativnegative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ --- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x18b60f0:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASSe computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 13  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, lin  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computational40
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, li  PASS  e 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTeEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
ne 1347
 ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, list.F90, line 1347
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
 PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.Fne 1366
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_90, line 1366
  PASS  ArrayGet Fortran array poiR8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
ArrayCreateGetUTest.F90, line 1366
  PASS  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Testnter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayGet w/ incompatible   ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrea, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayFortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
Get Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ES  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreteGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCre  PASS  ArrayGet w/ incompatible Fortran arraMF_ArrayCreateGetUTest.F90, line 1373
ateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCateGetUTest.F90, line 1387
  Py pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 138  PASS  ArrayGet w/ incompatible Fortran arrreateGetUTest.F90, line 1387
ASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, ay pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F0, line 1406
  PASS  ArrayGet Fortran arrline 1387
  PASS  Arr 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTe90, line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEay pointer, 3D ESMF_TYPEKIND_R4 TestayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, st.F90, line 1387
  KIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  Array, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Tesline 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMFPASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
t, ESMF_ArrayCreateGetUTest.F90, line 1420
_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
GetUTest.F90, line 1406
  PASS  ArrayGet Fortran arra  PASS  ArrayCreate AssmdSh  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, ly pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_Arra  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
ape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
ine 1420
yCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Test,  PASS  ArrayGet Fortran array pointer, 4D ESMF_  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  Test, ESMF_ArrayCreateGetUTest.F90, line 1439
  PA  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1 ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
SS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4   PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUT453
Test, ESMF_ArrayCreateGetUTest.F90, line 1446
est.F90, line 1439
  PASS  ArrayG  PASS  ArrayDestroy Test, ESMF_Arret Fortran array pointer, 4D ESMF_TYPEKINayCreateGetUTest.F90, line 1453
D_I4 Test, ESMF_ArrayCreateGetUTest.F90,   PASS  Create test Array line 1446
  PASS  ArrayDe  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTesfor extra edge element test, ESMF_ArrayCreateGetUTest.F90, linestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
t.F90, line 1514
 1514
  PASS  Ar  PASS  ArrayDestroy Test, ESMF_ArrayCreaterayDestroy Test, ESMF_ArrayCreateGetUTest.F90,  PASS  Create test Array for extra edge element test, ESMF_GetUTest.F90, line 1543
 line 1543
ArrayCreateGetUTest.F90, line 1514
  PASS  Create Array on single DE DistGrid, ESMF_Array  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreate  PASS  Create test Array for extra edge element test, ESMF_ACreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
GetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
rrayCreateGetUTest.F90, line 1514
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetU
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0xfda460:
            rank = 1, typekind = 6, base_addr = 0x7fcd2c51e330
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  6.94258e-310
( 2) =  9.311e-13
( 3) =  -1.07501e+59
( 4) =  6.60776e-317
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE Dist  PASS  Create Array on  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS  ArrayDestro single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---Test.F90, line 1543
  PUTest.F90, line 1576
  PASS  Create Array on single y Test, ESMF_ArrayCreateGetUTest.F90, line 1576

 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DEASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, linDE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCr DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASe 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPr  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 159eateGetUTest.F90, line 1592
  PASS  ArrayDestroy Test, ESMF_S  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
int Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
9
  PASS  Create Array on 4 DE DiArrayCreateGetUTest.F90, line 1599
  PASS  Create Array on single DE DistGrid with F  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90,stGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTes  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortraortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
 line 1576
  PASS  Create Array on single Dt.F90, line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGn allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  A  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
E DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
etUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTerrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  En  PASS  Create Array on 4   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90st.F90, line 1644
ding Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_Array, line 1599
  PASS  CreatCreateGetUTest.F90, line 1627
e Array on 4 DE DistGrid with only DE 0 el  PASS  ArrayDestroy Test, ESMF_Arraements, with Fortran allocation, ESMF_ArryCreateGetUTest.F90, line 1634
ayCreateGetUTest.F90, line 1627
  Ending Test, file ESMF_ArrayCre  PASS  ArrayDestroy Test, ESMFateGetUTest.F90, line 1644
_ArrayCreateGetUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PET 2  Test Elapsed Time   49.9630000000000081  msec.
  PET 0  Test Elapsed Time    1.0287100000000000E  PET 1  Test Elapsed Time   49.9  PET 3  Test Elapsed Time   48.6379999999999839  +02  msec.
239999999999995  msec.
msec.
[mpiexec@i031.cgd.ucar.edu] HYDT_bscd_pbs_wait_for_completion (tools/bootstrap/external/pbs_wait.c:67): tm_poll(obit_event) failed with TM error 17002
[mpiexec@i031.cgd.ucar.edu] HYDT_bsci_wait_for_completion (tools/bootstrap/src/bsci_wait.c:23): launcher returned error waiting for completion
[mpiexec@i031.cgd.ucar.edu] HYD_pmci_wait_for_completion (pm/pmiserv/pmiserv_pmci.c:218): launcher returned error waiting for completion
[mpiexec@i031.cgd.ucar.edu] main (ui/mpich/mpiexec.c:340): process manager error waiting for completion
