build time -- 2022-05-27 05:30:19.693917
  Beginning Test, file ESMF_ArrayCreateGetU  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_P  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROCESSTest.F90, line 97
  NUMBER_OF_PROCESSORS 4
  NUMBER_OF_PROCESSORS 4
ROCESSORS 4
ORS 4
  PA  PASS   PASS  TestiSS  Testing Array   PASS  Testing Array Testing Array IsCreng Array IsCreated for uncreateIsCreated for uncreated object, ESMF_A IsCreated for uncreated object, ESMF_ArrayCreated for uncreated object, ESMF_ArrayCreateGetUTesd object, ESMF_ArrayCreateGetUTest.F90, line 1rrayCreateGetUTest.F90, line 118
ateGetUTest.F90, line 118
t.F90, line 118
  PASS  18
  PASS  Testing Array   PASS  Testing Array IsCreated for uncreated o  PASS  Testing Array IsCreated for uncreaTesting Array IsCreated for uncreated object, IsCreated for uncreated object, ESMF_ArrayCreatbject, ESMF_ArrayCreateGetUTest.F90, line 125
ted object, ESMF_ArrayCreateGetUTest.F90, lineESMF_ArrayCreateGetUTest.F90, line 125eGetUTest.F90, line 125
 125

  PASS  Create test Array for IsCreate  PASS  Create test   PASS  Create test Array for IsCred, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Create test Array for IsCreated, ESMF_ArrayCrArray for IsCreated, ESMF_ArrayCreateGeated, ESMF_ArrayCreateGetUTest.F90, lin  PASS  Testing Array IseateGetUTest.F90, line 143
tUTest.F90, line 143
e 143
  PASS  Created for created object, ESMF_ArrayCreate  PASS  Testing ArrayTesting Array IsCreated for cGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_A IsCreated for created object, ESMF_Arreated object, ESMF_ArrayCreateGetUTest  PASS  Testing Array IsCreated for crearrayCreateGetUTest.F90, line 150
rayCreateGetUTest.F90, line 150
.F90, line 150
  PASS  Testinted object, ESMF_ArrayCreateGetUTest.F90, line   PASS  Testing Array IsCreated fo  PASS  Testing Array IsCreated forg Array IsCreated for created object, ESM157
  Pr created object, ESMF_ArrayCreateGetUTest.F90, created object, ESMF_ArrayCreateGetUTest.F90F_ArrayCreateGetUTest.F90, line 157
ASS  Destroy test Array for IsCreated, ESMF_A line 157
, line 157
  PASS  DestrorrayCreateGetUTest.F90, line 164
  PASS  Destroy test Array for IsCre  PASS  Destroy test Array for IsCreaty test Array for IsCreated, ESMF_ArrayCrea  PASS  Testing Array IsCreated for destroyated, ESMF_ArrayCreateGetUTest.F90, line 16ed, ESMF_ArrayCreateGetUTest.F90, line 164teGetUTest.F90, line 164
ed object, ESMF_ArrayCreateGetUTest.F90, line 14
  PASS  Testing Array Is
  PASS  Testing Array I  PASS  Testing Array IsCreated for destroy71
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCresCreated for destroyed object, ESMF_ArrayCed object, ESMF_ArrayCreateGetUTest.F90, lCreated for destroyed object, ESMF_ArrayCreateateGetUTest.F90, line 171
reateGetUTest.F90, line 171
ine 171
  PASS  TestingGetUTest.F90, line 178
  PASS  Testing Array IsCreated for destr  PASS  Testing Array IsCreated for d Array IsCreated for destroyed object, ESMFoyed object, ESMF_ArrayCreateGetUTestroyed object, ESMF_ArrayCreat_ArrayCreateGetUTest.F90, line 1est.F90, line 178
eGetUTest.F90, line 178
78
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 18  PAS6
  PASS  ArrayCreate Allocate 2D E  PASS  ArrayCreate AllS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8  PASS  Array equality before assignment TesSMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTeocate 2D ESMF_TYPEKIND_R8 Test, ESMF_Arra Test, ESMF_ArrayCreateGetUTest.F90, line t, ESMF_ArrayCreateGetUTest.F90, line 193
st.F90, line 186
yCreateGetUTest.F90, line 186
186
  PASS  Array   PASS  Array assignment and equa  PASS  Array equality before assignment Tes  PASS  Array equality before asequality before assignment Test, ESMF_Arraylity Test, ESMF_ArrayCreateGetUTest.F90, line t, ESMF_ArrayCreateGetUTest.F90, line 193
signment Test, ESMF_ArrayCreateGetUTest.F9CreateGetUTest.F90, line 193
202
  PASS  ArrayDestroy T0, line 193
  P  PASS  Array assignment and est, ESMF_ArrayCreateGetUTest.F90,   PASS  Array assignment and equality Test, ESMF_ArrayCreateASS  Array assignment and equality Test, equality Test, ESMF_ArrayCreateGetUTest.F9line 209
  PASS  Array equaliGetUTest.F90, line 202
ESMF_ArrayCreateGetUTest.F90, line 202
0, line 202
  Pty after destroy Test, ESMF_ArrayCreateGetUTe  PASS  ArrayDestroy Test, ESMF_ArrayCreat  PASS  ArrayDestroy ASS  ArrayDestroy Test, ESMF_ArrayCreateGetUst.F90, line 217
  PASS  ArraeGetUTest.F90, line 209
Test, ESMF_ArrayCreateGetUTest.F90, line 20Test.F90, line 209
  PASS y non-equality after destroy Test, ESMF_ArrayC  PASS  Array equality after destroy Test, 9
  PASS  Array equality Array equality after destroy Test, ESMF_ArreateGetUTest.F90, line 225
ESMF_ArrayCreateGetUTest.F90, line 217
 after destroy Test, ESMF_ArrayCreateGetUrayCreateGetUTest.F90, line 217
  PASS  Double ArrayDestroy through alias TesTest.F90, line 217
  PASS  Array non-equality t, ESMF_ArrayCreateGetUTest.F90, li  PASS  Array non-equality after destroy Test, ESMF_ArrayCreateGetUTes  PASS  Array non-equality after desafter destroy Test, ESMF_ArrayCreateGetUTene 232
t.F90, line 225
  PASS  Doutroy Test, ESMF_ArrayCreateGetUTest.F90, lst.F90, line 225
  PASS ble ArrayDestroy through alias Test,ine 225
  PA Double ArrayDestroy through alias ESMF_ArrayCreateGetUTest.F90, line SS  Double ArrayDestroy through Test, ESMF_ArrayCreateGetUTest.232
 alias Test, ESMF_ArrayCreateGeF90, line 232
  PASS  ArrayCreate Allocate 2tUTest.F90, line 232
D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
  PASS  ArrayCreate Allocate 2D ESMF  PASS  A_TYPEKIND_R8 rank inconsist  PArrayCreate Allocate 2D ESMF_TYPEKI  PASS  ArrayCreate Alloency Test, ESMF_ArrayCreateGetUTest.F90, line 2SS  ArrayCreate Allocate 2D ESMF_TYPEKIND_ND_R8 rank inconsistency Test, ESMF_ArrayCrcate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG41
R8 rank inconsistency Test, ESMF_ArrayCreaeateGetUTest.F90, line 241
etUTest.F90, line 249
teGetUTest.F90, line 241
  PASS  ArrayCreate Al  PASS  ArraySet Test, Elocate 2D ESMF_TYPEKIND_R8  PASSMF_ArrayCreateGetUTest.F90, line 256
 Test, ESMF_ArrayCreateGetUTest.F90, l  PASS  ArraS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 T  PASS  ArrayDestroy Testine 249
yCreate Allocate 2D ESMF_TYPEKIND_R8 Testest, ESMF_ArrayCreateGetUTest.F90, line 24, ESMF_ArrayCreateGetUTest.F90, line 263
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 249
9
  P.F90, line 256
ASS  ArraySet Test, ESM  PASS  ArrayDestroy Te  PASS  ArraySet TesF_ArrayCreateGetUTest.F90, line 25st, ESMF_ArrayCreateGetUTest.F90, lint, ESMF_ArrayCreateGetUTest.F90, 6
  PASS  e 263
line 256
 ArrayDestroy Test, ESMF_ArrayCre  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Te PASS  ArrayDestroy Test, ESMF_AateGetUTest.F90, line 263
st w/ ArraySpec, ESMF_ArrayCreateGetrrayCreateGetUTest.F90, line 263
UTest.F90, line 277
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test  PASS  ArrayCre w/ ArraySpec, ESMF_Arrayate Allocate 2D ESMF_TYPECreateGetUTest.F90, line   PASS  ArrayCreate AlloKIND_R8 Test with ArraySpec, ESMF_A277
  PASS  ArrayCreate Alcate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpecrrayCreateGetUTest.F90, line 285
locate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, l  PASS  ArrayCreate Allocate 2D ESMF_T w/ ArraySpec, ESMF_ArrayCreateGeine 277
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
YPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreattUTest.F90, line 277
eGetUTest.F90, line 285
  PASS  ArrayCreate Allocate 2D  PASS  Ar ESMF_TYPEKIND_R8 Test --- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = ReadyrayCreate Allocate 2D ESMF_TYPEwith ArraySpec, ESMF_ArrayCreate,  object = Ready
 Proxy        = no
 Root Info (Attributes):
KIND_R8 Test with ArraySpec, ESGetUTest.F90, line 285
MF_ArrayCreateGetUTest.F90, line 2--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
85
--- ESMCI::Array::print start ---

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
LocalArrayPrint: Array at address 0xd579b0:
            rank = 2, typekind = 6, base_addr = 0x7fba532c0700
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = ( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
no
 Root Info (Attributes):
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPr{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
int 2D ESMF_TYPEKIND_R8 T~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17c79b0:
            rank = 2, typekind = 6, base_addr = 0x7f3eb864f6b0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
est, ESMF_ArrayCreateGet( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
UTest.F90, line 292
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
 {} PASS  ArrayPrint 2D ESMF_TArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x27139b0:
            rank = 2, typekind = 6, base_addr = 0x7f47e0a596e0
            YPEKIND_R8 Test, ESMF_Arra{}dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
 Array name: MyArray with ArrayyCreateGetUTest.F90, line 292
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x999040:
            rank = 2, typekind = 6, base_addr = 0x7f3072e7e740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS Spec                                           ( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
 ArrayPrint 2D ESMF_TYPEKIND_R8 Te               
  PASS  ArrayGedim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_st, ESMF_ArrayCreateGetUTest.F90, lint arrayspec and name, 2D ESMF_TYPEKI Array name: MyArray with ArraySpec                         TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90,e 292
ND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line                                  
  PASS   line 292
 Array name: M300
  PASS  Verify ArraySArrayGet arrayspec and name, 2D ESMF_TYPEKIND_R Array nyArray with ArraySpec                         pec returned from Array, ESMF_ArrayCreateGetUTe8 Test, ESMF_ArrayCreateGetUTest.F90, line 300
ame: MyArray with ArraySpec                                                   
  PASS  st.F90, line 306
  PA                                 ArrayGet arrayspec and name, 2D ESMSS  Verify name returned from Array,  PASS  Verify ArraySpec returned from Array, ESMF_ArrayCreate       
  PASS  ArrayGet arrayspec and nF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F ESMF_ArrayCreateGetUTest.F90, line 312
GetUTest.F90, line 306
ame, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrea90, line 300
  PASS  Verif  PASS  Verify name returned from ArteGetUTest.F90, line 300
y ArraySpec returned from Array, ES  PASS  ArrayGet Fortran array pointer, 2D ESMF_ray, ESMF_ArrayCreateGetUTest.F90, line 312
  PASS  Verify ArraySpec returned MF_ArrayCreateGetUTest.F90, line 306
TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90from Array, ESMF_ArrayCreateGetUTes  PASS  Verify name r, line 319
  PASS  ArrayGet Fortran array pointer, 2D ESt.F90, line 306
  PASeturned from Array, ESMF_ArrayCreateGetUTest.F90MF_TYPEKIND_R8 Test, ESMF_ArrayCrS  Verify name returned from Array, E, line 312
eateGetUTest.F90, line 319
SMF_ArrayCreateGetUTest.F90, line 3  PASS  ArrayGet Fortr12
an array pointer, 2D ESM  PASS F_TYPEKIND_R8 Test, ESMF_ ArrayGet Fortran array ArrayCreateGetUTest.F90, pointer, 2D ESMF_TYPEKINDline 319
_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
  PASS  Getting Attribut  PASS  Getting e count from an Array, EAttribute count from an   PASS SMF_ArrayCreateGetUTest.F90, lineArray, ESMF_ArrayCreateGetUTest.F9 Getting Attribute count from an A 326
  P0, line 326
  PASS  rray, ESMF_ArrayCreateGetUTest.F90, line 326ASS  Verify Attribute count from an Array, E  PASS  Verify Attribute count from an ArGetting Attribute count from an Array, ESMF_A
  PASS  Verify AtSMF_ArrayCreateGetUTest.F90, line 332
ray, ESMF_ArrayCreateGetUTest.F90, line 332
rrayCreateGetUTest.F90, line 326
tribute count from an Array, ESMF_ArrayCrea  PASS teGetUTest.F90, line 332  PASS  ArrayCreate from Copy, u Verify Attribute count from an A
ninitialized Array Test, ESMF_Arra  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMrray, ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  ArrayCreate from Copy, unyCreateGetUTest.F90, line 339
F_ArrayCreateGetUTest.F90, line 339
initialized Array Test, ESMF_Arr  PASS  ArrayCreateGetUTest.F90, ayCreate from Copy, uline 339
ninitialized Array Tes  PASS  Arrayt, ESMF_ArrayCreateGetUCreate from Copy (ALLOC  PASS  ArrayCreate from Copy (ALTest.F90, line 339
), 2D ESMF_TYPEKIND_R8 Test, ESMFLOC), 2D ESMF_TYPEKIND_R8 Test, E  PASS  ArrayCreate fr_ArrayCreateGetUTest.F90, line 347
SMF_ArrayCreateGetUTest.F90, line 3om Copy (ALLOC), 2D ESMF_TYPEKIND_R47
  PASS  A8 Test, ESMF_ArrayCreateGetUTest.rrayCreate from Copy (F90, line 347
 Array name: Array007                      Array name: Array007                 ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_Array                                                                     CreateGetUTest.F90, line 347
 Array name: Array007                                     
  PASS  ArrayGet arrays                    
  PASS  ArrayGet arr                                pec from Array Copy (ALLOC) Test, ayspec from Array Copy (ALLOC) Tes Array name: Array007                               
  PASS  ArrayGet arESMF_ArrayCreateGetUTest.F90, line 355
t, ESMF_ArrayCreateGetUTest.F90, line 355
                                        rayspec from Array Copy (ALLOC) Test, ESMF  PASS  Verify ArraySpec retur                     
  PASS_ArrayCreateGetUTest.F90, line 355ned from Array (ALLOC) Copy, ESMF_  PASS  Verify ArraySpec returned from Array (ALLOC) Copy, ES  ArrayGet arrayspec from Array Copy (ALLO
  PASS  Verify ArraySpecArrayCreateGetUTest.F90, line 361
MF_ArrayCreateGetUTest.F90, line 361
C) Test, ESMF_ArrayCreateGetUTest.F90, li returned from Array (ALLOC) Copy, ESMF_Ar  PASS  ArrayGet Fortran arrane 355
  PASS  VrayCreateGetUTest.F90, line 361
y pointer, from Array Copy (ALLOC)  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOerify ArraySpec returned from Array (ALLOC  PASS  ArrayGet Fort Test, ESMF_ArrayCreateGetUTest.F90, line 36C) Test, ESMF_ArrayCreateGetUTest.F90, line) Copy, ESMF_ArrayCreateGetUTest.F90, line 3ran array pointer, from Array Copy (ALLOC) 8
 368
61
  PASS  ArrayGetTest, ESMF_ArrayCreateGetUTest.F90, line 36 Fortran array pointer,8
 from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line   PASS384
  Verify Array vs Arra  PASSy Copy (ALLOC) no data  Verify Array vs Arr copy, ESMF_ArrayCreatay Copy (ALLOC) no eGetUTest.F90,data copy, E line 384
SMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
  PASS  Veri--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = nofy Array vs Array Copy (ALLOC  PASS  Verify Array vs Array Co
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17c8820:
            rank = 2, typekind = 6, base_addr = 0x7f3eb864f930
) separate memory allocation, ESMFpy (ALLOC) separate memory alloca            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  103
(10,13) =  103
(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103
(15,13) =  103
( 9,14) =  103
(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
_ArrayCreateGetUTest.F90, line 40tion, ESMF_ArrayCreateGetUTest.F9(15,22) =  103
( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
(13,23) =  103
(14,23) =  103
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PA2
  PASS0, line 402
SS  ArrayPrint from Copy (ALLOC) a  ArrayDestroy Test, ESMF_ArrayCr  PASS  ArrayDestroy Test, ESMF_After original destroy, 2D ESMF_TYeateGetUTest.F90, line 409
rrayCreateGetUTest.F90, line 409PEKIND_R8 Test, ESMF_ArrayCreateG--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
etUTest.F90, line 416
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2714820:
            rank = 2, typekind = 6, base_addr = 0x7f47e0a59990
             Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
  PASS  ArrayDestroy ofdim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
(10, 1) =  101
(11, 1) =  101
(12, 1) =  101
(13, 1) =  101
(14, 1) =  101
(15, 1) =  101
( 9, 2) =  101
(10, 2) =  101
(11, 2) =  101
  skipping to end ...
(13,11) =  101
(14,11) =  101
(15,11) =  101
( 9,12) =  101
LocalArrayPrint: Array at address 0xd58820:
            rank = 2, typekind = 6, base_addr = 0x7fba532c09d0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  102
( 2,13) =  102
( 3,13) =  102
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
( 2,14) =  102
  skipping to end ...
( 7,22) =  102
 Copy (ALLOC) Test, ESMF_ArrayCrea(10,12) =  101
(11,12) =  101
(12,12) =  101
(13,12) =  101
(14,12) =  101
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  A( 8,22) =  102
( 1,23) =  102
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PteGetUTest.F90, line 423
  PASS  Verify Array vs Array CrrayPrint from Copy (ALLOC) after original ASS  ArrayPrint from Copy (ALLOC) after origopy (ALLOC) separate memory allodestroy, 2D ESMF_TYPEKIND_R8 Teinal destroy, 2D ESMF_TYPEKIND_Rcation, ESMF_ArrayCreateGetUTestst, ESMF_ArrayCreateGetUTest.F90, 8 Test, ESMF_ArrayCreateGetUTest.F9  PASS  ArrayCreate Allocate 2D E.F90, line 402
  PAline 416
  PASS  ArrayD0, line 416
  PASS  ArSMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrSS  ArrayDestroy Test, ESMF_ArrayCreateGetUestroy of Copy (ALLOC) Test, ESMF_ArrayCrearayDestroy of Copy (ALLOC) Test, ESMF_ArrayayCreateGetUTest.F90, line 431
Test.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
teGetUTest.F90, line 423
CreateGetUTest.F90, line 423
  PASS  ArrayGet Fortran array po Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
inter, 2D ESMF_TYPEKINLocalArrayPrint: Array at address 0x999cf0:
            rank = 2, typekind = 6, base_addr = 0x7f3072e7ea50
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
D_R8 Test, ESMF_ArrayCr( 5, 1) =  100
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
( 8,11) =  100
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
  PASS  ArrayCreate eateGetUTest.F90, line 438
( 4,12) =  100
( 5,12) =  100
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  AAllocate 2D ESMF_TYPEKIND_R8 Test  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 TerrayPrint from Copy (ALLOC) after  with ArraySpec, ESMF_ArrayCreateGest with ArraySpec, ESMF_ArrayCreateGeoriginal destroy, 2D ESMF_TYPEKINDtUTest.F90, line 431
tUTest.F90, line 431
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ES_R8 Test, ESMF_ArrayCreateGetUTest.F90, lin  PASS  ArrayGet Fortran array poin  PASS  ArrayGet Fortran array poMF_ArrayCreateGetUTest.F90, line 446
e 416
  PASS  ArrayDter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCinter, 2D ESMF_TYPEKIND_R8 Test, ESMF_Arrayestroy of Copy (ALLOC) Test, ESMreateGetUTest.F90, line 438
CreateGetUTest.F90, line 438
 Array name: Array009               F_ArrayCreateGetUTest.F90, line 423
                         PASS  Arr                         ayCreate from Copy (VALU  PASS  ArrayCreate from Cop         
  PASS  Arra  PASE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCry (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArryGet arrayspec from Array Copy (VALUE) Test, ESS  ArrayCreate Allocate 2D ESMF_TYPEKIND_eateGetUTest.F90, line 446
ayCreateGetUTest.F90, line 446
MF_ArrayCreateGetUTest.F90, line 454
R8 Test with ArraySpec, ESMF_ArrayCreateGe Array name: Ar  PASS  Verify ArraySpec tUTest.F90, line 431
ray009                           Array name: Array009                               returned from Array (VALUE) Copy, ESMF_ArrayC  PASS  ArrayGet Fortran arra                                                                                   
reateGetUTest.F90, line 460
y pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF    
  PASS  ArrayGet arrayspec from   PASS  ArrayGet arrayspec from Array Copy (V  PASS  ArrayGet Fortran array pointer, fr_ArrayCreateGetUTest.F90, line 438
Array Copy (VALUE) Test, ESMF_ArrayCreateALUE) Test, ESMF_ArrayCreateGetUTest.F90, linom Array Copy (VALUE) Test, ESMF_ArrayCreateGeGetUTest.F90, line 454
e 454
  PASS  VetUTest.F90, line 467
  PASS  ArrayCreate from Copy (VALU  PASS  Verify ArraySpec returned frify ArraySpec returned from Array (VALUE) CopE), 2D ESMF_TYPEKIND_R8 Test, Erom Array (VALUE) Copy, ESMF_Arry, ESMF_ArrayCreateGetUTest.F90, liSMF_ArrayCreateGetUTest.F90, layCreateGetUTest.F90, line 460
ne 460
  PASSine 446
  ArrayGet Fortran array  PASS  ArrayGet Fortran  pointer, from Array Copy ( Array name: Array009       array pointer, from Array Copy (VAVALUE) Test, ESMF_ArrayCreateGetUTe                               LUE) Test, ESMF_ArrayCreateGetUTst.F90, line 467
                               est.F90, line 467
   
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (  PASS  VerifyVALUE) data copy, ESMF_Array Array vs Array Copy (VALCreateGetUTest.F90, line 483UE) data copy, ESMF_Array
CreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with Arr  PASaySpec, ESMF_ArrayCreateGet  PASS  VS  Verify Array vs Array Copy (VALUE) separatUTest.F90, line 523
erify Array vs Array Copy (VALUE) separate e memory allocation, ESMF_ArrayCre  PASS  ArrayGet Fortran array memory allocation, ESMF_ArrayCreaateGetUTest.F90, line 501
pointer, 2D ESMF_TYPEKIND_R8 Test,teGetUTest.F90, line 501
  PASS  ArrayDestr ESMF_ArrayCreateGetUTest.F90, li  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTestne 530
oy Test, ESMF_ArrayCreateGetUTest.F90, line 508
.F90, line 508
  PASS  ArrayDestroy o  PASS  ArrayCreate fr  PASS  ArrayDestroyf Copy (VALUE) Test, ESMF_ArrayCreom Copy (REF), 2D ESMF_TYPEKIND_R8 of Copy (VALUE) Test, ESMF_ArraateGetUTest.F90, line 515
 Test, ESMF_ArrayCreateGetUTest.FyCreateGetUTest.F90, line 515
90, line 538
  PASS  Array name: Array  PAS ArrayCreate Allocate 2D ESMF_TYPEK011                              S  ArrayCreate Allocate 2D ESMF_TIND_R8 Test with ArraySpec, ESMF_A                                   YPEKIND_R8 Test with ArraySpec, ESrrayCreateGetUTest.F90, line 523
       
  PASS  ArrayGet arrMF_ArrayCreateGetUTest.F90, lineayspec from Array Copy 523
  PASS  ArrayGet Fortran array (REF) Test, ESMF_ArrayCreateGetU  PASS  ArrayGet Fortran ar pointer, 2D ESMF_TYPEKIND_R8 TesTest.F90, line 546
ray pointer, 2D ESMF_TYPEKIND_R8t, ESMF_ArrayCreateGetUTest.F90,   PASS  Verify ArraySpec re Test, ESMF_ArrayCreateGetUTestline 530
turned from Array Copy (REF), ESMF.F90, line 530
_ArrayCreateGetUTest.F9  PASS  Verify Arra  PASS  ArrayCreate f0, line 552
y vs Array Copy (VALUE) separate   PASS  ArrayCreate from Corom Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ES  PASS  ArrayGet Fortran array pointer, fromemory allocation, ESMF_ArrayCreateGetUTepy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArMF_ArrayCreateGetUTest.F90, line 538
m Array Copy (REF) Test, ESMF_ArrayCreateGetst.F90, line 501
  rayCreateGetUTest.F90, line 538
UTest.F90, line 559
PASS  ArrayDestroy Test, ESMF_Arr Array name: Array011        ayCreateGetUTest.F90, l Array name: Array011                                  ine 508
  PASS                                                                 
  ArrayDestroy of Copy (VALUE) T                                  PASS  ArrayGet arrayspec frest, ESMF_ArrayCreateGetUTest.F     
  PASS  ArrayGet arrayom Array Copy (REF) Test, ESMF_Arr90, line 515
spec from Array Copy (REF) Test,ayCreateGetUTest.F90, line 546
 ESMF_ArrayCreateGetUTest.F90, line   PASS  Verify Array  PASS  ArrayCr546
  PASS Spec returned from Array Copy (REeate Allocate 2D ESMF_TYPEKIND_R Verify ArraySpec returned from AF), ESMF_ArrayCreateGetUTest.F90,8 Test with ArraySpec, ESMF_Arrarray Copy (REF), ESMF_ArrayCreat line 552
  yCreateGetUTest.F90, line 523
eGetUTest.F90, line 552
PASS  ArrayGet Fortran array poin  PASS  A  PASS  ArrayGet Fortter, from Array Copy (REF) Test, ErrayGet Fortran array pointer, 2ran array pointer, from Array CopSMF_ArrayCreateGetUTest.F90, linD ESMF_TYPEKIND_R8 Test, ESMF_Ay (REF) Test, ESMF_ArrayCreateGee 559
rrayCreateGetUTest.F90, line 53tUTest.F90, line 559
0
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  V  PASS  erify Array vs Array CoVerify ArraySpec returnpy (REF) shared allocated from Array Copy (REion Test1, ESMF_ArrayCrF), ESMF_ArrayCreateGeeateGetUTest.F90, line tUTest.F90, line 552
575
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  PASS  Verify A  Verify Array vs Array Crray vs Array Copy (REF)opy (REF) shared alloca shared allocation Testtion Test1, ESMF_Array1, ESMF_ArrayCreateGetUCreateGetUTest.F90, linTest.F90, line 575
e 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation  PASS  Verify Array vs A Test2, ESMF_ArrayCrearray Copy (REF) sharedteGetUTest.F90, line 59 allocation Test2, ESMF3
  _ArrayCreateGetUTest.F9PASS  ArrayDestroy Test0, line 593
, ESMF_ArrayCreateGetUT  PASS  ArrayDestrest.F90, line 600
oy Test, ESMF_ArrayCre  PASS  ArateGetUTest.F90, line 60rayDestroy of Copy Test0
  P, ESMF_ArrayCreateGetUASS  ArrayDestroy of CTest.F90, line 607
opy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17c79b0:
            rank = 3, typekind = 5, base_addr = 0x7f3eb864fc40
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
  PASS  Verify Arr  PASS  Deallocate returneay vs Array Copy (REF) d pointer Test, ESMF_Arshared allocation Test2  PASS  ArrayCreaterayCreateGetUTest.F90, line 637
, ESMF_ArrayCreateGetUTest.F90,  from Ptr with 3D farray on 2D Diline 593
  PASS  ArrayCreate from stGrid Test as Ptr, ESMF_ArrayCre  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest  PASS  ArrayDestroy Test, ESMF_ArrayPtr with 3D farray on 2D DistGrid Test as PateGetUTest.F90, line 616
--- ESMCI::Array::print start ---.F90, line 644
CreateGetUTest.F90, line 600
tr, ESMF_ArrayCreateGetUTest.F90, line 616
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
  PASS  ArrayDestroy of Cop
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = LocalArrayPrint: Array at address 0xd579b0:
            rank = 3, typekind = 5, base_addr = 0x7fba532c0d30
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
y Test, ESMF_ArrayCreateGetUTest.Fno
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x27139b0:
            rank = 3, typekind = 5,   skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
90, line 607
base_addr = 0x7f47e0a59cd0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
  PASS  ArrayPrint for ArrayCreate(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
 from Ptr Test, ESMF_Arra  PASS  ArrayPrint yCreateGetUTest.F90, lifor ArrayCreate from Pne 623
tr Test, ESMF_ArrayCre  PASS  ArrayGateGetUTest.F90, line et Test, ESMF_ArrayCre623
ateGetUTest.F90, line 6  PASS  ArrayGet 30
Test, ESMF_ArrayCreate  PASS  Deallocate rGetUTest.F90, line 630eturned pointer Test, E
SMF_ArrayCreateGetUTes  PASS  Deallocate rett.F90, line 637
urned pointer Test, ES  PASS  ArrayCreate MF_ArrayCreateGetUTest  PASS  ArrayDestroy Test, ESMF_with 3D farray on 2D DistGrid Tes.F90, line 637
ArrayCreateGetUTest.F90, line 64t, ESMF_ArrayCreateGetUTest.F90,   PASS  ArrayDestroy Test, ESMF4
line 653
  PA_ArrayCreateGetUTest.F90, line 64SS  ArrayDestroy Test, 4
ESMF_ArrayCreateGetUTest.F90, line 660
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGr  PASS  ArrayCreateid Test as Ptr, ESMF_Arr with 3D farray on 2D DisayCreateGetUTest.F90, litGrid Test, ESMF_ArrayCrne 616
eateGetUTest.F90, line 6--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
53
 {}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
  PASS  ArrayCreate wit PASS  ArrayDestroy Test, ESMF_Array~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x999040:
            rank = 3, typekind = 5, base_addr = 0x7f3072e7edf0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
h 3D farray on 2D DistGrid Test, CreateGetUTest.F90, line 660
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
ESMF_ArrayCreateGetUTest.F90, lindim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPe 653
rint for ArrayCreate f  PASS  ArrayDestrrom Ptr Test, ESMF_Aroy Test, ESMF_ArrayCre  PASS  ArrayCreate with rayCreateGetUTest.F90, line 623ateGetUTest.F90, line 660
3D farray on 2D DistGrid w/ ESMF_DA
  PASS TACOPY_VALUE Test, ESMF_Ar ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, rayCreateGetUTest.F90,line 671
 line 630
  PASS  ArrayDe  PASS  Dea  PASS  ArrayCreate with 3D stroy Test, ESMF_ArrayCreateGetUTesllocate returned pointer Test, ESfarray on 2D DistGrid w/ ESMF_DATAt.F90, line 678
MF_ArrayCreateGetUTest.F90, line COPY_VALUE Test, ESMF_ArrayCreateGetUT637
est.F90, line 671
  PASS  ArrayDestroy Test, ESMF_  PASS  ArrayDestroy ArrayCreateGetUTest.F9Test, ESMF_ArrayCreateGe0, line 644
tUTest.F90, line 678
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DA  PASS  ATACOPY_VALUE Test, ESMFrrayCreate with 3D far_ArrayCreateGetUTest.Fray on 2D DistGrid Te90, line 671
st, ESMF_ArrayCreateGetUTest.F90,   PASS  ArrayDestroy line 653
Test, ESMF_ArrayCreate  PASS  ArrayDesGetUTest.F90, line 678
troy Test, ESMF_Array  PASS  ArrayCreate with 3D farra  PASS  ArrayCreate with 3D faCreateGetUTest.F90, line 660
yPtr on 2D DistGrid w/ ESMF_DATACOrrayPtr on 2D DistGrid w/ ESMF_DATAPY_VALUE Test, ESMF_ArrayCCOPY_VALUE Test, ESMF_ArrreateGetUTest.F90, line ayCreateGetUTest.F90, lin689
 e 689
  PASS  ArrayCreate  PASS  ArrayDestroy Test, ESMF_Ar  PASS  ArrayDestroy Test, ESMF_Awith 3D farray on 2D DistGrid w/rayCreateGetUTest.F90, line 696
rrayCreateGetUTest.F90, line 696
 ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
  PASS  ArrayDestroy T  PASS  ArrayCreate withest, ESMF_ArrayCreateGe 3D farrayPtr on 2D DisttUTest.F90, line 678
Grid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 689
  PASS  ArrayCrea  PASS  ArrayDete with 3D farrayPtr on stroy Test, ESMF_ArrayC2D DistGrid w/ ESMF_DAreateGetUTest.F90, lineTACOPY_VALUE Test, ESM 696
F_ArrayCreateGetUTest.F90, line 689
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreat  PASeGetUTest.F90, line 725
S  ArrayCreate with 3D farray on 2D--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 DistGrid w/ distgridToArrayMap Test{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xd579b0:
            rank = 2, typekind = 6, base_addr = 0x7fba532c0700
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
, ESMF_ArrayCreateGetU( 1,13) =  6.93858e-310
( 2,13) =  302
( 3,13) =  302
( 4,13) =  302
( 5,13) =  302
( 6,13) =  302
( 7,13) =  302
( 8,13) =  302
( 1,14) =  302
( 2,14) =  302
  skipping to end ...
( 7,22) =  302
Test.F90, line 708
( 8,22) =  302
( 1,23) =  302
( 2,23) =  302
( 3,23) =  302
( 4,23) =  302
( 5,23) =  302
( 6,23) =  302
( 7,23) =  302
( 8,23) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---  PASS
  PASS  ArrayPrin  ArrayDestroy Test, ESMt 2D ESMF_TYPEKIND_R8 wF_ArrayCreateGetUTest./ computational widths TF90, line 715
est, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  PASS  ArrayC  ArrayDestroy Test, ESMreate Allocate 2D ESMF_TYF_ArrayCreateGetUTest.F90PEKIND_R8 w/ negative c, line 739
omputational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x999040:
            rank = 2, typekind = 6, base_addr = 0x7f3072e7e740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
  PASS  ArrayC( 1, 1) =  6.90932e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
reate Allocate 2D ESMF_( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
TYPEKIND_R8 w/ computatidim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  ArronalEdge widths Test, EayPrint 2D ESMF_TYPEKINSMF_ArrayCreateGetUTest.D_R8 w/ computational wF90, line 748
idths Test, ESMF_ArrayC--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
reateGetUTest.F90, line Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
 732
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xd5db60:
            rank = 2, typekind = 6, base_addr = 0x7fba532c0d30
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.72572e-317
( 2,13) =  3.53751e-321
( 3,13) =  0
  PASS  ArrayDestroy( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  0
( 3,24) =  0
( 4,24) =  0
 Test, ESMF_ArrayCreate( 5,24) =  0
( 6,24) =  0
( 7,24) =  0
( 8,24) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASSGetUTest.F90, line 739
  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ comp  PASS  ArrayGet 2D ESMutationalEdge widths TF_TYPEKIND_R8 w/ comput  PASS  ArrayCreate with 3D farray on 2D Diest, ESMF_ArrayCreateGetUTest.F90ationalEdge widths Test, ESMF_ArrastGrid w/ distgridToArrayMap Test, ES, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative EdgeyCreateGetUTest.F90, line 768
MF_ArrayCreateGetUTest.F90, line 7
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
  PASS  Check total w08
  PASSLocalArrayPrint: Array at address 0x99d340:
            rank = 2, typekind = 6, base_addr = 0x7f3072e7e740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.90932e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
idths for 2D ESMF_TYPEKIND_R8 w/   ArrayDestroy Test, ESMF_ArrayCre( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
computationalEdge widths Test, ESateGetUTest.F90, line 715
  PASS  ArrayPrint 2D ESMF_TYMF_ArrayCreateGetUTest.F90, line PEKIND_R8 w/ computationa778
 lEdge widths Test, ESMF_ PASS  ArrayDestroy TesArrayCreateGetUTest.F90t, ESMF_ArrayCreateGetUT  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_, line 755
est.F90, line 787
R8 w/ negative computational widths Test, ESM  PASS  ArrayGetF_ArrayCreateGetUTest.F90 2D ESMF_TYPEKIND_R8 w/, line 725
 computationalEdge width--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
s Test, ESMF_ArrayCreat{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17ca870:
eGetUTest.F90, line 768            rank = 2, typekind = 6, base_addr = 0x7f3eb864f6b0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.91235e-310
(10,13) =  303
(11,13) =  303
(12,13) =  303

  PASS(13,13) =  303
(14,13) =  303
(15,13) =  303
( 9,14) =  303
(10,14) =  303
(11,14) =  303
  skipping to end ...
(13,22) =  303
(14,22) =  303
(15,22) =  303
( 9,23) =  303
  Check total widths f(10,23) =  303
(11,23) =  303
(12,23) =  303
(13,23) =  303
(14,23) =  303
(15,23) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
or 2D ESMF_TYPEKIND_R8  PASS  ArrayC  PASS  ArrayPrint 2D ESMF_TYPEK w/ computationalEdge widths Tesreate with 3D farray on 2D DistGIND_R8 w/ computational widths Tet, ESMF_ArrayCreateGetUTest.F9rid w/ distgridToArrayMap Test,st, ESMF_ArrayCreateGetUTest.F90,0, line 778
  P ESMF_ArrayCreateGetUTest.F90, l line 732
 ASS  ArrayDestroy Test, ESMFine 708
  PASS  ArrayDestroy Test, ESMF_Ar_ArrayCreateGetUTest.F90, line 78 PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
7
rayCreateGetUTest.F90, line 715
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computational  PASS  ArrayCrEdge and total widths Teate Allocate 2D ESMFest, ESMF_ArrayCreateGe_TYPEKIND_R8 w/ negativetUTest.F90, line 797
  PASS  ArrayCreate Allocate 2D ESMF_TYPE computational widths Test, ESMF_--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
KIND_R8 w/ computationalEdge widthsArrayCreateGetUTest.F90, line 72{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xd5db60:
            rank = 2, typekind = 6, base_addr = 0x7fba532c1040
            dim[0] = 12  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  0
( 1,11) =  0
( 2,11) =  0
 Test, ESMF_ArrayCreateGetUTest.F5
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = ( 3,11) =  0
( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  skipping to end ...
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
(11,27) =  0
90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edgeno
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x27139b0:
            rank = 2, typekind = 6, base_addr = 0x7f47e0a596e0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ES
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.91429e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
MF_TYPEKIND_R8 w/ computationalEdge ~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17ca870:
            rank = 2, typekind = 6, base_addr = 0x7f3eb864fc40
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9,13) =  2.72572e-317
(10,13) =  3.53751e-321
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS and total widths Test, ESMF_ArrayCr  skipping to end ...
(13,23) =  0
(14,23) =  0
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 weateGetUTest.F90, line 804
 ArrayPrint 2D ESMF_TYPEKIND_R8 w// computational widths Test, ESMF_A computationalEdge widthsrrayCreateGetUTest.F90,   PASS  ArrayGet  Test, ESMF_ArrayCreateGetUTest.F  PASS  ArrayCline 732
  PASS  ArrayD2D ESMF_TYPEKIND_R8 w/ computationalEdge and 90, line 755
reate Allocate 2D ESMF_TYPEKIND_R8 w/ coestroy Test, ESMF_ArrayCreateGetUTest.Ftotal widths Test, ESMF_ArrayCreateGemputationalEdge and total wi90, line 739
tUTest.F90, line 816
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ compudths Test, ESMF_ArrayCreateGetUTest.F90, li  PASS  Check total widths fortationalEdge widths Test, ESMF_Arne 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  2D ESMF_TYPEKIND_R8 w/ computatrayCreateGetUTest.F90, line 768
 object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x999040:
ionalEdge and total widths Test,             rank = 2, typekind = 6, base_addr = 0x7f3072e7edf0
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.72572e-317
( 1,-1) =  3.53751e-321
( 2,-1) =  0
( 3,-1) =  0
( 4,-1) =  0
  PASS  ArrayCreate Allocate 2D ESMFESMF_ArrayCreateGetUTest.F90, lin  PASS  Check total widths for 2D ESMF_TYPEKIND_R8( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  P_TYPEKIND_R8 w/ computationalEdge widths Tese 824
  PASS  Check total bou w/ computationalEdge widths Test, ESMF_ArraASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ comt, ESMF_ArrayCreateGetUTest.F90, line 748
nds for 2D ESMF_TYPEKIND_R8 w/ computationalyCreateGetUTest.F90, line 778
putationalEdge and total widths Test, ES--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Edge and total widths Test, ESMF_ArrayCreat  PASS  ArrayDestroy Test, ESMF_ArrayMF_ArrayCreateGetUTest.F90, line 804
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2719b60:
            rank = 2, typekind = 6, base_addr = 0x7f47e0a596e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.91429e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
eGetUTest.F90, line 842
CreateGetUTest.F90, line 787
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
   PASS  ArrayDestroy Test, ESMF_A  PASS  ArrayGet 2D ESMF PASS  ArrayPrint 2D ESMF_TYPEKINrrayCreateGetUTest.F90, line 855
_TYPEKIND_R8 w/ computationalEdD_R8 w/ computationalEdge widthsge and total widths T Test, ESMF_ArrayCreatest, ESMF_ArrayCreateeGetUTest.F90, line 755GetUTest.F90, line 816
  PASS  Create test Arra
  PASS  Check ty with ESMF_PIN_DE_TO_otal widths for 2D ESM  PASS  ArrayGet 2D EPET, ESMF_ArrayCreateGetUTest.F9F_TYPEKIND_R8 w/ computationalEdSMF_TYPEKIND_R8 w/ computationalE0, line 864
 ge and total widths Test, ESMF_dge widths Test, ESMF_ArrayCreat PASS  ArrayGet Fortran array poArrayCreateGetUTest.F90, line eGetUTest.F90, line 768
inter for ESMF_PIN_DE_TO_PET Tes824
  PASS  Chec  PASS  Check total widtt, ESMF_ArrayCreateGetUTest.F90,k total bounds for 2D ESMF_TYPEhs for 2D ESMF_TYPEKIND_R8 w/ co line 871
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 wKIND_R8 w/ computationalEdge and total wimputationalEdge widths Test, ESMF_ArrayCr  PASS  ArrayDestroy Test f/ computationalEdge and total widths Test,dths Test, ESMF_ArrayCreateGetUTest.F90,eateGetUTest.F90, line 778
or array with ESMF_PIN_DE_TO_PET, ESMF_Array ESMF_ArrayCreateGetUTest.F90, line 797
 line 834
  PASS  Array  PASS  ArrayDestroy Test, ESMF_ArrayCreaCreateGetUTest.F90, line 885
Destroy Test, ESMF_ArrayCreateGteGetUTest.F90, line 787
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17ca870:
            rank = 2, typekind = 6, base_addr = 0x7f3eb864fef0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  0
( 9,11) =  0
etUTest.F90, line 855
(10,11) =  0
(11,11) =  0
(12,11) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
(16,11) =  0
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKI  PASS  CrND_R8 w/ computationalEdeate test Array with ESMge and total widths TeF_PIN_DE_TO_PET, ESMF_st, ESMF_ArrayCreateGeArrayCreateGetUTest.F9tUTest.F90, line 804
0, line 864
  PASS  ArrayGet Fortran ar  PASS  Arraray pointer for ESMF_PIyGet 2D ESMF_TYPEKIND_RN_DE_TO_PET Test, ESM8 w/ computationalEdge F_ArrayCreateGetUTest.Fand total widths Test, 90, line 871
ESMF_ArrayCreateGetUTest.F90, line 8  PAS16
  PS  ArrayDestroy Test foASS  Check total widths r array with ESMF_PIN_D  PASS  ArrayCreafor 2D ESMF_TYPEKIND_R8 w/ computE_TO_PET, ESMF_ArrayCreateGetUTete Allocate 2D ESMF_TYPEKIND_R8 wationalEdge and total widths Testst.F90, line 885
/ computationalEdge and total wi, ESMF_ArrayCreateGetUTest.F90,dths Test, ESMF_ArrayCr line 824
eateGetUTest.F90, line   PASS  Check total797
--- ESMCI::Array::print start --- bounds for 2D ESMF_TY
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
PEKIND_R8 w/ computati{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x27139b0:
            rank = 2, typekind = 6, base_addr = 0x7f47e0a59cd0
            onalEdge and total widtdim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  2.72572e-317
( 9,-1) =  3.53751e-321
(10,-1) =  0
(11,-1) =  0
(12,-1) =  0
(13,-1) =  0
(14,-1) =  0
(15,-1) =  0
hs Test, ESMF_ArrayCre(16,-1) =  0
(17,-1) =  0
  skipping to end ...
( 9,16) =  0
(10,16) =  0
(11,16) =  0
(12,16) =  0
(13,16) =  0
(14,16) =  0
(15,16) =  0
(16,16) =  0
(17,16) =  0
ateGetUTest.F90, line 8(18,16) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  Arr46
 ayPrint 2D ESMF_TYPEKI PASS  ArrayDestroy TesND_R8 w/ computationalt, ESMF_ArrayCreateGetEdge and total widths UTest.F90, line 855
Test, ESMF_ArrayCreateGetUTest.F90, line 804
  PASS   PASS  ArrayGe Create test Array with ESt 2D ESMF_TYPEKIND_R8 w/MF_PIN_DE_TO_PET, ESMF computationalEdge and_ArrayCreateGetUTest.F9 total widths Test, ES0, line 864
MF_ArrayCreateGetUTest  PASS  Array.F90, line 816
Get Fortran array poin  PASS  Check ter for ESMF_PIN_DE_TO_total widths for 2D ESPET Test, ESMF_ArrayCreMF_TYPEKIND_R8 w/ compateGetUTest.F90, line 8utationalEdge and total71
 widths Test, ESMF_ArrayCreateGetU  PASS  ArrayDestTest.F90, line 824
roy Test for array wit  PASS  Cheh ESMF_PIN_DE_TO_PET, ck total bounds for 2DESMF_ArrayCreateGetUTes ESMF_TYPEKIND_R8 w/ ct.F90, line 885
omputationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 838
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI,   PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  A  PASS  ArrayGet Fortran arra  PASS  ArrayGet Fortran array pointer for  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TrrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, y pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUT ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTestO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907ESMF_ArrayCreateGetUTest.F90, line 907
est.F90, line 907
.F90, line 907

  PA  PASS  ArrayGSS  ArrayGet ssiLocalDeCount ESMF  PASS  ArrayGet ssiLocalDeCount ESMF_PI  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Teet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_Arra_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
N_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
st, ESMF_ArrayCreateGetUTest.F90, line 925
yCreateGetUTest.F90, line 925
  PASS    PASS  ArrayGet lArrayGet localDeToDeMap ESMF_PIN_  PASS  ArrayGet localDeToDeMap ESMF_PIN_  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI TesocalDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArraDE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, linDE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line t, ESMF_ArrayCreateGetUTest.F90, line 944
yCreateGetUTest.F90, line 944
e 944
  PASS  Arra944
  PASS  ArraySync() for ESMF  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_AySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest._PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PArrayCreateGetUTest.F90, line 966
  PASS  LocalArrayGet FortraF90, line 966
  PASS  LocalArrayGet Fortran array pointer for last  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Tn array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateG ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979SMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
est, ESMF_ArrayCreateGetUTest.F90, line 979
etUTest.F90, line 979

  PASS  Test data in LocalArray for last ss  PASS  Test data in LocalArray for l  PASS  Test datiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009ast ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, lia in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayC
ne 1009
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreatreateGetUTest.F90, line 1009
eGetUTest.F90, line 1009
  PASS  Arr  PASS  ArrayCreate from Copy (REF  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_AayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F9), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASSrrayCreateGetUTest.F90, line 1023
  PASS  ArrayGet Fortran 0, line 1023
  PASS  ArrayGet Fortran array pointer for ES  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI array  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_Arrarray pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F9MF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
Cpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
ayCreateGetUTest.F90, line 1035
0, line 1035
    PASS  ArrayGet ssiL  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy TePASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, l_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
st, ESMF_ArrayCreateGetUTest.F90, line 1053
ateGetUTest.F90, line 1053
  PASSine 1053
  PASS  ArrayGet localDeT  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayC  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTesoDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072py Test, ESMF_ArrayCreateGetUTest.F90, line 1072
ArrayCreateGetUTest.F90, line 1072
t.F90, line 1072
  PASS  ArrayS
  PASS  ArraySync() for ESMF_PIN_DE_TO_S  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ES  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, lineSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  MF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArrayGet FoGetUTest.F90, line 1094
  PASS  LocalArrayGet Fortran array p 1094
  PASS  LocalArrayGet Fortran array pointer for last ssiLPASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_Trtran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, Eointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreatocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line O_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
SMF_ArrayCreateGetUTest.F90, line 1107
eGetUTest.F90, line 1107
1107
  PASS  Test   PASS  Test data in LocalArray fordata in LocalArray for last ssiLocalDe for ES last ssiLocalDe for ESMF_PIN_DE_TO_SSI arra  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DEMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.FyCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
90, line 1137
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS   PASS  ArrayDestroy Test   PASS  ArrayDestroy Test for arrayCpy with ESM  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUfor arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
F_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
 ESMF_ArrayCreateGetUTest.F90, line 1151
Test.F90, line 1151
  PASS  ArrayCreate from   PASS  ArrayCreate from Copy (REF), ESMF_PIN  PASS  ArrayCreate from Copy (RCopy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCr  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
EF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line eateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint fro1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x9d6280:
            rank = 2, typekind = 6, base_addr = 0x7f307eca7000
            dim[0] = 8  dim[1] = 12  {}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xd646c0:
            rank = 2, typekind = 6, base_addr = 0x7fba5f0eb000
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
( 8,13) =  20
( 1,14) =  20
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
( 2,23) =  20
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
( 6,23) =  20
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0xd649f0:
            rank = 2, typekind = 6, base_addr = 0x7fba5f0ec000
            dim[0] = 7  m Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x9f5430:
            rank = 2, typekind = 6, base_addr = 0x7f307eca8000
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
(13,11) =  10
 Test, ESMF_ArrayCreateGetUTest.F90, line 1177
dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
(14,23) =  30
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF)
  PASS  ArrayGet ssiLocalDeCount ESMF(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(11,12) =  10
(12,12) =  10
(13,12) =  10
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreate, ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
 w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
GetUTest.F90, line 1185
  PASS    PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
ArrayCreateGetUTest.F90, line 1204
  PASS  Test dat  PASS  Test data in LocalArray for last ssiLo  PASS  ArrayGet localDa in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI ar  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90,calDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236eToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, linerayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
 line 1204

 1204
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  A  PASS  ArraySync() for ESMF  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Te  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreaterraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 12_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
st, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArrayDestrGetUTest.F90, line 1250
  PASS  ArrayDestroy Test for arrayCpy 50
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_T  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMoy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.Fwith ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
O_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
F_ArrayCreateGetUTest.F90, line 1262
90, line 1262
  PASS  ArrayDestroy Test for  PASS  ArrayDestroy Test for array with ESMF_PIN_D  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, E  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
E_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
SMF_ArrayCreateGetUTest.F90, line 1274
 line 1274
  PASS  Array  PASS  ArrayCreate AssmdShape 1D ES  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 12MF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArraGetUTest.F90, line 1296
  PASS  ArrayGet Fortran arra96
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYP  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArryGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90,y pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
EKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
ayCreateGetUTest.F90, line 1303
 line 1303
   PASS  ArrayGet w/  PASS  ArrayGet w/ incompatible Fortra PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ES  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCn array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line MF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
reateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x27215e0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xd65270:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS {}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17d6ae0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdArray typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x9f4460:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_Arr ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line Shape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
ayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy Test, E1317
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90,  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
SMF_ArrayCreateGetUTest.F90, line 1324
 line 1324
  PASS  A  PASS  ArrayCreate AssmdShap  PASS  ArrayCreate AssmdShape 1D ES  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative comrrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, e 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTeputationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Test.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x17d6ae0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  st.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x9f4460:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  --- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x27215e0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PA{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xd65270:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ES
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ n
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 SS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widtMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F9egative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line hs Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  Ar0, line 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetU  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTestrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
Test.F90, line 1347
.F90, line 1347
  PASS  Arr  PASS  ArrayCreate AssmdShape 2D E  PASS  ArrayCreate Assm  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArraayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
SMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
yCreateGetUTest.F90, line 1366
  PASS  ArrayGet Fortran ar  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 TeASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreat  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKINDray pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, list, ESMF_ArrayCreateGetUTest.F90, line 1373
eGetUTest.F90, line 1373
_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
ne 1373
  PASS  ArrayG  PASS  ArrayGet w/ incompatible Fortran array pointer,  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8   PASS  ArrayGet w/ incompatible Fortran array pointet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrea 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayDestrer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
teGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCr  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
oy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
eateGetUTest.F90, line 1387
  PAS  PASS  ArrayCreate Assm  PASS   PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 S  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90,dShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
 ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90,Test, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayGet  line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TY  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TFortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line PEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  A_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Test, ESYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  A1413
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line rrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
MF_ArrayCreateGetUTest.F90, line 1420
rrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
1420
  PASS  ArrayC  PASS  ArrayCreate AssmdShape 4  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Tes  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_reate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
t, ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  ArrayArrayCreateGetUTest.F90, line 1439
  PASS  ArrayGet Fortran  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArraGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayDestroy yCreateGetUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, lineTest, ESMF_ArrayCreateGetUTest.F90, line 1453
ArrayCreateGetUTest.F90, line 1453
F90, line 1453
 1453
  PASS  Creat  PASS  Create test Arrae test Array for extra edge element test, ESM  PASS  Create test Array for extra edge element test, ESMF_Arra  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, y for extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
F_ArrayCreateGetUTest.F90, line 1514
yCreateGetUTest.F90, line 1514
line 1514
  PASS  A  PASS  ArrayDestroy Test, ESMF_ArrayCreate  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUT  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 154rrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
GetUTest.F90, line 1543
est.F90, line 1543
3
    PASS  Crea  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.FPASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
te Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
 90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  --- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPr--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x9f4460:
            rank = 1, typekind = 6, base_addr = 0x7f3072e7e330
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  6.90932e-310
( 2) =  9.311e-13
( 3) =  -1.07501e+59
( 4) =  6.60776e-317
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
int Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
 PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 157  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576

  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1  PASS  Create Array on single DE Dist6
  PASS  Create Array on single D576
Grid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, liE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_Arne 1592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, liF90, line 1592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTes592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, linerayCreateGetUTest.F90, line 1592
  PASS  ArrayDestroy Test, ESMFne 1599
t.F90, line 1599
 1599
_ArrayCreateGetUTest.F90, line 1599
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran  PASS  Create Array on 4 DE DistGrid with only DE 0 element  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with F  PASS  Create Array on 4 DE DistGrid with onl allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  Ars, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
ortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  Py DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1rayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  En  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
ASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, ding Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PET 1  Test Elapsed Time   53.7150000000000105  msec.
  PET 3  Test Elapsed Time   53.7170000000000130    PET 0  Test Elapsedmsec.
 Time    1.0702399999999999E+02  msec.
  PET 2  Test Elapsed Time   53.7759999999999891  msec.
