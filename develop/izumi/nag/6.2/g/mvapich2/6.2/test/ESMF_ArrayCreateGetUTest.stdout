build time -- 2022-05-27 05:43:21.236469
  Beginning Test, file ESMF_ArrayCreateGetUTest.F9  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  N  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_P  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBER_OF_PROCE0, line 97
  NUMBER_OF_PROCESSORS 4
UMBER_OF_PROCESSORS 4
ROCESSORS 4
SSORS 4
  PASS  Testing A  PASS  Testi  PASS  Testing rray IsCreated fong Array IsCreateArray IsCreated fo  PASS  Testing Array IsCreated for ur uncreated object, ESMF_ArrayCreateGetUTest.d for uncreated object, ESMF_ArrayCreateGetUTest.F90,r uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
ncreated object, ESMF_ArrayCreateGetUTest.F90,F90, line 118
  PASS  Testing A line 118
  PASS  Testing  PASS  Testing Array IsCr line 118
  PASS  Testing Arrray IsCreated for uncreated object, ESMF_ArrayCreateGetU Array IsCreated for uncreated object, ESMF_ArrayCreateGetUeated for uncreated object, ESMF_ArrayCreateGetUTest.F9ray IsCreated for uncreated object, ESMF_ArraTest.F90, line 125
Test.F90, line 125
0, line 125
yCreateGetUTest.F90, line 125
  PASS  Create test Arra  PASS  Create test  PASS  Create test Array for y for IsCreated, ESMF_ArrayCreateGetU Array for IsCreated, ESMF_ArrayCrIsCreated, ESMF_ArrayCreateGetUTest  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTTest.F90, line 143
  PASS eateGetUTest.F90, line 143
.F90, line 143
  PASS  Tesest.F90, line 143
  PASS  Testing Testing Array IsCreated for created object, ESM  PASS  Testing Array IsCreated for created ting Array IsCreated for created object, ESMF Array IsCreated for created object, ESMF_ArrayCreatF_ArrayCreateGetUTest.F90, line 150
object, ESMF_ArrayCreateGetUTest.F90, line 1_ArrayCreateGetUTest.F90, line 150
eGetUTest.F90, line 150
  PASS   PASS  Testing Array IsCreated for create50
  PASS  Testing Array I  PASS  Testing Array IsCreated for cre Testing Array IsCreated for created object, ESMF_Arrad object, ESMF_ArrayCreateGetUTest.F90, line 157
sCreated for created object, ESMF_ArrayCreateGated object, ESMF_ArrayCreateGetUTest.F90, linyCreateGetUTest.F90, line 157
  PASSetUTest.F90, line 157
e 157
  Destroy test Array for IsCreated,   PASS  Destroy   PASS  Destroy test Array for Is  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, ESMF_ArrayCreateGetUTest.F90, line 164
test Array for IsCreated, ESMF_ArrayCreateGeCreated, ESMF_ArrayCreateGetUTest.F90, lineline 164
  PASS  Testing Array I  PASS  Testing Array IsCreated for dtUTest.F90, line 164
  PAS 164
  PASS  Testing ArraysCreated for destroyed object, ESMF_ArrayCreateGetUTestroyed object, ESMF_ArrayCreateGetUTest.F90,S  Testing Array IsCreated for destroyed obj IsCreated for destroyed object, ESMF_ArrayCest.F90, line 171
  PASS  Testing  line 171
  PASS  Testing Arect, ESMF_ArrayCreateGetUTest.F90, line 171
reateGetUTest.F90, line 171
 Array IsCreated for destroyed object, ESMF_ArrayCrearay IsCreated for destroyed object, ESMF_ArrayC  PASS  Testing Array IsCrea PASS  Testing Array IsCreated for destroyedteGetUTest.F90, line 178
reateGetUTest.F90, line 178
ted for destroyed object, ESMF_ArrayCreateG object, ESMF_ArrayCreateGetUTest.F90, line   PASS  AretUTest.F90, line 178
178
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreatrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ES  PASS  ArrayCreateeGetUTest.F90, line 186
MF_ArrayCreateGetUTest.F90, line 186  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_Arr  PASS  Array equality before assignment Te
  PASS  Array equalit_R8 Test, ESMF_ArrayCreateGetUTest.F90, line ayCreateGetUTest.F90, line 186
st, ESMF_ArrayCreateGetUTest.F90, line 193
y before assignment Test, ESMF_ArrayCreateGetUT186
  PASS  Array equa  PASS  Array equality before assignm  PASS  Array assignment and equality Test, est.F90, line 193
  PASS  Arrlity before assignment Test, ESMF_ArrayCreatent Test, ESMF_ArrayCreateGetUTest.F90, line ESMF_ArrayCreateGetUTest.F90, line 202
ay assignment and equality Test, ESMF_ArrayCreateeGetUTest.F90, line 193
  P193
  PASS  Array assignment  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetGetUTest.F90, line 202
  PASS  Array assignment and equality Test, ES and equality Test, ESMF_ArrayCreateGetUTesUTest.F90, line 209
  PASS  AASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTMF_ArrayCreateGetUTest.F90, line 202
t.F90, line 202
  PASS  rray equality after destroy Test, ESMF_ArrayCreateest.F90, line 209
  PASS  Arr  PASS  ArrayDestroy Test, ESMArrayDestroy Test, ESMF_ArrayCreateGetUTest.GetUTest.F90, line 217
  PASS  Aray equality after destroy Test, ESMF_ArrayCreatF_ArrayCreateGetUTest.F90, line 209
F90, line 209
  PASS  Array non-equality after destroy Test, ESMF_ArrayCreaeGetUTest.F90, line 217
    PASS  Array equality after destray equality after destroy Test, ESMF_ArrayCrteGetUTest.F90, line 225
  PASPASS  Array non-equality after destroy Test, ESroy Test, ESMF_ArrayCreateGetUTest.F90, lineeateGetUTest.F90, line 217
S  Double ArrayDestroy through alias Test, ESMF_ArraMF_ArrayCreateGetUTest.F90, line 225
 217
  PASS  Array non-equ  PASS  Array non-equality after destroy yCreateGetUTest.F90, line 232
  PASS  Double ArrayDestroy through aliasality after destroy Test, ESMF_ArrayCreateGeTest, ESMF_ArrayCreateGetUTest.F90, line 225
 Test, ESMF_ArrayCreateGetUTest.F90, tUTest.F90, line 225
line 232
  PASS  Double Ar  PASS  Double ArrayDestroy through aliarayDestroy through alias Test, ESMF_ArrayCreates Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  ArrayCreate Allocate 2D ESMF_TGetUTest.F90, line 232
YPEKIND_R8 rank inconsistency Test, ESMF_Arr  PayCreateGetUTest.F90, line ASS  ArrayCreate Allocat241
e 2D ESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_Array  PASS  ArrayCreate Allocate 2D ECreateGetUTest.F90, line 24  PASS  ArrayCreate AllocatSMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGet1
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8e 2D ESMF_TYPEKIND_R8 rank inconsistency TestUTest.F90, line 249
  PASS  ArrayCreate Allocate 2D ESMF_TYPE rank inconsistency Test, ESMF_ArrayCreateGet, ESMF_ArrayCreateGetUTest.F90, line 241
KIND_R8 Test, ESMF_ArrayCreateGetUTeUTest.F90, line 241
  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
st.F90, line 249
  PASS  ArrayCreate  P  PASS  ArrayCreate Allocate Allocate 2D ESMF_TYPEKIND_R8 Test  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
ASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG, ESMF_ArrayCreateGetUTest.F90, line 249
90, line 256
  PASetUTest.F90, line 249
S  ArrayDestroy Test, ESMF_ArrayCreateGe  PASS  ArraySet Test, ESMtUTest.F90, line 263
  PASS  ArraySet Test, ESMF_ArraF_ArrayCreateGetUTest.F90, line 2  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 TesyCreateGetUTest.F90, line 256
56
  PASS  At w/ ArraySpec, ESMF_ArrayCreateGetUTes  PASS  ArrayDestrorrayDestroy Test, ESMF_ArrayCreatet.F90, line 277
  PASS  ArrayCreaty Test, ESMF_ArrayCreateGetUTest.F90, line 26GetUTest.F90, line 263
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIe Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec,3
ND_R8 Test with ArraySpec, ESMF_ArrayCrea ESMF_ArrayCreateGetUTest.F90, line teGetUTest.F90, line 285
277
  PASS  Arra  PASS  ArrayCr  PASS  ArrayCreate AllyCreate Allocate 2D ESMF_TYPEKIND_R--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
eate Allocate 2D ESMF_TYPEKIND_R8 Test withocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, 8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F ArraySpec, ESMF_ArrayCreateGetUTest.FESMF_ArrayCreateGetUTest.F90, line 90, line 277
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x22068f0:
            rank = 2, typekind = 6, base_addr = 0x7efbfc409660
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
90, line 285
--- ESMCI::Array::print start ---
277
  PAS  PASS  ArrayCreate Allocate 2( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
S  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
 Test with ArraySpec, ESMF_ArrayCreateGetUTe_ArrayCreateGetUTest.F90, line 285
ArrayCreateGetUTest.F90, line 292
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x136c040:
            rank = 2, typekind = 6, base_addr = 0x7f3909c696f0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
st.F90, line 285
--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrin Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Proxy        = no
 Root Info (Attributes):
 Array name: MyArray with ArraySpec     t 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetU{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xff48f0:
            rank = 2, typekind = 6,                                         Test.F90, line 292
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc1b8f0:
            rank = 2, typekind = 6, base_addr = 0x7f84724ea690
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
base_addr = 0x7fba520966b0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
             
  PASS  ArrayGet arrayspec and n( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  Arrayame, 2D ESMF_TYPEKIND_R8 Test, ESMF_Arra Array name: MyArray with ArraySpec  (14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKINDPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreyCreateGetUTest.F90, line 300
                                                _R8 Test, ESMF_ArrayCreateGetUTest.F90, line 29ateGetUTest.F90, line 292
 PASS  Verify ArraySpec returned from Array, ESMF_A         
  PASS  ArrayGet arrayspec and na2
rrayCreateGetUTest.F90, line 306
me, 2D ESMF_TYPEKIND_R8 Test, ESMF_A Array name: MyArr Array name: MyArray with ArraySpecrrayCreateGetUTest.F90, line 300
ay with ArraySpec                                                      PASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, li  PASS  Verify ArraySpec                                        
  P                        
  PASS  ArrayGetne 312
  PASS returned from Array, ESMF_ArrayCreateGetUTest.FASS  ArrayGet arrayspec and name, 2D ESMF_TYPEK arrayspec and name, 2D ESMF_TYPEKIND_R8 Tes  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_90, line 306
  PASS  VIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line t, ESMF_ArrayCreateGetUTest.F90, line 300
R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
erify name returned from Array, ESMF_ArrayCreat300
  PASS  Verify ArraySpe  PASS  Verify ArraySpec reteGetUTest.F90, line 312
c returned from Array, ESMF_ArrayCreaurned from Array, ESMF_ArrayCreate  PASS  ArrayGetteGetUTest.F90, line 306
GetUTest.F90, line 306
 Fortran array pointer, 2D ESMF_TYP  PASS  Verify name returEKIND_R8 Test, ESMF_ArrayCned from Array, ESMF_Array  PASS  Verify name returned from Array, ESMF_ArreateGetUTest.F90, line 319
CreateGetUTest.F90, line 312
rayCreateGetUTest.F90, line 312
  PASS  Getting Attribute count from an Array,   PASS  ArrESMF_ArrayCreateGetUTest.F9ayGet Fortran array poi  PASS  ArrayGet Fortran a0, line 326
  PASS nter, 2D ESMF_TYPEKIND_R8 Test, ESMFrray pointer, 2D ESMF_TYPEKIND_R8  Verify Attribute count from an Array, _ArrayCreateGetUTest.F90, line 319
Test, ESMF_ArrayCreateGetUTest.F90ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  Gettin, line 319
g Attribute count from an Array, ESMF_Ar  PASS  ArrayCreate from CopyrayCreateGetUTest.F90, li, uninitialized Array Test, ne 326
 ESMF_ArrayCreateGetUTest.F90 PASS  Verify Attribute c, line 339
ount from an Array, ESMF_  PASS  Getting Attribute count froArrayCreateGetUTest.F90, lm an Array, ESMF_ArrayC  PASS  Getting Attribute count f  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF_TYPine 332
reateGetUTest.F90, line 326
rom an Array, ESMF_ArrayCreateGetUTest.F90, lEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 3  PASS  ArrayCreate from Copy, uninitialized A  PASS  Verify Attribute count from an Array, Eine 326
  PASS  Verify Att47
 Arrayrray Test, ESMF_ArrayCreateGetUTest.F90, line SMF_ArrayCreateGetUTest.F90, line 332
ribute count from an Array, ESMF_ArrayCreate name: Array007                                    339
GetUTest.F90, line 332
                                    
  PASS  ArrayCreate from Copy (A  PASS  ArrayCreate from Copy, uninitialized Arr  PASS  ArrayGet arrayspec from Array LLOC), 2D ESMF_TYPEKIND_R8 Test, ESMay Test, ESMF_ArrayCreateGetUTest.F90  PASS  ArrayCreate from Copy, uninitialized ACopy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, liF_ArrayCreateGetUTest.F90, line 347
, line 339
rray Test, ESMF_ArrayCreateGetUTest.F90, linene 355
  PASS  Verify ArraySpec  Array name: Array00  PASS  ArrayCreate from Copy (ALLOC), 2D  339
returned from Array (ALLOC) Copy, ESMF_ArrayCreateG7                                              ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest  PASS  ArrayCreate from Copy (ALLOC), 2DetUTest.F90, line 361
  PASS  Ar                          
  PASS  ArrayGet .F90, line 347
 ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUrayGet Fortran array pointer, from Array Copy (ALLOarrayspec from Array Copy (ALLOC) Test, ESMF_Ar Array name: Array007                   Test.F90, line 347
C) Test, ESMF_ArrayCreateGetUTest.F90, line 368
rayCreateGetUTest.F90, line 355
                                               Array name: Array007          PASS  Verify ArraySpec returne       
  PASS  ArrayGet arrayspe                                  d from Array (ALLOC) Copy, ESMF_Arrc from Array Copy (ALLOC) Test, ESMF_                              
ayCreateGetUTest.F90, line 361
ArrayCreateGetUTest.F90, line 355
  PASS  ArrayGet arrayspec from A  PASS  ArrayGet Fo  PASS  Verify ArraySprray Copy (ALLOC) Test, ESMF_Arrtran array pointer, from Array Copy (ec returned from Array (ALLOC) Copy, rayCreateGetUTest.F90, line 355
ALLOC) Test, ESMF_ArrayCreateGetUTeESMF_ArrayCreateGetUTest.F90, line 3st.F90, line 368
61
  PASS  Verify ArraySpec returned from Ar  PASS  ArrayGet Fortran ray (ALLOC) Copy, ESMF_Aarray pointer, from ArrayrrayCreateGetUTest.F90, l Copy (ALLOC) Test, ESMF_Aine 361
rrayCreateGetUTest.F90, l  PASS  ArrayGet Foine 368
rtran array pointer, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array v  PASS  Verify Array vs Arras Array Copy (ALLOC) no daty Copy (ALLOC) no data copa copy, ESMF_ArrayCreateGy, ESMF_ArrayCreateGetUTestetUTest.F90, line 384
.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2207760:
            rank = 2, typekind = 6, base_addr = 0x7efbfc4098e0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  103
(10,13) =  103
(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103
(15,13) =  103
( 9,14) =  103
(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
(15,22) =  103
( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
(13,23) =  103
(14,23) =  103
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
  PASS    PASS  Verify ArArrayGet Fortran array pointer,ray vs Array Copy (ALLOC 2D ESMF_TYPEKIND_R8 Test, ES) separate memory allocMF_ArrayCreateGetUTest.F90, liation, ESMF_ArrayCreateGne 438
etUTest.F90, line 402
  PASS  ArrayCreate from C  PASopy (VALUE), 2D ESMF_TYPEKIND_  PASS  Verify Array vs ArS  ArrayDestroy Test, ESMF_ArrayCreR8 Test, ESMF_ArrayCreateGetUTest.F90, linray Copy (ALLOC) separate memory aateGetUTest.F90, line 409
e 446
llocation, ESMF_ArrayCreateGetUTe--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{} Array name: Array009                    st.F90, line 402
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc1c760:
            rank = 2, typekind = 6, base_addr = 0x7f84724ea940
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
(10, 1) =  101
(11, 1) =  101
(12, 1) =  101
(13, 1) =  101
(14, 1) =  101
                                           PASS  ArrayDestroy Test, ES(15, 1) =  101
( 9, 2) =  101
(10, 2) =  101
(11, 2) =  101
  skipping to end ...
(13,11) =  101
(14,11) =  101
(15,11) =  101
( 9,12) =  101
(10,12) =  101
(11,12) =  101
(12,12) =  101
(13,12) =  101
(14,12) =  101
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
           
  PASS  ArrayGet arrayspeMF_ArrayCreateGetUTest.F90, line   PASS  ArrayPrint from Copy   PASS  Verify Array vs Array Copy (c from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTes409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}(ALLOC) after original destroy, 2D ESMF_TYPEALLOC) separate memory allocation, ESMF_At.F90, line 454
  PASS  Verify ArrArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x136ccf0:
            rank = 2, typekind = 6, base_addr = 0x7f3909c69a00
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
( 5, 1) =  100
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
KIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, linrrayCreateGetUTest.F90, line 402
aySpec returned from Array (VALUE) Copy, ESMF_ArrayCre( 8,11) =  100
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
( 4,12) =  100
( 5,12) =  100
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrie 416
  PASS  ArrayDes  PASS  ArrayDestroy Test, ESMFateGetUTest.F90, line 460
  PASS  Arnt from Copy (ALLOC) after original destroy,troy of Copy (ALLOC) Test, ESMF_ArrayCreateG_ArrayCreateGetUTest.F90, line 409
rayGet Fortran array pointer, from Array Copy (VALUE)  2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateetUTest.F90, line 423
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~Test, ESMF_ArrayCreateGetUTest.F90, line 467
GetUTest.F90, line 416
  PASS  ArrayCreate Alloc
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xff5760:
            rank = 2, typekind = 6, base_addr = 0x7fba52096980
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  102
( 2,13) =  102
( 3,13) =  102
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
( 2,14) =  102
  skipping to end ...
( 7,22) =  102
  PASS  ArrayDestroy of Copy (ALLOate 2D ESMF_TYPEKIND_R8 Test with( 8,22) =  102
( 1,23) =  102
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PC) Test, ESMF_ArrayCreateGetUTest ArraySpec, ESMF_ArrayCreateGetUTASS  ArrayPrint from Copy (ALLO.F90, line 423
est.F90, line 431
C) after original destroy, 2D E  PASS  ArrayC  PASS  ArrayGet Fortran arrSMF_TYPEKIND_R8 Test, ESMF_ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 ay pointer, 2D ESMF_TYPEKIND_R8 TereateGetUTest.F90, line 416
Test with ArraySpec, ESMF_ArrayCrst, ESMF_ArrayCreateGetUTest.F90, eateGetUTest.F90, line 4line 438
  PASS  ArrayDestroy of Copy (ALLOC) 31
  PASS  Arr  PASS  ArrayCreate froTest, ESMF_ArrayCreateGetUTest.ayGet Fortran array pointer, 2D ESm Copy (VALUE), 2D ESMF_TYPEKIND_R8F90, line 423
MF_TYPEKIND_R8 Test, ESMF_ArrayCr Test, ESMF_ArrayCreateGetUTest.F9eateGetUTest.F90, line 0, line 446
  PASS  ArrayCreate Allocate 2D E438
  PSMF_TYPEKIND_R8 Test wiASS  ArrayCreate from C Array name: Array009             th ArraySpec, ESMF_ArrayCreateGeopy (VALUE), 2D ESMF_TYPEKIND_R8                                   tUTest.F90, line 431
Test, ESMF_ArrayCreateGetUTest.F90                         
  PA  PASS  ArrayGet Fortr, line 446
SS  ArrayGet arrayspec from Arraan array pointer, 2D ESMF_TYPEKIN Array name: Array00y Copy (VALUE) Test, ESMF_ArrayCreD_R8 Test, ESMF_ArrayCreateGetU9                                ateGetUTest.F90, line 454
Test.F90, line 438
                                   PASS  Verify ArraySp       
  PASS  Arrec returned from Array (  PASS  ArrayCreate from Copy (VALUE), 2D ayGet arrayspec from Array Copy (VVALUE) Copy, ESMF_ArrayCreateGetUESMF_TYPEKIND_R8 Test, ESMF_ArALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 460
rayCreateGetUTest.F90, line 446
Test.F90, line 454
  PASS  ArrayGet Fortran a  PASS  Verify Array vs Array Copy (VALUE)  PASS  Verify ArraySpec rrray pointer, from Array Copy (VALU Array name: Array009       data copy, ESMF_ArrayCreateGetUTest.F90, line 483
eturned from Array (VALUE) Copy, ESMF_ArrayCE) Test, ESMF_ArrayCreateGetUTest.F90, line                                          reateGetUTest.F90, line 460
467
                         
    PASS  ArrayGet FortPASS  ArrayGet arrayspran array pointer, fromec from Array Copy (VAL Array Copy (VALUE) TestUE) Test, ESMF_ArrayC, ESMF_ArrayCreateGetUreateGetUTest.F90, lineTest.F90, line 467
 454
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateG  PetUTest.F90, line 515
ASS  Verify Array vs Array Copy (VALUE) data copy,  PASS  ArrayCreate Allocate ESMF_ArrayCreateGetUTes 2D ESMF_TYPEKIND_R8 Test wit.F90, line 483
th ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  Verify Array  PASS  ArrayCreate from Copy ( vs Array Copy (VALUE)REF), 2D ESMF_TYPEKIND_R8 Tes data copy, ESMF_ArrayCrt, ESMF_ArrayCreateGetUTest.FeateGetUTest.F90, line 90, line 538
483
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF)  PASS  Test, ESMF_ArrayCreateGetUTest Verify Array vs Array .F90, line 546
Copy (VALUE) data copy  PASS  Verify ArraySpec re, ESMF_ArrayCreateGetUTturned from Array Copy (REF),est.F90, line 483
 ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Tes  PASSt with ArraySpec, ESMF_Arr  Verify Array vs Array CoayCreateGetUTest.F90, linpy (VALUE) separate memore 523
  PASS  Verify Array vs Array Copy allocation, ESMF_ArrayCreateGetUTes  PASS  ArrayGet Fortran array pointey (REF) shared allocation Test1, ESMF_Arrat.F90, line 501
r, 2D ESMF_TYPEKIND_R8 Test, ESMF_AryCreateGetUTest.F90, line 575
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 530
rayCreateGetUTest.F90, line 508
  PASS  PASS  ArrayDest  ArrayCreate from Copy (  PASS  Verify Array vs Array Copy (roy of Copy (VALUE) Test, ESMF_ArrREF), 2D ESMF_TYPEKIND_R8 Test, ESMFVALUE) separate memory allocation, ayCreateGetUTest.F90, line 515
_ArrayCreateGetUTest.F90, line 538
ESMF_ArrayCreateGetUTest.F90, line  PASS 501
  ArrayCreate Allocate 2D Array name: Array011           PASS  ArrayDestroy Test, ESMF_ ESMF_TYPEKIND_R8 Test with ArraySpec                                     ArrayCreateGetUTest.F90, line 508
, ESMF_ArrayCreateGetUTest.F90, lin                          
  PASSe 523
  P  ArrayGet arrayspec from   PASS  ArrayDestroy of Copy (VALUE) Test,ASS  ArrayGet Fortran array pointer,Array Copy (REF) Test, ESMF_ArrayCrea ESMF_ArrayCreateGetUTest.F90, line 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrateGetUTest.F90, line 546
 515
yCreateGetUTest.F90, line 530
  PASS  Verify ArraySpec retur  PASS  ArrayCreate Allocate ned from Array Copy (REF)2D ESMF_TYPEKIND_R8 Test  PASS  ArrayCreate from C, ESMF_ArrayCreateGetUTest.F90, line with ArraySpec, ESMF_ArrayCreateGopy (REF), 2D ESMF_TYPEKIND_R8 Test, 552
  PASS  ArrayGetUTest.F90, line 523
 ESMF_ArrayCreateGetUTest.F90, line et Fortran array pointer, from Array  PASS  ArrayGet Fortran arra538
 Copy (REF) Test, ESMF_ArrayCreateGey pointer, 2D ESMF_TYPEKIND_R8 Te Array name: Array011             tUTest.F90, line 559
st, ESMF_ArrayCreateGetUTest.F90,                                     line 530
                       
  PASS  ArrayGet arrayspe  PASS  ArrayCreate from Cc from Array Copy (REF) Teopy (REF), 2D ESMF_TYPEKst, ESMF_ArrayCreateGetUTIND_R8 Test, ESMF_ArrayCrest.F90, line 546
eateGetUTest.F90, line  PASS  Verif 538
  PASS  Verify Array vs Array Copy (REF) shared alloy ArraySpec returned from Array Copy Array name: Arrcation Test2, ESMF_ArrayCreateGetUTest.F90 (REF), ESMF_ArrayCreateGetUTest.F90ay011                             , line 593
  PASS  Ar, line 552
  PA                                  rayDestroy Test, ESMF_ArrayCreateGetUTest.SS  ArrayGet Fortran array pointer,         
  PASS  ArrayGet arrF90, line 600
  PASS  Ar from Array Copy (REF) Test, ESMF_Arayspec from Array Copy (REF) Test,rayDestroy of Copy Test, ESMF_ArrayCreateGrayCreateGetUTest.F90, line 559
 ESMF_ArrayCreateGetUTest.F90, linetUTest.F90, line 607
e 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array poin  PASS  ArrayCreate frter, from Array Copy (REFom Ptr with 3D farray on 2D D) Test, ESMF_ArrayCreateistGrid Test as Ptr, ESMF_ArrGetUTest.F90, line 559
ayCreateGetUTest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x22068f0:
            rank = 3, typekind = 5, base_addr = 0x7efbfc409bf0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayGet Test, ESMF_ArrayCreate  PASSGetUTest.F90, line 630
  Verify Array vs Array Co  PASS  Deallocatpy (REF) shared allocatie returned pointer Test, ESMFon Test1, ESMF_ArrayCreat_ArrayCreateGetUTest.F90, lineeGetUTest.F90, line 575
 637
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 644
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
  PASS  Verify Array vs Array Copy   PASS  ArrayCreate wi(REF) shared allocation Tth 3D farray on 2D DistGrid west1, ESMF_ArrayCreateGet/ ESMF_DATACOPY_VALUE Test, EUTest.F90, line 575
SMF_ArrayCreateGetUTest.F90, line 671
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
  PASS  Verify Array vs Array Copy (REF) shared all  PASS  ArrayCreate with 3D faocation Test1, ESMF_ArrarrayPtr on 2D DistGrid w/ ESyCreateGetUTest.F90, linMF_DATACOPY_VALUE Test, ESMF_Ae 575
rrayCreateGetUTest.F90, line 689
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayCreate from Ptr with 3D farr  PASS  ArrayCreate Allocate ay on 2D DistGrid Test2D ESMF_TYPEKIND_R8 w/ negat as Ptr, ESMF_ArrayCreaive computational widths TestteGetUTest.F90, line 616, ESMF_ArrayCreateGetUTest.F90,
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object =  line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray NegativeReady
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x22097b0:
LocalArrayPrint: Array at address 0xc1b8f0:
            rank = 3, typekind = 5, base_addr = 0x7f84724eac80
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
            rank = 2, typekind = 6, base_addr = 0x7efbfc409660
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.89819e-310
(10,13) =  303
(11,13) =  303
(12,13) =  303
(13,13) =  303
(14,13) =  303
(15,13) =  303
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 9,14) =  303
(10,14) =  303
(11,14) =  303
  skipping to end ...
(13,22) =  303
(14,22) =  303
(15,22) =  303
( 9,23) =  303
(10,23) =  303
(11,23) =  303
(12,23) =  303
(13,23) =  303
(14,23) =  303
(15,23) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
  PASS  Verify Array v( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPridim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKINDs Array Copy (REF) shared allocatint for ArrayCreate from Ptr Test, _R8 w/ computational widths Test, ESMF_Arron Test2, ESMF_ArrayCreateGetUTestESMF_ArrayCreateGetUTest.F90, line ayCreateGetUTest.F90, line 732
.F90, line 593
623
  PASS  PASS  ArrayDestroy Test, ESMF_Ar  PASS  ArrayDestroy Test, ESMF_A  ArrayGet Test, ESMF_ArrayCreateGrayCreateGetUTest.F90, line 739
rrayCreateGetUTest.F90, line 600
etUTest.F90, line 630
  PASS   PASS  Deallocat ArrayDestroy of Copy Te returned pointer Test  PASS  Verify Array vs Array Copy (R  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalest, ESMF_ArrayCreateGetUTest.F90, line 607
, ESMF_ArrayCreateGetUTest.F90, line 637
EF) shared allocation Test2, ESMF_ArrayCreEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line   PASS  ArrayDestateGetUTest.F90, line 593
748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~roy Test, ESMF_ArrayCreateGetUTes  PASS  ArrayDestr
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x22097b0:
            rank = 2, typekind = 6, base_addr = 0x7efbfc409bf0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9,13) =  2.74283e-317
(10,13) =  3.53751e-321
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,23) =  0
t.F90, line 644
oy Test, ESMF_ArrayCreateGetUTe(14,23) =  0
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPri  PASst.F90, line 600
nt 2D ESMF_TYPEKIND_R8 w/ computationalES  ArrayCreate from Ptr with 3D f  PASS  ArrayDestroy of Copy Tdge widths Test, ESMF_ArrayCreateGetUTestarray on 2D DistGrid Test as Ptr,  PASS  ArrayCreate with 3D farray est, ESMF_ArrayCreateGetUTest.F90, line 60.F90, line 755
 ESMF_ArrayCreateGetUTest.F90, line 616
on 2D DistGrid Test, ESMF_ArrayCreateGetUTe7
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ --- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
st.F90, line 653
  PASS  computationalEdge widths Test, ESMF_ArraLocalArrayPrint: Array at address 0x136c040:
            rank = 3, typekind = 5, base_addr = 0x7f3909c69da0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
ArrayDestroy Test, ESMF_ArrayCreatyCreateGetUTest.F90, line 768
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
eGetUTest.F90, line 660
  PASS  Check total widths for 2D   PASS  ArrayPrint for ArrayCreESMF_TYPEKIND_R8 w/ computatiate from Ptr Test, ESMF_  PASS  ArrayCreate fonalEdge widths Test, ESMF_ArrayCreateGetArrayCreateGetUTest.F90, line 623rom Ptr with 3D farray on 2D DiUTest.F90, line 778
  P
  PASS  Ar  PASS  ArrayCreate with 3D farray on 2D stGrid Test as Ptr, ESMF_ArrayCreateGetUTesASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F9rayGet Test, ESMF_ArrayCreateGetUTest.F90, lDistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_t.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = 0, line 787
ine 630
  PASS  DeallocaArrayCreateGetUTest.F90, line 671
Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xff48f0:
            rank = 3, typekind = 5, base_addr = 0x7fba52096ce0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
te returned pointer Test, ESMF_Ar  PASS  ArrayDestroy ( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKrayCreateGetUTest.F90, line 637
Test, ESMF_ArrayCreateGetUTest.F90, line 67( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint forIND_R8 w/ computationalEdge and total widths Test, ES  PASS  ArrayDestroy Test, ESMF_Arra8
 ArrayCreate from Ptr Test, ESMF_ArrayCreMF_ArrayCreateGetUTest.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = yCreateGetUTest.F90, line 644
ateGetUTest.F90, line 623
MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x22097b0:
            rank = 2, typekind = 6, base_addr = 0x7efbfc409ea0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
  PASS  ArrayCreate with 3  PASS  Array( 8,11) =  0
( 9,11) =  0
(10,11) =  0
(11,11) =  0
(12,11) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
(16,11) =  0
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayCreate with 3D farD farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VGet Test, ESMF_ArrayCreateGetUTest.F90, l  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computaray on 2D DistGrid Test, ESMF_ArrayCreateGeALUE Test, ESMF_ArrayCreateGetUTest.F90, linine 630
  PASS  DealltionalEdge and total widths Test, ESMF_ArrayCreateGettUTest.F90, line 653
  PASe 689
  PASS  ArrayDestrocate returned pointer Test, ESMF_ArrayCreUTest.F90, line 804
S  ArrayDestroy Test, ESMF_ArrayCreateGetUTeoy Test, ESMF_ArrayCreateGetUTest.F90, line 6ateGetUTest.F90, line 637
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computast.F90, line 660
96
  PASS  ArrayDestroy Test, ESMF_ArrayCrtionalEdge and total widths Test, ESMF_ArrayCreateGe  PASS  ArrayCreate eateGetUTest.F90, line 644
tUTest.F90, line 816
  PAwith 3D farray on 2D DistGrid w/ SS  Check total widths for 2DESMF_DATACOPY_VALUE Test ESMF_TYPEKIND_R8 w/ computat, ESMF_ArrayCreateGetUTionalEdge and total widths Test.F90, line 671
  PASS  ArrayCreate west, ESMF_ArrayCreateGetUTest.F90, lin  PASS  ArrayDestith 3D farray on 2D DistGrid Teste 824
  PASS  Check toroy Test, ESMF_ArrayCreateGetUTes, ESMF_ArrayCreateGetUTest.F90, tal bounds for 2D ESMF_TYPEKIND_R8 w/ comt.F90, line 678
line 653
  PAputationalEdge and total widths Test, ESM  PASS  ArSS  ArrayDestroy Test, ESMF_ArrF_ArrayCreateGetUTest.F90, line 846
rayCreate with 3D farrayPtr on 2DayCreateGetUTest.F90, line 660
 DistGrid w/ ESMF_DATACO  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetPY_VALUE Test, ESMF_ArraUTest.F90, line 855
yCreateGetUTest.F90, lin  PASS  ArrayCreate e 689
with 3D farray on 2D Dis  PASS  Create test Array with ESM  PASS  ArrayDestroy Test, ESMF_AtGrid w/ distgridToArrayMap Test,   PASS  ArrayCreate with 3D farray on 2D DistGrid wF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 8rrayCreateGetUTest.F90, line 696
ESMF_ArrayCreateGetUTest.F90, line 708
/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCre64
  PASS  ArrayGet Fortran array p  PASS  ArrayDestateGetUTest.F90, line 671
ointer for ESMF_PIN_DE_TO_PET Test, ESMFroy Test, ESMF_ArrayCreateGetUTes  PASS  ArrayDest_ArrayCreateGetUTest.F90, line 871
t.F90, line 715
roy Test, ESMF_ArrayCreateGetUTe  PASS  st.F90, line 678
  PASS  ArrayDestroy Test for array witArrayCreate Allocate 2D ESMF_TYPEh ESMF_PIN_DE_TO_PET, ESMF_ArKIND_R8 w/ negative comprayCreateGetUTest.F90, line 88utational widths Test, E  PASS  ArrayCrea5
  PASS  ArrayCreate with SMF_ArrayCreateGetUTest.F90, line 725
te with 3D farrayPtr on 2D DistGrid w/ ESM3D farray on 2D DistGrid w/ distg--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
F_DATACOPY_VALUE Test, ESMF_ArraridToArrayMap Test, ESMF_ArrayCredeCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc1b8f0:
            rank = 2, typekind = 6, base_addr = 0x7f84724ea690
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.92715e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
yCreateGetUTest.F90, line 689
ateGetUTest.F90, line 708
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  Arra  PASS  ArrayPrint 2D  PASS  ArrayDestroy Test, ESMF_ArrayCreyDestroy Test, ESMF_ArrayCreateGet ESMF_TYPEKIND_R8 w/ computationalateGetUTest.F90, line 696
UTest.F90, line 715
 widths Test, ESMF_ArrayCreateGetU  PATest.F90, line 732
SS  ArrayCreate Allocate 2D ESMF_TYPE  PASS  ArrayDestroy TKIND_R8 w/ negative cest, ESMF_ArrayCreateGetomputational widths TestUTest.F90, line 739
, ESMF_ArrayCreateGetUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,   PASS  ArrayCreate object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
 Allocate 2D ESMF_TYPEKLocalArrayPrint: Array at address 0x136c040:
            rank = 2, typekind = 6, base_addr = 0x7f3909c696f0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.91114e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
IND_R8 w/ computationalE( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
dge widths Test, ESMF_Ar( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PArayCreateGetUTest.F90,   PASS  ArrayCreate with SS  ArrayPrint 2D ESMF_TYPEKIND_R8line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = 3D farray on 2D DistGrid w/ distg w/ computational widths Test, ESMno
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc21aa0:
            rank = 2, typekind = 6, base_addr = 0x7f84724ea690
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.92715e-310
(10, 1) =  301
ridToArrayMap Test, ESMF_ArrayCreF_ArrayCreateGetUTest.F90, line 73(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
ateGetUTest.F90, line 708
2
  PASS  ArrayD(15,12) =  -3.01583e+58
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D Eestroy Test, ESMF_ArraySMF_TYPEKIND_R8 w/ compu  PASS  ArrayDestroy Test, ESMF_ArrayCreaCreateGetUTest.F90, line 739
tationalEdge widths Test, ESMF_ArteGetUTest.F90, line 715
rayCreateGetUTest.F90,   PASline 755
S  ArrayCreate Allocate  PASS  ArrayCreate Allocate 2D 2D ESMF_TYPEKIND_R8 w/  PASS  ArrayGet 2D  ESMF_TYPEKIND_R8 w/ negative co computationalEdge widths Test, EESMF_TYPEKIND_R8 w/ computationalEmputational widths Test, ESMF_ArSMF_ArrayCreateGetUTest.F90, linedge widths Test, ESMF_ArrayCreateGrayCreateGetUTest.F90, line 725
 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
etUTest.F90, line 768
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1370340:
            rank = 2, typekind = 6, base_addr = 0x7f3909c696f0
            dim[0] = 8  dim[1] = 12    PASS  Check total --- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xff48f0:
            rank = 2, typekind = 6, base_addr = 0x7fba520966b0
            dim[0] = 8  dim[1] = 11  

  Real, *8, Dim 2, Data values:
( 1, 1) =  6.91114e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
widths for 2D ESMF_TYPEKIND_R8 w/ c  Real, *8, Dim 2, Data values:
( 1,13) =  6.93858e-310
( 2,13) =  302
( 3,13) =  302
( 4,13) =  302
( 5,13) =  302
( 6,13) =  302
( 7,13) =  302
( 8,13) =  302
( 1,14) =  302
( 2,14) =  302
  skipping to end ...
( 7,22) =  302
( 8,22) =  302
( 1,23) =  302
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPromputationalEdge widths Test, ESMF_( 2,23) =  302
( 3,23) =  302
( 4,23) =  302
( 5,23) =  302
( 6,23) =  302
( 7,23) =  302
( 8,23) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  int 2D ESMF_TYPEKIND_R8 w/ computaArrayCreateGetUTest.F90, line 77ArrayPrint 2D ESMF_TYPEKIND_R8tionalEdge widths Test, ESMF_Arr8
  PASS  ArrayDe w/ computational widths Test, EayCreateGetUTest.F90, line 755
stroy Test, ESMF_ArrayCreateGetUTSMF_ArrayCreateGetUTest.F90, liest.F90, line 787
ne 732
  PASS  ArrayGe  PASS  ArrayDestroy t 2D ESMF_TYPEKIND_R8 w/Test, ESMF_ArrayCreateG computationalEdge widtetUTest.F90, line 739
hs Test, ESMF_ArrayCrea  PASS  ArrayCreate AteGetUTest.F90, line 768llocate 2D ESMF_TYPEKIND
  PASS _R8 w/ computationalEdge  PASS  ArrayCreate Alloca Check total widths for 2D ESMF_TY and total widths Test, ESMF_Arrate 2D ESMF_TYPEKIND_R8 w/ compuPEKIND_R8 w/ computationalEdge wiyCreateGetUTest.F90, line 797
tationalEdge widths Test, ESMF_Adths Test, ESMF_ArrayCreateGetUTes--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
rrayCreateGetUTest.F90, line 748t.F90, line 778
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc1b8f0:
            rank = 2, typekind = 6, base_addr = 0x7f84724eac80
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  2.74283e-317
( 9,-1) =  3.53751e-321
(10,-1) =  0
(11,-1) =  0
(12,-1) =  0
(13,-1) =  0
(14,-1) =  0
(15,-1) =  0

--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):  PASS  ArrayDestroy Test, ESMF_Ar(16,-1) =  0
(17,-1) =  0
  skipping to end ...
( 9,16) =  0
(10,16) =  0
(11,16) =  0
(12,16) =  0
(13,16) =  0
(14,16) =  0
(15,16) =  0
(16,16) =  0
(17,16) =  0
(18,16) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xffaaa0:
            rank = 2, typekind = 6, base_addr = 0x7fba52096ce0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.74283e-317
( 2,13) =  3.53751e-321
rayCreateGetUTest.F90, line 787
PASS  ArrayPrint 2D ESMF_TYPEKIND_R( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  0
( 3,24) =  0
( 4,24) =  0
( 5,24) =  0
( 6,24) =  0
( 7,24) =  0
( 8,24) =  0
8 w/ computationalEdge dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPand total widths Test, Erint 2D ESMF_TYPEKIND_SMF_ArrayCreateGetUTestR8 w/ computationalEdge  PASS  .F90, line 804
 widths Test, ESMF_ArrayCreateGeArrayCreate Allocate 2D ESMF_TYPE  PASS  ArraytUTest.F90, line 755
KIND_R8 w/ computationalEdge and Get 2D ESMF_TYPEKIND_R8 w/ computatotal widths Test, ESMFtionalEdge and total wi  PASS  ArrayGe_ArrayCreateGetUTest.F90, line 7dths Test, ESMF_ArrayCreatet 2D ESMF_TYPEKIND_R8 w/ computati97
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
GetUTest.F90, line 816
onalEdge widths Test, ESMF_ArrayCr{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x136c040:
            rank = 2, typekind = 6, base_addr = 0x7f3909c69da0
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.74283e-317
( 1,-1) =  3.53751e-321
( 2,-1) =  0
( 3,-1) =  0
  PASS  Check total widths for 2D EeateGetUTest.F90, line 768
( 4,-1) =  0
( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
SMF_TYPEKIND_R8 w/ computationalEdg  PASS  Check total widths --- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMFe and total widths Test, ESMF_Arrayfor 2D ESMF_TYPEKIND_R8 w/ compu_TYPEKIND_R8 w/ computationalEdgCreateGetUTest.F90, line 824
tationalEdge widths Test, ESMF_Arre and total widths Test, ESMF_Arr  PASS  Check total boundayCreateGetUTest.F90, line 778
ayCreateGetUTest.F90, line 804
s for 2D ESMF_TYPEKIND_R8 w/ computationalEdge a  PASS  ArrayDestroy Test, ESMF_A  PASS  Arnd total widths Test, ESMF_ArrayCrearrayCreateGetUTest.F90, line 787
rayGet 2D ESMF_TYPEKIND_R8 w/ comteGetUTest.F90, line 838
putationalEdge and tota  PASS  ArrayDestrl widths Test, ESoy Test, ESMF_ArrayCreateMF_ArrayCreateGetUTest.F9GetUTest.F90, line 855
0, line 816
  PASS  ArrayCreate Allocate 2  PASS  Check total wid  PASS  Create D ESMF_TYPEKIND_R8 w/ computationalths for 2D ESMF_TYPEKIND_R8 w/ comptest Array with ESMF_PIN_DE_TO_PET,Edge and total widths Test, ESMF_utationalEdge and total widths Test ESMF_ArrayCreateGetUTest.F90, line ArrayCreateGetUTest.F90, line 797
, ESMF_ArrayCreateGetUTest.F90, lin864
  PASS  ArrayGee 824
 t Fortran array pointer f--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0xffaaa0:
            rank = 2, typekind = 6, base_addr = 0x7fba52096ff0
            dim[0] = 12  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  0
 PASS  Check total bounds for 2D ESMor ESMF_PIN_DE_TO_PET Test, ESMF_Arra( 1,11) =  0
( 2,11) =  0
( 3,11) =  0
( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  skipping to end ...
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
(11,27) =  0
F_TYPEKIND_R8 w/ computationalEdge yCreateGetUTest.F90, line 871
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D and total widths Test, ESMF_ArrayCrESMF_TYPEKIND_R8 w/ compeateGetUTest.F90, line 83  PASS  ArrayDestroy Test for utationalEdge and total widths Test4
  PASS  ArrayDearray with ESMF_PIN_DE_TO_PET, ESMF_A, ESMF_ArrayCreateGetUTest.F90, listroy Test, ESMF_ArrayCreateGetUTesrrayCreateGetUTest.F90, line 885
ne 804
t.F90, line 855
  PASS  ArrayGe  PASS  Cret 2D ESMF_TYPEKIND_R8 w/ ate test Array with ESMF_computationalEdge and toPIN_DE_TO_PET, ESMF_Arraytal widths Test, ESMF_ArCreateGetUTest.F90, line rayCreateGetUTest.F90, 864
  line 816
PASS  ArrayGet Fortran ar  PASS  Check total widtray pointer for ESMF_PIN_hs for 2D ESMF_TYPEKIND_DE_TO_PET Test, ESMF_ArraR8 w/ computationalEdge yCreateGetUTest.F90, lineand total widths Test, E 871
SMF_ArrayCreateGetUTest.  PASS  F90, line 824
ArrayDestroy Test for arr  PASS  Check tay with ESMF_PIN_DE_TO_PEotal bounds for 2D ESMT, ESMF_ArrayCreateGetUF_TYPEKIND_R8 w/ computatTest.F90, line 885
ionalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 842
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_SS  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS I, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  PASS  ArrayGet Fortran array  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Te  ArrayGet Fortran array pointer for ESMF_PINpointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 907
_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
90, line 907
st.F90, line 907
  PASS  Arr  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_A  PASS  ArrayGet ssiLocalDeCayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test,  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_rrayCreateGetUTest.F90, line 925
ount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90 ESMF_ArrayCreateGetUTest.F90, line 925
SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI, line 925
  PASS  ArrayGet localDe Test, ESMF_ArrayCreateGetUTest.F90, line 944
  PASS  ArrayGet localDeToDeMap ESMF_PINToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCr  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Tes_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90eateGetUTest.F90, line 944
t, ESMF_ArrayCreateGetUTest.F90, line 944
, line 944
  PASS    PASS  ArraySync() f  PASS  ArraySync() for ESMF_PIN_D  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArraArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateor ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, liE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
yCreateGetUTest.F90, line 966
  PASS  LocalArraGetUTest.F90, line 966
  PASS  LocalArne 966
  PASS  LocalArrayGet Fortran ar  PASS  LocalArrayGet Fortran array pointer foyGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI TestrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_ray pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESr last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_A, ESMF_ArrayCreateGetUTest.F90, line 979
TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
MF_ArrayCreateGetUTest.F90, line 979
rrayCreateGetUTest.F90, line 979
  PASS  Test data  PASS  Test data i  PASS  Test data in LocalArray for las in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_Arrayn LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test,t ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGet  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMFCreateGetUTest.F90, line 1009
 ESMF_ArrayCreateGetUTest.F90, line 1009
UTest.F90, line 1009
_ArrayCreateGetUTest.F90, line 1009
  PASS  Array  PASS  ArrayCreate from Copy (REF), ESM  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Create from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_Arra  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
F_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayGeyCreateGetUTest.F90, line 1023
  PASS  ArrayGet Fortran ar  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESM  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, t Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateray pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F_ArrayCreateGetUTest.F90, line 1035
ESMF_ArrayCreateGetUTest.F90, line 1035
GetUTest.F90, line 1035
F90, line 1035
  PA  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetU  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArraSS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreTest.F90, line 1053
  PASS  ArrayGet localDeTo Test, ESMF_ArrayCreateGetUTest.F90, line 1053
yCreateGetUTest.F90, line 1053
 ateGetUTest.F90, line 1053
  PDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Te PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCrest, ESMF_ArrayCreateGetUTest.F90, line 1072
ateGetUTest.F90, line 1072
ateGetUTest.F90, line 1072
  PASS  ArraySync() fo  PASS  ArraySync() for ESMF_PIN_DE_TO_S  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, r ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
SI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  P, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArrline 1094
  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe   PASS  LocalArrayGet Fortran array pointer for last ssiLocalDASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_ayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrafor ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
e for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 11TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
yCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
07
  PASS  Test d  PASS  T  PASS  Test data in LocalArray for last ssiLoata in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, est data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TcalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreate  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test,ESMF_ArrayCreateGetUTest.F90, line 1137
O_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
GetUTest.F90, line 1137
 ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  ArrayD  PASS  ArrayDestroy Test for arrayCpy   PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_estroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_Arra  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
yCreateGetUTest.F90, line 1151
  PASS  ArrayCreat  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESM  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
e from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x13a9280:
            rank = 2, typekind = 6, base_addr = 0x7f3914edf000
            dim[0] = 8  dim[1] = 12  {}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x1001600:
            rank = 2, typekind = 6, base_addr = 0x7fba5d4ee000
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
( 8,13) =  20
( 1,14) =  20
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
( 2,23) =  20
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
( 6,23) =  20
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1001930:
            rank = 2, typekind = 6, base_addr = 0x7fba5d4ef000
            dim[0] = 7  dim[1] = 11  ESMF_ArrayCreateGetUTest.F90, line 1177
  PASS  ArrayGet ssiLocalDeCoun
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x13c8430:
            rank = 2, typekind = 6, base_addr = 0x7f3914ee0000
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
(13,11) =  10
(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(11,12) =  10
(12,12) =  10
(13,12) =  10
out Test, ESMF_ArrayCreateGetUTest.F90, line 1177
  PASS  A
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
(14,23) =  30
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), t ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout TestrrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTeESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177, ESMF_ArrayCreateGetUTest.F90, line 1177
st.F90, line 1185

  PASS  ArrayGet s  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayC  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_siLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, py Test, ESMF_ArrayCreateGetUTest.F90, line 1185
ArrayCreateGetUTest.F90, line 1204
  PASS  Test daF90, line 1185
  PASS  ArESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpta in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGey Test, ESMF_ArrayCreateGetUTest.F90, line 1204
F_ArrayCreateGetUTest.F90, line 1236
tUTest.F90, line 1204
  PASS  Test data in LocalArray for last ssiLocalDe for E  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArraySMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
CreateGetUTest.F90, line 1236
   PASS  ArraySync() for ESMF  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arr PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
ayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  A_ArrayCreateGetUTest.F90, line 1250
  PASS  ArrayDestroy  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ES  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, rrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_Array Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGeMF_ArrayCreateGetUTest.F90, line 1262
ESMF_ArrayCreateGetUTest.F90, line 1262
CreateGetUTest.F90, line 1262
tUTest.F90, line 1262
  PASS  ArrayDestroy Test for   PASS  ArrayDestroy Test for array with ESMF_PIN_D  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
E_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
  PASS  ArrayC  PASS  ArrayCreate Ass  PASS  ArrayCreate AssmdShape 1D ESMF_Treate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, linmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, lYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
e 1296
  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 ine 1296
  PASS  ArrayGet Fortran array pointer, 1D ESMF_  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKTest, ESMF_ArrayCreateGetUTest.F90, line 1303
TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
IND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPE  PASS  ArrayGet w/ incompatible For  PASS  ArrayGet w/ incompatible FortrKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = tran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGean array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGe  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrReady,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2215a20:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape tUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x13c7460:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
tUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc29520:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
ayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
  PASS  Array( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test,localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x10021b0:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMFDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
 ArrayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMF ESMF_ArrayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
 PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test,_ArrayCreateGetUTest.F90, line 1324
  PAS Test, ESMF_ArrayCreateGetUTest.F90, line 1324
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
 ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2215a20:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
S  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computa  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEK( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computa Test, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
tionalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
IND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.tionalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  Arra{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x13c7460:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESM--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0xc29520:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPriF90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x10021b0:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
yDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
F_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, nt AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ES( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negativline 1340
  PASS  ArrayDestroy Test, ESMF_MF_ArrayCreateGetUTest.F90, line 1340
  PAe computationalEdge widths Test, ESMF_ArrayCreateGetUTest.  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayGet FArrayCreateGetUTest.F90, line 1347
SS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
F90, line 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, E  PASS  ArrayCreate AssmdSetUTest.F90, line 1347
SMF_ArrayCreateGetUTest.F90, line 1366
  PASS hape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90,   PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayC ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMFline 1366
  PASS  ArrayGet Fortran array poin  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
reateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTes_ArrayCreateGetUTest.F90, line 1373
ter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_Rt.F90, line 1387
  PASS  ArrayCrea  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_T8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
te AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, linYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESe 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.FMF_ArrayCreateGetUTest.F90, line 1380
  PASS  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test,TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy90, line 1387
  PASS  ArrayC  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
 ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayDestro Test, ESMF_ArrayCreateGetUTest.F90, line 1420
reate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406  PASS  ArrayCreate AssmdShape 3D ESMF_y Test, ESMF_ArrayCreateGetUTest.F90, line 1387

  PASS  ArrayGet Fortran array pointer, 3DTYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
 ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413  PASS  ArrayGet Fortran array pointer, 3D ESM  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, li  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
F_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASne 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPE.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, li  PASS  AS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
KIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PAne 1453
rrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, linSS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, linee 1439
  PASS  ArrayG  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_A 1420
et Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCrrayCreateGetUTest.F90, line 1439
  P  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.FreateGetUTest.F90, line 1446
  PASS  ArrayDesASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4   PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 90, line 1514
troy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayD1439
  PASS  ArrayGet Fortran array pointer, 4D ESMF  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
estroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PAS  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90,  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1 line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArS  Create test Array for extra edge element test, ESMF_ArrayC453
rayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line reateGetUTest.F90, line 1514
  PASS  Create test Array for extra edge1569
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTe  PASS  ArrayDestroy Te element test, ESMF_ArrayCreateGetUTest.F90, line 1514
st.F90, line 1576
  PASS  Create Array onst, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  Create test Array for e single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F  PASS  Create Array on   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTestxtra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
90, line 1592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
.F90, line 1543
  PASS  C599
  PASS  Create Array Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x13c7460:
            rank = 1, typekind = 6, base_addr = 0x7f3909c692d0
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  6.91114e-310
( 2) =  9.311e-13
( 3) =  -1.07501e+59
( 4) =  6.60776e-317
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---
  PASreate Array on single DE DistGrid, ESMF_ArrayCreateGetUTest  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
 on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, lS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  Arraine 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGe  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetyPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
tUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, linUTest.F90, line 1576
  PASS  Create Array on si.F90, line 1569
  PASS  ArrayDestroy Test, ESMF_Arr--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Are 1644
ngle DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 159ayCreateGetUTest.F90, line 1576
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
2
  PASS  ArrayDestroy Test, ESMF_ArrayCreateray on single DE DistGrid with Fortran allocation, ESMF_ArrayC  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90GetUTest.F90, line 1599
reateGetUTest.F90, line 1592
  PASS  Arra, line 1576
  PASS  Create  PASS  Create Array on 4 DE DistGrid with only DyDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
 Array on single DE DistGrid with Fortran allocation, ESMF_ArE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTestrayCreateGetUTest.F90, line 1592
.F90, line 1627
  PASS  A  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, wit  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F9rrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
h Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
0, line 1599
  Ending Test, file ESMF_ArrayCreateGetUTest.F90,   PASS  ArrayDestroy Test, ESMF_ArrayCreateGet  PASS  Create Array on 4 DE DistGrid with only DE 0 elemenline 1644
UTest.F90, line 1634
  Ending Test, file ESMF_Arrts, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, linayCreateGetUTest.F90, line 1644
e 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PET 0  Test Elapsed Time    1.0088200000000001E+02  msec.
  PET 3  Test Elapsed Time   47.2780000000000129  msec.
  PET 1  Test Elapsed Time   47.0509999999999948  msec.
  PET 2  Test Elapsed Time   47.0829999999999984  msec.
