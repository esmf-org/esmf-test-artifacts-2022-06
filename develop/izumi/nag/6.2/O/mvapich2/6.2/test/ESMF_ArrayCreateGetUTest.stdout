build time -- 2022-05-27 05:27:41.307530
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  NUMBE  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
R_OF_PROCESSORS 4
  PASS  Testing Array Is 97
  NUMBER_OF_PRO  NUMBER_OF_PROCESSO  NUMBER_OF_PROCESSORS Created for uncreated object, ESMF_ArCESSORS 4
RS 4
4
rayCreateGetUTest.F90, line 118
  PASS  Testing Array IsCreated for uncr  PASS  Testing Arra  PASS  Testing Array IsCr  PASS  Testing Array IsCreated foreated object, ESMF_ArrayCreateGetUTest.F90, line 125
y IsCreated for uncreated oeated for uncreated object,  uncreated object, ESMF_Arrabject, ESMF_ArrayCreatESMF_ArrayCreateGetUTeyCreateGetUTest.F90, line eGetUTest.F90, line 118
st.F90, line 118
118
  P  PASS    PASS  Testing ArrASS  Testing Array ITesting Array IsCreatay IsCreated for uncrsCreated for uncreated for uncreated obeated object, ESMed object, ESject, ESMF_F_ArrayCreaMF_ArrayCreArrayCreatteGetUTestateGetUTeseGetUTest.F.F90, line t.F90, line90, line 12125
 125
5
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 171
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
  PASS  ArrayCreate Allocate  PASS  Crea  PASS  Create te  PASS  Create test Arra 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90,te test Array for IsCreated,st Array for IsCreated, ESMy for IsCreated, ESMF_Array line 186
  PASS  Array equ ESMF_ArrayCreateGetUTest.F9F_ArrayCreateGetUTest.F90, liCreateGetUTest.F90, line 143ality before assignment Test, ESMF_ArrayCreateGe0, line 143
ne 143

tUTest.F90, line 193
  PASS  Array assignment and eq  PASS  Testing Arra  PASS  Testing Array IsC  PASS  Testing Array IsCreateduality Test, ESMF_ArrayCreateGetUTest.F90, line 202
y IsCreated for created objreated for created object, ESMF for created object, ESMF_Array  PASS  ArrayDestroy Test, ESMF_ArrayCreect, ESMF_ArrayCreateGetUTest.F_ArrayCreateGetUTest.F90, lCreateGetUTest.F90, line 150ateGetUTest.F90, line 209
  PASS  Array 90, line 150
ine 150
 
  PASS  Tequality after destroy Test, ESMF_ArrayCreateGetUTest.  PASS  Testing Arr PASS  Testing Arrayesting Array IsCrF90, line 217
ay IsCreated  IsCreated foeated for cre  PASS  Array nofor created or created objated object, n-equality after destroy Tebject, ESMF_Arect, ESMF_ArraESMF_ArrayCreast, ESMF_ArrayCreateGetUTesrayCreateGetUyCreateGetUTeteGetUTest.F9t.F90, line 225
Test.F90, line 157
st.F90, line 157
0, line 157
  PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  Des  PASS  Destroy tes  PASS  Destroy test Arraytroy test Array for It Array for IsCreate for IsCreated, ESsCreated, ESMFd, ESMF_ArraMF_ArrayCre_ArrayCreayCreateGetateGetUTestteGetUTest.UTest.F90, .F90, line F90, line line 164
164
  PASS  Ar164
rayCreate Allocate 2D ES  PAS  PASS  TeMF_TYPEKIND_R8 rank i  PASS  TestiS  Testing Arsting Array Inconsistency Test, ESMF_Arrng Array IsCrray IsCreated sCreated for ayCreateGetUTest.F90, lineeated for desfor destroyeddestroyed obj 241
troyed object, object, ESMF_ect, ESMF_Array ESMF_ArrayArrayCreateCreateGetUTCreateGetUGetUTest.F9est.F90, li  PASS  ArrayCreaTest.F90, lin0, line 171
ne 171
te Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTe 171
  PASS  Te  PASS  Testing Arra  PASS  Testing Array IsCreaest.F90, line 249
sting Array IsCreated for dey IsCreated for destroyed objted for destroyed object, ES  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.Fstroyed object, ESMF_ArrayCrect, ESMF_ArrayCreateGetMF_ArrayCreateGetUTe90, line 256
eateGetUTest.FUTest.F90, list.F90, line 1  PASS  ArrayDestroy Test, 90, line 178
ne 178
78
ESMF_ArrayCreateGetUTest.F90, line 263
  PASS    PASS   PASS  ArArrayCreate Allocate   PASS  Array ArrayCreate rayCreate Allo2D ESMF_TYPEKIND_R8 Test w/Create AllocatAllocate 2D EScate 2D ESMF_ ArraySpec, ESMF_ArrayCreate 2D ESMF_TYPMF_TYPEKIND_RTYPEKIND_R8 TeeGetUTest.F90, line 277
EKIND_R8 Test8 Test, ESMF_Ast, ESMF_Array, ESMF_ArrarrayCreateGCreateGetUTyCreateGetUetUTest.F9est.F90, li  PASS  ArrayTest.F90, lin0, line 186
ne 186
Create Allocate 2D ESMF_TYe 186
PEKIND_R8 Test with ArraySpec, ES  PASSMF_ArrayCreateGe  PASS  A  PASS  Array e  Array equalitUTest.F90, line 285
rray equalityquality beforty before ass before ase assignmenignment Tes--- ESMCI::Array::print start ---
signment Testt Test, ESMF_t, ESMF_Array Base name    = MyArray with ArraySpec
, ESMF_ArrayCArrayCreateGeCreateGetUTes Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
reateGetUTesttUTest.F90, t.F90, line 1.F90, lineline 193
93
 193
  PAS  PASS  Array a  PASS  Array assignment aS  Array assignment assignment and equalitynd equality Test, ESnd equality Test, ESM Test, ESMF_ArrayCreatMF_ArrayCreateGetUTestF_ArrayCreateGetUTesteGetUTest.F90, line 2.F90, line 202
{}.F90, line 202
02
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1337040:
            rank = 2, typekind = 6,   PASS  PASS  Arraybase_addr = 0x7f16698806f0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
  PASS  ArrayD  ArrayDestroyDestroy Test,( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
estroy Test,  Test, ESMF_A ESMF_ArrayCre( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArESMF_ArrayCrerrayCreateGetUateGetUTest.FrayPrint 2D ESMF_TYPEKIND_RateGetUTest.F9Test.F90, lin90, line 209
8 Test, ESMF_ArrayCreateG0, line 209
e 209
etUTest.F90, line 292
  PAS  PASS    PASSS  Array eArray equal  Array eququality aftity after dality afteer destroy estroy Test Arrar destroy TestTest, ESMF_Ar, ESMF_ArrayCy name: MyArray with ArrayS, ESMF_ArrayCrayCreateGetUTreateGetUTest.pec                        reateGetUTest.est.F90, line 2F90, line 21                        F90, line 21          
7
17
7
  PASS  ArrayGet arrayspec and name, 2D ESMF  PASS  Ar  PASS  Arra  PASS  Array n_TYPEKIND_R8 Test, ESMF_Array non-equaly non-equaliton-equality arayCreateGetUTest.F90, linity after desy after destrfter destroy e 300
troy Test, ESoy Test, ESMFTest, ESMF_Ar  PASS  Verify ArraMF_ArrayCreat_ArrayCreateGrayCreateGetUySpec returned from Array,eGetUTest.F90etUTest.F90, Test.F90, lin ESMF_ArrayCreateGetUTest., line 225
line 225
e 225
F90, line 306
  PASS   PASS   PASS  Do  PASS  Doubl Verify name returned from Double Arrayuble ArrayDese ArrayDestro Array, ESMF_ArrayCreateGeDestroy throutroy through y through alitUTest.F90, line 312
gh alias Testalias Test, Eas Test, ESMF, ESMF_ArraSMF_ArrayCr_ArrayCreatyCreateGeteateGetUTeseGetUTest.F  PASS  ArrayGet FortranUTest.F90, lit.F90, line 290, line 232
 array pointer, 2D ESMF_TYne 232
32
PEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
  PA  PASS  ArrayC  PASS  ArrayCreate SS  ArrayCreate Allocate reate Allocate 2D ESMAllocate 2D ESMF_TYPE2D ESMF_TYPEKIND_R8 rF_TYPEKIND_R8 rank incKIND_R8 rank inconsisank inconsistency Tesonsistency Test, ESMtency Test, ESMF_Arrat, ESMF_ArrayCreateF_ArrayCreateGeyCreateGetUGetUTest.FtUTest.F90,Test.F90, l90, line 24 line 241
ine 241
1
  P  PASS   PASS  ArASS  Array ArrayCreatrayCreate ACreate Alloe Allocate llocate 2D cate 2D ES2D ESMF_TYESMF_TYPEKMF_TYPEKINPEKIND_R8 TIND_R8 TestD_R8 Test,est, ESMF_, ESMF_Arr ESMF_ArraArrayCreateayCreateGetyCreateGetUGetUTest.F9UTest.F90, Test.F900, line 24line 249
, line 9
249
  P  PASS   PASSASS  ArrayS ArraySet T  ArraySetet Test, ESest, ESMF_A Test, ESMMF_ArrayCrerrayCreateGF_ArrayCreateGetUTesetUTest.F9ateGetUTestt.F90, line0, line 256.F90, line  256

256
  PAS  PASS    PASS  S  ArrayDestArrayDestroArrayDestrroy Test, y Test, ESoy Test, EESMF_ArrayMF_ArrayCre  PASS  Getting AttriSMF_ArrayCreatCreateGetUTestateGetUTest.Fbute count from an Array, eGetUTest.F90.F90, line 2690, line 263
ESMF_ArrayCreateGetUTest., line 263
3
F90, line 326
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 332
  PASS  ArrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGe  PASS  A  PASS  AtUTest.F90, line 339  PASS  ArrarrayCreate AllrrayCreate All
yCreate Allococate 2D ESMFocate 2D ESMFate 2D ESM_TYPEKIND_R_TYPEKIND_F_TYPEKIND_8 Test w/ AR8 Test w/ R8 Test w/rraySpec, ArraySpec,  ArraySpecESMF_ArrayCESMF_ArrayC  PASS  ArrayCreate, ESMF_ArrayCrreateGetUTestreateGetUTest from Copy (ALLOC), 2D ESMeateGetUTest.F90, line 27.F90, line 27F_TYPEKIND_R8 Test, ESMF_A.F90, line 277
7
rrayCreateGetUTest.F90, li7
ne 347
 Array name: Array007                 PASS  A  PASS                       PASS  rrayCreate Al ArrayCreate                           ArrayCreate Alocate 2D ESMAllocate 2D E           
  PASS  Allocate 2D ESF_TYPEKIND_R8SMF_TYPEKIND_rrayGet arrayspec from ArMF_TYPEKIND_R Test with ArR8 Test with ray Copy (ALLOC) Test, ESM8 Test with AraySpec, ESMFArraySpec, ESF_ArrayCreateGetUTest.F90rraySpec, ESM_ArrayCreateGMF_ArrayCreat, line 355
F_ArrayCreateetUTest.F90, eGetUTest.F90  PASS  Verify ArraGetUTest.F90,line 285
, line 285
ySpec returned from Array  line 285
(ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90,--- ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 line 361
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec Base name    = MyArray with ArraySpec  PA Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = SS  ArrayGet Fortr
 Status: Base = Ready
 Proxy        = no
 Root Info (Attributes):

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
an array pointer, from ArrReady,  object = Ready
 Proxy        = no
 Root Info (Attributes):
ay Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
{}{}{}Array typekind/rank: Real*8 / 2 
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x282f810:
            rank = 2, typekind = 6, base_addr = 0x7f57766466b0
            ~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b72810:
            rank = 2, typekind = 6, base_addr = 0x7f97eb90a660
            dim[0] = 7  dim[1] = 11  deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20b3810:
            rank = 2, typekind = 6, base_addr = 0x7f1f04fdb690
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0

  Real, *8, Dim 2, Data values:
( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
 dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  --- ESMCI::Array::print end ---
  P PASS  ArraPASS  ArraASS  ArrayPyPrint 2D EyPrint 2D Erint 2D ESMSMF_TYPEKINSMF_TYPEKINF_TYPEKINDD_R8 Test, D_R8 Test, _R8 Test, ESMF_ArrayESMF_ArrayESMF_ArrayCreateGetUCreateGetUCreateGetUTest.F90, Test.F90, lTest.F90, lline 292
ine 292
ine 292
 Array na Array na Array name: MyArrame: MyArrayme: MyArrayy with Arra with Arra with ArraySpec     ySpec     ySpec                                                                                                                                                          
          
  PAS
  S  Array  PASS  ArrayGPASS  ArrayGet arrayspet arrayspeGet arraysec and namc and namepec and nae, 2D ESMF_, 2D ESMF_T  PASS  Verify Arme, 2D ESMF_TTYPEKIND_R8 YPEKIND_R8 Teray vs Array Copy (ALLOC) YPEKIND_R8 TeTest, ESMF_Arst, ESMF_Arrano data copy, ESMF_ArrayCst, ESMF_ArrarayCreateGetUyCreateGetUTereateGetUTest.F90, line 384yCreateGetUTesTest.F90, linest.F90, line 3
t.F90, line  300
00
300
  PA  PASS  PASSSS  Verif  Verify   Verify Ary ArraySpeArraySpec raySpec rec returnedreturned frturned from from Arrayom Array,  Array, ES, ESMF_ArrESMF_ArrayCMF_ArrayCrayCreateGereateGetUTeateGetUTetUTest.F90,est.F90, list.F90, li line 306
ne 306
ne 306
  PA  PASS   PASS  SS  Verify  Verify naVerify namname returme returnede returned ned from Ar from Arrayfrom Arrayray, ESMF_A, ESMF_Arr, ESMF_ArrarrayCreateGayCreateGetyCreateGetetUTest.F9UTest.F90, UTest.F90,0, line 31line 312
 line 312
2
  PA  PASS   PASS SS  ArrayG ArrayGet  ArrayGet et Fortran Fortran arrFortran arrarray poinay pointer,ay pointerter, 2D ES 2D ESMF_T, 2D ESMF_MF_TYPEKINDYPEKIND_R8 TYPEKIND_R8_R8 Test, ETest, ESMF_ Test, ESMSMF_ArrayCArrayCreateF_ArrayCrereateGetUTeGetUTest.FateGetUTestst.F90, lin90, line 31.F90, linee 319
9
 319
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1337cf0:
            rank = 2, typekind = 6, base_addr = 0x7f1669880a00
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
( 5, 1) =  100
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
( 8,11) =  100
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
( 4,12) =  100
( 5,12) =  100
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 438
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 446
 Array name: Array009                                           PASS    PASS  Gett  PASS  Gettin                           Getting Attribing Attribute cg Attribute cou    
  PASS  ArrayGet ute count fromount from an Ant from an Arrarrayspec from Array Copy ( an Array, ESMFrray, ESMF_Array, ESMF_ArrayVALUE) Test, ESMF_ArrayCrea_ArrayCreateGeayCreateGetUTesCreateGetUTest.teGetUTest.F90, line 454
tUTest.F90, lit.F90, line 32F90, line 326
  PASne 326
6
S  Verify ArraySpec returned from Array (VALUE)   PASS  PASS  Verif  PASS  VerifyCopy, ESMF_ArrayCreateGet  Verify Attriy Attribute co Attribute couUTest.F90, line 460
bute count frunt from an Arnt from an Arr  PASS  Arrom an Array, Eray, ESMF_Arraay, ESMF_ArrayCayGet Fortran array pointeSMF_ArrayCreatyCreateGetUTestreateGetUTest.r, from Array Copy (VALUE)eGetUTest.F90,.F90, line 332F90, line 332
 Test, ESMF_ArrayCreateGetU line 332

Test.F90, line 467
  PASS  PAS  PA  ArraySS  ArrayCreate frS  ArrayCreate frCreate froom Copy, unom Copy, unm Copy, uniinitializedinitializednitialized  Array Test Array TestArray Test, ESMF_Arra, ESMF_Array, ESMF_ArrayCreateGetUCreateGetUTyCreateGetUTest.F90, lest.F90, liTest.F90, line 339
ne 339
ine 339
  PA  PAS  SS  ArrayCrS  ArrayCrePASS  Arrayeate from Cate from CoCreate fromopy (ALLOC),py (ALLOC),  Copy (ALLO 2D ESMF_TY2D ESMF_TYPC), 2D ESMFPEKIND_R8 TEKIND_R8 Te_TYPEKIND_Rest, ESMF_Ast, ESMF_Arr8 Test, ESMrrayCreateGayCreateGetF_ArrayCreaetUTest.F90UTest.F90, teGetUTest., line 347
line 347
F90, line 347
 Arra Array n Ay name: Arrame: Array0rray name: ay007      07         Array007                                                                                                                                                                                     
       
             PASS    PASS  Ar  
  PAArrayGet arrayGet arraSS  ArrayGerayspec froyspec from t arrayspecm Array CopArray Copy ( from Arrayy (ALLOC) TALLOC) Test Copy (ALLOest, ESMF_A, ESMF_ArrayC) Test, ESrrayCreateGCreateGetUTMF_ArrayCreetUTest.F90est.F90, li  PASS  VerateGetUTest.F90, line 355
ne 355
ify Array vs Array Copy (V, line 355
ALUE) data copy, ESMF_Ar  PASS   PASS  VerirayCreateGetUTest.F9  PASS  Verify ArraySfy ArraySpec r0, line 483
 Verify ArraySpec returned feturned from Arpec returnerom Array (ray (ALLOC)d from ArraALLOC) Copy Copy, ESMFy (ALLOC) C, ESMF_Array_ArrayCreateopy, ESMF_ACreateGetUTGetUTest.F9rrayCreateGest.F90, li0, line 361etUTest.F90ne 361

, line 361
  P  PASS ASS  Arr ArrayGeayGet For  PASS  t Fortran artran array ArrayGet Foray pointerpointer, frtran arra, from Arom Array Cy pointer, rray Copy (opy (ALLOC)from Array ALLOC) Test Test, ESMFCopy (ALLOC, ESMF_Arra_ArrayCreate) Test, ESMFyCreateGetUTGetUTest.F9_ArrayCreatest.F90, li0, line 368eGetUTest.Fne 368

90, line 368
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Arra  PASS  Vy Copy (REF) Terify Aest, ESMF_Arrayrray vs CreateGetUTestArray Co.F90, line 546py (ALLO
C) no d  PASS  Vata copyerify ArraySpe, ESMF_Ac returned fromrrayCre Array Copy (R  PASS  VateGetUTestEF), ESMF_ArrayCreateerify Array.F90, line GetUTest.F90, line 5 vs Array C384
52
opy (ALLOC  PASS  Verif  PASS  ArrayGe) no data cy Array vst Fortran array poinopy, ESMF_A Array Copyter, from Array CoprrayCreateG (ALLOC) noy (REF) Test, ESMF_AetUTest.F9 data copyrrayCreateGetUTest.F0, line 384, ESMF_Arra90, line 559

yCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  V  PASS  erify ArArrayDesray vs troy TesArray Cot, ESMF_py (ALLArrayCreOC) sepaateGetUTrate meest.F90mory al, line 4location09
, ESMF_  PASS  VerifArrayCreay Array --- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = ReadyteGetUTest.vs Array Cop,  object = Ready
 Proxy        = no
 Root Info (Attributes):
F90, line y (ALLOC) 402
separate memo{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
ry allo~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b73680:
            rank = 2, typekind = 6, base_addr = 0x7f97eb90a8e0
              PAScation, ESMdim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  103
(10,13) =  103
S  ArrayDeF_ArrayCre(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103
(15,13) =  103
( 9,14) =  103
stroy Test,ateGetUTest(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
(15,22) =  103
 ESMF_Arra.F90, line ( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
(13,23) =  103
(14,23) =  103
yCreateGet402
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
UTest.F90, line  PASS   409
ArrayPri  PASS  nt from   PASS  Verify --- ESMCI::Array::print start ---
 Base name    = Array007ArrayDestroy TCopy (ALLOC) aArray vs Array Copy (REF)
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
est, ESMF_Arrafter original  shared allocation Test2, yCreateGetUdestroy, 2DESMF_ArrayCreateGet{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~Test.F90, lin ESMF_TYPEKINDUTest.F90, line 593

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20b4680:
            rank = 2, typekind = 6, base_addr = 0x7f1f04fdb940
            e 409
_R8 Test, ESM  PASS  Adim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
(10, 1) =  101
(11, 1) =  101
F_ArrayCrerrayDestroy Test, ES(12, 1) =  101
(13, 1) =  101
(14, 1) =  101
(15, 1) =  101
( 9, 2) =  101
(10, 2) =  101
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = ateGetUTest.FMF_ArrayCreateGetUTest.F9(11, 2) =  101
  skipping to end ...
(13,11) =  101
(14,11) =  101
(15,11) =  101
( 9,12) =  101
(10,12) =  101
(11,12) =  101
no
 Root Info (Attributes):
90, line 416
0, line 600
(12,12) =  101
(13,12) =  101
(14,12) =  101
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  {}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
ArrayDestroy o  PASS ~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2830680:
            rank = 2, typekind = 6, base_addr = 0x7f5776646980
            dim[0] = 8  f Copy Test, ESMF_A ArrayPrindim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  102
( 2,13) =  102
  PASS  ArrayDerrayCreateGetUTest.F90, lit from Copy (A( 3,13) =  102
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
( 2,14) =  102
stroy of Copyne 607
LLOC) after o  skipping to end ...
( 7,22) =  102
( 8,22) =  102
( 1,23) =  102
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
 (ALLOC) Testriginal de( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
, ESMF_Arrastroy, 2D E--- ESMCI::Array::print end ---
yCreateGetUSMF_TYPEKI  PASS  ArrTest.F90, lND_R8 Test,ayPrint froine 423
 ESMF_Arram Copy (ALyCreateGLOC) aftetUTest.er origiF90, linal destne 416
roy, 2D ESMF_TYPEKIND_R  8 Test,PASS  A ESMF_ArrrayDestrayCreatroy of eGetUTes  PASS  ArrCopy (ALLOt.F90, lineayCreate AlC) Test, ES 416
locate 2D EMF_ArrayCrSMF_TYPEeateGetUKIND_R8 Test.F9  PASS  ArraTest with A0, line 423yDestroy ofrraySpec, 
 Copy (ALLESMF_ArrayCOC) TestreateGet, ESMF_AUTest.F9rrayCrea0, line teGetUTe431
st.F90, line 423
  PASS  ArrayGet   PFortranASS  Arr array payCreatointer, e Alloca2D ESMF_te 2D ESTYPEKINDMF_TYPE_R8 TestKIND_R8 , ESMF_A  PASS  ArrTest with rrayCreateGayCreate from Ptr wiArraySpec,   PASS  ArrayCetUTest.F90, lth 3D farray on 2D DistGESMF_ArrayCreareate Allocateine 438
rid Test as Ptr, ESMF_ArrateGetUTest.F9 2D ESMF_TYPEyCreateGetUTest.F90,0, line 431KIND_R8 Te line 616

st with Arr--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = ReadyaySpec, 
 Proxy        = no
 Root Info (Attributes):
ESMF_Ar  PASS {}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
  PASS  ArrayGrayCreateGetUT ArrayCreate fLocalArrayPrint: Array at address 0x1337040:
            rank = 3, typekind = 5, base_addr = 0x7f1669880da0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
et Fortran arrest.F90, linerom Copy (VAL( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
ay pointer, 2 431
UE), 2D ESMF_( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASD ESMF_TYPEKITYPEKIND_R8S  ArrayPrint for ArrND_R8 Test,  PASS  Arr Test, ESMF_AayCreate from Ptr Test,  ESMF_ArrayCrayGet FortranrrayCreateGetUESMF_ArrayCreateGetUTest.FeateGetUTest.F array pointerTest.F90, line90, line 623
90, line 438
, 2D ESMF_TYP 446
  PASS  ArraEKIND_R8 TeyGet Test, ESMFst, ESM_ArrayCreateGeF_ArrayCtUTest.F90, line 630
reateGetUTest.F90, lin Array name: Arra  PASS  Deallocate returned pointer  PASS  ArrayCreate from Cope 438
y009                         Test, ESMF_ArrayCreateGetUTest.F90, line 637
y (VALUE), 2D ESMF_TYPEKIND                       PASS  ArrayDestroy Test_R8 Test, ESMF_Array  PASS  ArrayCreate                    , ESMF_ArrayCreateGetUTest.F90CreateGetUTest from Copy (VA       
  , line 644
.F90, line 446LUE), 2D ESMF_PASS  ArrayGe
TYPEKIND_Rt arrayspec8 Test,  from ArESMF_Array CopyrayCreat (VALUE)  PeGetUTest. Test, ESMFASS  ArrayCreate wi Array name: AF90, line 446_ArrayCreateGth 3D farray on 2D DistGrrray009      
etUTest.F90, lid Test, ESMF_ArrayCreate              ine 454
GetUTest.F90, line 6           53
         PASS          Array nam  PASS  Ver ArrayDestroy Test, ESMF             e: Array009  ify ArraySpec_ArrayCreateGetUTest.F90                           returned fro, line 660

  PASS               m Array (VALUArrayGet a           E) Copy, ESrrayspec fr          MF_ArrayCreom Array C           ateGetUTest  PASS  Aropy (VALUE) Te            
.F90, line 46rayCreate with 3D farrayst, ESMF_Arra  PASS  Ar0
 on 2D DistGrid w/ ESMF_yCreateGetUTerayGet arraysDATACOPY_VALUE Test,st.F90, linpec from Ar  PASS  ArrayGe ESMF_ArrayCreateGetUTeste 454
ray Copy (VALt Fortran arr.F90, line 671
UE) Test, ay pointer  PASS   PASS  VerifESMF_ArrayCrea, from Array C ArrayDestroy Test, ESMFy ArraySpec rteGetUTest.F90opy (VALUE) T_ArrayCreateGetUTest.F90, eturned from A, line 454
est, ESMF_Arrline 678
rray (VALUE) ayCreateGeCopy, EtUTest.FSMF_Arra  PASS  90, line 46yCreateGetUVerify Arra7
  PASS  ArrayCreate wiTest.F90, linySpec returneth 3D farrayPtr on 2e 460
d from ArraD DistGrid w/ ESMF_Dy (VALUATACOPY_VALUE E) Copy,Test, ESMF_Arr  PASS  A ESMF_ArraayCreateGetUTest.F9rrayGet ForyCreateGetU0, line 689
tran arrayTest.F90, l  PASS   pointer, fine 460
ArrayDestroy Test, rom Array ESMF_ArrayCreCopy (VateGetUTest.F90ALUE) Te, line 696
st, ESM  PASS  ArrayGeF_ArrayCt FortrreateGetan arrayUTest.F9 pointer0, line, from A 467
rray Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base =   PASS Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Verify {}Array typekind/rank: Real*8 / 2 
~ lower class' values ~Array v
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1337040:
            rank = 2, typekind = 6, base_addr = 0x7f16698806f0
            dim[0] = 8  s Array dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.9038e-310
( 2, 1) =  300
( 3, 1) =  300
Copy (VA( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
LUE) dat  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
a copy,( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
 ESMF_Ar  PASS  ArrrayCreaayPrint 2D ESMteGetUTeF_TYPEKIND_R8 st.F90, w/ computationaline 483l widths Test
, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  Verify Array vs Array  PASS Copy (V  ArrayCreate ALUE) daAllocate 2D ESMta copy,F_TYPEKIND_R8  ESMF_Arw/ computationrayCreatalEdge widths TeGetUTeest, ESMF_Arrayst.F90, CreateGetUTesline 483t.F90, line 74
8
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        =   PASS  no
 Root Info (Attributes):
{}Verify AArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x133b340:
            rank = 2, typekind = 6, base_addr = 0x7f16698806f0
            rray vsdim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.9038e-310
( 2, 1) =  300
( 3, 1) =  300
 Array C( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
opy (VAL( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
UE) dat( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
a copy,   PASS  ArrayPriESMF_Arrnt 2D ESMF_TYPayCreateEKIND_R8 w/ coGetUTestmputationalEdg.F90, lie widths Test,ne 483
 ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
  PASS--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
  Verify Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 Array v{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
s Array DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1337040:
            rank = 2, typekind = 6, base_addr = 0x7f1669880da0
            dim[0] = 12  dim[1] = 18  Copy (VA
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.72572e-317
( 1,-1) =  3.53751e-321
( 2,-1) =  0
( 3,-1) =  0
( 4,-1) =  0
LUE) sep( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
arate m( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
emory aldim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASSlocation  ArrayPrint 2, ESMF_AD ESMF_TYPEKINrrayCreaD_R8 w/ computteGetUTationalEdge anest.F90,d total widths line 50 Test, ESMF_Arr1
ayCreateGetUTest.F90, line 804
  PASS  ArrayDestroy Tes  PASS  Arrayt, ESMF_ArrayCreatGet 2D ESMF_TYPEKIND_R8 w/ computationaleGetUTest.F90, Edge and total widths Test, line 508
ESMF_ArrayCreateGetUTest.F90, line 816
  PASS  Ar  PASS  Check totrayDestroy of al widths for 2D ESMF_TYPE  PASS  VeriCopy (VALUE) TeKIND_R8 w/ computatiofy Array vsst, ESMF_ArnalEdge and total w Array CopyrayCreateGeidths Test, ESMF_Ar (VALUE) setUTest.F90,rayCreateGetUTest.F9parate mem line 515
0, line 824
ory allocat  Pion, ESASS  Check totMF_Arrayal bounds for CreateG2D ESMF_TYPEKIetUTest.ND_R8 w/ compuF90, lintationalEdge ae 501
nd total widths Test, ESMF_ArrayCreateGetU  PASS Test.F90, line  PASS  Ar ArrayCreat 834
rayDestroye Allocate   PASS  ArrayDe Test, ESMF2D ESMF_TYPstroy Test, ESMF_Arr_ArrayCreat  PASS  VerEKIND_R8 Test ayCreateGetUTest.F90, lineGetUTest.F90ify Array vs with ArraySpee 855
, line 508
Array Copy (Vc, ESMF_ArrayALUE) seCreateGe  Pparate memotUTest.F90,ASS  Arrayry allocati line 523
  PASS  Create test ArrDestroy of Copon, ESMF_Arraay with ESMF_PIN_DEy (VALUE) yCreateGetU_TO_PET, ESMF_ArrayCTest, ESMF_Test.F90,   PASS  ArrayGereateGetUTest.F90, line ArrayCreateGeline 501
t Fortran arr864
tUTest.F90, lay pointer,  PASS  ArrayGet Forine 515
 2D ESMF_Ttran array pointer f  PASS  ArrayDeYPEKIND_R8 or ESMF_PIN_DE_TO_Pstroy TestTest, ESMFET Test, ESMF_Array, ESMF_Arra_ArrayCreatCreateGetUTest.F90, yCreateGetUeGetUTest.Fline 871
Test.F90, 90, line 5line 50830
  PASS   PASS
 ArrayDestroy Test   ArrayCrefor array withate Allo  PASS  Arra ESMF_PIN_DE_TO_PETcate 2D ESyDestroy o, ESMF_ArrayCreateGeMF_TYPEKINDf Copy (VALtUTest.F90, line 88_R8 Test wiUE) Test,   PASS  Arra5
th ArraySpec,ESMF_ArrayCreyCreate from  ESMF_ArraateGetUTesCopy (REF),yCreateGetUt.F90, line 2D ESMF_TYTest.F90,  515
PEKIND_R8 line 523
Test, ESMF_ArrayCreateG  etUTest.PASS  ArF90, linrayGet Fe 538
ortran array point  PASS er, 2D E ArrayCrSMF_TYPeate AllEKIND_R8ocate 2D Test,  ESMF_T Array name: ArESMF_ArrayCYPEKIND_R8 ray011     reateGetUTTest with           est.F90, liArraySpec,            ne 530
ESMF_Array           CreateGe       tUTest.F        90, lin        e 523
            
    PASS   PAPASS  Array ArrayGet aSS  ArrayCrGet Fortranrrayspec freate from  array poiom Array CCopy (REF),nter, 2D ESopy (REF) T 2D ESMF_TMF_TYPEKINest, ESMF_YPEKIND_R8 D_R8 Test, ArrayCreateTest, ESMFESMF_ArrayCGetUTest.F9_ArrayCreatreateGetUTe0, line 546eGetUTest.st.F90, li
F90, line ne 530
538
  PASS  Verify ArraySpec returned from  ArrArray Coay namepy (REF: Array0  PASS  Ar), ESMF_Arra11         rayCreate fyCreateGet           rom Copy (RUTest.F90,           EF), 2D ESline 552
           MF_TYPEKIND       _R8 Test        , ESMF_A       rrayCrea  PASS  ArrayGe         
teGetUTest.t Fortran a  PASS F90, line rray point ArrayGet 538
er, from Ararrayspec ray Copyfrom Arr (REF) Tay Copyest, ESM (REF) TF_ArrayCest, ESM Array name:reateGetUTesF_ArrayCre Array011 t.F90, lineateGetUTest            559
.F90, line           546
                    PASS          Verify          ArraySpe        c return       
ed from Array  PASS  Ar Copy (RrayGet aEF), ESMrrayspecF_ArrayC from ArreateGetray Copy UTest.F9(REF) Te0, line 5st, ESMF_52
ArrayCreateGetUTes  PASSt.F90, li  ArrayGne 546
et Fortran array pointe  PASS  r, from AVerify Array CoprraySpecy (REF)  returneTest, ESd from AMF_Arrayrray CopCreateGety (REF), UTest.F9ESMF_Arr0, line ayCreate559
GetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGet  PASS UTest.F9 Verify 0, line Array vs607
 Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b72810:
            rank = 3, typekind = 5, base_addr = 0x7f97eb90abf0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest  .F90, liPASS  Arne 623
rayCreate from Ptr with 3D f  PASS  array onArrayGet 2D Dist Test, EGrid TesSMF_Arrat as PtryCreateGe, ESMF_AtUTest.FrrayCrea90, lineteGetUT 630
est.F90, line 616
  PASS  Deallo--- ESMCI::Array::print start ---
cate re Base name    = MyArray
 Status: Base = Ready,  object = turned poReady
 Proxy        = no
 Root Info (Attributes):
  PASS  inter Test,ArrayCre ESMF_Ar{}ate from PrayCreateGeArray typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20b3810:
tr with 3D tUTest.F90,            rank = 3, typekind = 5, base_addr = 0x7f1f04fdbc80
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
farray on 2 line 637
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
D DistGrid( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
 Test as(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
 Ptr, ES  PASS  Arr(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
MF_ArrayCrayDestroy ( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
eateGetUTesTest, ESMF_dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
 t.F90, liArrayCrea PASS  Arrane 616
teGetUTest.yPrint forF90, lin ArrayCr--- ESMCI::Array::print start ---
 Base name    = MyArraye 644
eate from P
 Status: Base = Ready,  object = Ready
 Proxy        = no
tr Test Root Info (Attributes):
, ESMF_ArrayC{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
reateGeDistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x282f810:
tUTest.F            rank = 3, typekind = 5, base_addr = 0x7f5776646ce0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  90, lin
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
e 623
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
  PASS( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
  ArrayG( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
et Test, ESMF  PASS  _ArrayCrArrayPrieateGetUnt for ArTest.F90rayCreat, line 6e from P30
tr Test, ESMF_Arra  PyCreateASS  DeaGetUTestllocate .F90, lireturnene 623
d pointer Test, ESMF_ArrayC  PASS reateGet ArrayGetUTest.F9 Test, E0, line SMF_Arra637
yCreateGetUTest.F9  0, line PASS  Ar630
rayDestroy Test, ESMF_  PASS  ArrayCrDeallocaeateGetUte returTest.F90ned poin, line ter Test644
, ESMF_ArrayCreateGetUTest.F90, line 637
  PASS  ArrayDestro  PASS  y Test,ArrayCre ESMF_Arate withrayCreat 3D farraeGetUTey on 2D st.F90, DistGridline 64 Test, E4
SMF_ArrayCreateGetUTest.F90, line 653
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF  PASS_Arra  ArrayyCreateGCreate wetUTest.ith 3D fF90, liarray onne 653
 2D DistGrid Test, ESMF  PAS_ArrayCrS  ArraeateGetUyDestroyTest.F90 Test, , line 6ESMF_Arr53
ayCreateGetUTest.F90, l  PASS  Arine 660
rayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
  PASS  Ar  PArayCreatSS  Arre with 3ayCreateD farray  PASS  ArrayD with 3D fa on 2D Distestroy Test,rray on 2D Grid w/ ESM ESMF_ArrayDistGrid w/F_DATACOPY_CreateGetUT ESMF_DATAVALUE Test,est.F90, liCOPY_VALUE  ESMF_Arrayne 678
Test, ESMFCreateGetU_ArrayCrTest.F90,eateGetU line 67Test.F901
, line 671
  PASS  ArrayD  PASS estroy T ArrayDest, ESMestroy TF_ArrayCest, ESMreateGetF_ArrayCUTest.F90reateGet, line 6UTest.F978
0, line 678
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGrid w/ ESM  PASS  F_DATACOArrayCrePY_VALUEate with   PA Test, ESMF3D farrayPtSS  ArrayCr_ArrayCreatr on 2D Dieate with 3eGetUTest.FstGrid w/ ED farrayPtr90, line 689SMF_DATACOPY on 2D Dist
_VALUE TestGrid w/ ESM, ESMF_AF_DATACO  PASS  ArrayCreateGPY_VALUE TrrayDestroyetUTest.F90est, ESMF_A Test, ESMF, line 689
rrayCreateG_ArrayCreatetUTest.eGetUTesF90, lit.F90, lne 689
ine 696
  PASS  ArrayDestroy Test, ES  PAMF_ArrayCSS  ArrareateGetyDestroyUTest.F Test, E90, lineSMF_Arra 696
yCreateGetUTest.F90, line 696
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x282f810:
            rank = 2, typekind = 6, base_addr = 0x7f57766466b0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  6.9176e-310
( 2,13) =  302
( 3,13) =  302
( 4,13) =  302
( 5,13) =  302
( 6,13) =  302
( 7,13) =  302
( 8,13) =  302
( 1,14) =  302
( 2,14) =  302
  skipping to end ...
( 7,22) =  302
( 8,22) =  302
( 1,23) =  302
( 2,23) =  302
( 3,23) =  302
( 4,23) =  302
( 5,23) =  302
( 6,23) =  302
( 7,23) =  302
( 8,23) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x28359c0:
            rank = 2, typekind = 6, base_addr = 0x7f5776646ce0
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.72572e-317
( 2,13) =  3.53751e-321
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  0
( 3,24) =  0
( 4,24) =  0
( 5,24) =  0
( 6,24) =  0
( 7,24) =  0
( 8,24) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Tes  PASS  t, ESMF_ArrayCreArrayCreate withateGetUT 3D farrest.F90,ay on 2D line 76 DistGrid8
 w/ distgridT  PAoArrayMaSS  Checp Test, k totalESMF_Arr widths ayCreatefor 2D EGetUTestSMF_TYPE.F90, linKIND_R8 e 708
w/ computationalEdge widths   PASS  ArTest, ESrayDestrMF_Arrayoy Test,CreateGe ESMF_ArtUTest.FrayCreat90, lineeGetUTes 778
t.F90, line 715
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787  PASS  Ar
rayCreat  PASS e Alloca ArrayCrte 2D ESMeate witF_TYPEKIh 3D farND_R8 w/ray on 2 negativD DistGre computaid w/ ditional wstgridTidths TeoArrayMast, ESMFp Test, _ArrayCreESMF_ArrateGetUTayCreatest.F90,eGetUTes line 72t.F90, 5
line 708
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
   Root Info (Attributes):
PASS  ArrayD{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
estroy TdeCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b756d0:
            rank = 2, typekind = 6, est, ESbase_addr = 0x7f97eb90a660
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
MF_ArrayCreat( 9,13) =  6.93128e-310
(10,13) =  303
(11,13) =  303
(12,13) =  303
(13,13) =  303
eGetUTe(14,13) =  303
(15,13) =  303
( 9,14) =  303
(10,14) =  303
st.F90, (11,14) =  303
  skipping to end ...
(13,22) =  303
(14,22) =  303
line 715(15,22) =  303
( 9,23) =  303
(10,23) =  303
(11,23) =  303
(12,23) =  303

(13,23) =  303
(14,23) =  303
(15,23) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ co  PASmputatioS  Arraynal widtCreatehs Te Allocast, ESMFte 2D ES_ArrayCreMF_TYPEKateGetUTIND_R8 west.F90, / negatiline 732ve compu
tational widths Te  PASS  st, ESMF_ArrayDesArrayCretroy TesateGetUTet, ESMF_Ast.F90,   PASS rrayCreateGline 725
 ArrayCreatetUTest.F90e Alloca, line 73--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
te 2D ESMF_T9
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):YPEKIND_R8 
w/ compu{}tationalArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
Edge and ~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20b3810:
            rank = 2, typekind = 6, base_addr = 0x7f1f04fdb690
            total widdim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
ths Test( 9, 1) =  6.90562e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
, ESMF_A(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
rrayCrea(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
teGetUTes(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
t.F90, l(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
ine 797
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  Array--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready, Print 2D object = Ready
 Proxy        = no
 Root Info (Attributes):
 ESMF_TYP  PASS  ArEKIND_R8{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
rayCreate A w/ computadeCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x28359c0:
            rank = 2, typekind = 6, base_addr = 0x7f5776646ff0
            dim[0] = 12  llocate 2D Etional widthdim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  0
( 1,11) =  0
( 2,11) =  0
( 3,11) =  0
SMF_TYPEKINs Test, ESM( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  skipping to end ...
D_R8 w/ compF_ArrayCrea( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
utationalEdteGetUTest.( 9,27) =  0
(10,27) =  0
(11,27) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
ge widths TF90, line 73  PASS  est, ESMF_Ar2
ArrayPrint rayCreateGe2D ESMF_tUTest.F9  PASS  TYPEKIND_R0, line ArrayDestro8 w/ comput748
y Test, ESMationalEdgeF_ArrayC and tot--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = reateGetUTeal widths TReady
 Proxy        = no
 Root Info (Attributes):
st.F90, lineest, ESMF_Ar 739
rayCreat{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b756d0:
            rank = 2, typekind = 6, base_addr = 0x7f97eb90abf0
eGetUTes            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
t.F90, l( 9,13) =  2.72572e-317
(10,13) =  3.53751e-321
(11,13) =  0
ine 804
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,23) =  0
(14,23) =  0
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  Arr  PASSayPrint   ArrayGe2D ESMF_Tt 2D ESMYPEKIND_RF_TYPEKI8 w/ com  PASS ND_R8 w/ coputationalEd ArrayCreatmputationalge widths Te Allocate 2Edge and totest, ESMF_ArD ESMF_TYPEal widths TrayCreateGeKIND_R8 w/ est, ESMF_AtUTest.F90, computationrrayCreateGeline 755
alEdge widthtUTest.F90,s Test,  line 81ESMF_Arr6
ayCreateGetUT  PASest.F90,S  Check  line 748total wi
dths for  PASS  ArrayGe--- ESMCI::Array::print start ---
 Base name    =  2D ESMF_TYPt 2D ESMF_TYMyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = noEKIND_R8 w/PEKIND_R8 w
 Root Info (Attributes):
 computatio/ computati{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
nalEdge and onalEdge widLocalArrayPrint: Array at address 0x20b99c0:
            rank = 2, typekind = 6, base_addr = 0x7f1f04fdb690
            dim[0] = 7  dim[1] = 12  
total widthsths Test, E  Real, *8, Dim 2, Data values:
( 9, 1) =  6.90562e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
 Test, ESMFSMF_ArrayCre(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
_ArrayCreateateGetUTest.  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
GetUTest.F9F90, line 7(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [9 [9, 15] 13] 15]
0, line 824
68
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS    PASSArrayPrin  PASS   Check totat 2D ESMF_T Check total widths forYPEKIND_R8 wl bounds for 2D ESMF_TY/ computati 2D ESMF_TYPEKIND_R8 wonalEdge widPEKIND_R8 w// computatioths Test, E computationalEdge widtSMF_ArrayCrnalEdge andhs Test, ESeateGetUTes total widtMF_ArrayCreat.F90, linehs Test, ESMteGetUTest. 755
F_ArrayCreaF90, line 7teGetUTe78
st.F90, line 842
  PASS  ArrayDest  PAroy Test,SS  Arra  PASS  Arra ESMF_ArrayyGet 2D ESMyDestroy TeCreateGetUTeF_TYPEKIND_st, ESMF_Arrst.F90, lineR8 w/ computayCreateGetU 787
ationalEdgeTest.F90, l widths ine 855
Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  Check   PASS total wi Create dths for test Arra2D ESMF_y with ETYPEKINDSMF_PIN_D_R8 w/ cE_TO_PETomputati, ESMF_AonalEdgerrayCreat widths eGetUTesTest, Et.F90, lSMF_Arrayine 864
CreateGetUTest.F90, lin  PASe 778
S  ArrayGet Fortran  PA array pSS  Arraointer fyDestroy or ESMF_PTest, ESIN_DE_TOMF_Array_PET TestCreateGe, ESMF_AtUTest.FrrayCrea90, line teGetUTest.F90, line 8787
71
  PA  PASS  ASS  ArrayCreate rrayDestroy TestAllocate 2D ESMF for array with ESMF_PIN_TYPEKIND_R8 w/ computat_DE_TO_PET, ESMionalEdge anF_ArrayCd total reateGetwidths TUTest.F9est, ESM0, line F_ArrayC885
reateGetUTest.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b756d0:
            rank = 2, typekind = 6, base_addr = 0x7f97eb90aea0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  0
( 9,11) =  0
(10,11) =  0
(11,11) =  0
(12,11) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
(16,11) =  0
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F  PASS 90, line ArrayCr 804
eate Allocate 2D ESMF_TYPEKIND_R8 w/ computation  PASS  alEdge ArrayGetand tota 2D ESMFl widths_TYPEKIN Test, ED_R8 w/ SMF_ArracomputatyCreateGionalEdgetUTest.e and totF90, linal widthe 797
s Test, ESMF_Array--- ESMCI::Array::print start ---
 Base name    = MyArray Negative EdgeCreateGe
 Status: Base = Ready,  object = Ready
tUTest.F9 Proxy        = no
 Root Info (Attributes):
0, line 816
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20b3810:
            rank = 2, typekind = 6, base_addr = 0x7f1f04fdbc80
            dim[0] = 11  dim[1] = 18  
  PASS  C  Real, *8, Dim 2, Data values:
( 8,-1) =  2.72572e-317
( 9,-1) =  3.53751e-321
heck tot(10,-1) =  0
(11,-1) =  0
(12,-1) =  0
(13,-1) =  0
al width(14,-1) =  0
(15,-1) =  0
(16,-1) =  0
(17,-1) =  0
  skipping to end ...
s for 2D( 9,16) =  0
(10,16) =  0
(11,16) =  0
(12,16) =  0
(13,16) =  0
 ESMF_TY(14,16) =  0
(15,16) =  0
(16,16) =  0
(17,16) =  0
PEKIND_R(18,16) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
8 w/ com  PAputatioSS  ArrnalEdgeayPrint  and tot2D ESMFal width_TYPEKINs Test, D_R8 w/ESMF_Arr computaayCreatetionalEdGetUTestge and t.F90, liotal widne 824
ths Test, ESMF_ArrayCre  PASSateGetUT  Check est.F90total bo, line 8unds for04
 2D ESMF_TYPEKIND_R8 w/ computationalEdge and tot  PASS al width ArrayGes Test, t 2D ESMESMF_ArrF_TYPEKIayCreateGND_R8 w/etUTest. computaF90, lintionalEde 846
ge and total widths Tes  PASS  At, ESMF_rrayDestArrayCreroy TestateGetUT, ESMF_Aest.F90,rrayCrea line 81teGetUTe6
st.F90, line   P855
ASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total  PASS  widths  Create tTest, ESest ArraMF_Arrayy with ECreateGeSMF_PIN_DtUTest.FE_TO_PET90, line, ESMF_A 824
rrayCreateGetUTest  P.F90, liASS  Chene 864
ck total bounds for 2D   PASS ESMF_TYP ArrayGeEKIND_R8t Fortra w/ compn array utationapointer flEdge anor ESMF_d total PIN_DE_Twidths O_PET TeTest, ESst, ESMFMF_Array_ArrayCreCreateGeateGetUTtUTest.Fest.F90,90, line line 87 838
1
  PASS  ArrayDestro  PASy Test, S  ArrayESMF_ArrDestroy ayCreateTest forGetUTest array w.F90, liith ESMF_ne 855
PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Arra.F90, line 895
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest  PASS  ArrayGet Fortran array pointer for ESMF  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSIyGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_A.F90, line 907
_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907 Test, ESMF_ArrayCreateGetUTest.F90, line 907
rrayCreateGetUTest.F90, line 907
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_Ar
rayCreateGetUTest.F90, line 925
  PA  PASS  Ar  PASS  ArrayGet localDe  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI TeSS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTestToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
st, ESMF_ArrayCreateGetUTest.F90, line 925
CreateGetUTest.F90, line 925
.F90, line 925
  PAS  PASS  ArrayGet l  PASS  ArrayGet localDeToDeMapS  ArrayGet localDeToDeMap ESMF_PINocalDeToDeMap ESMF_PIN_DE_TO ESMF_PIN_DE_TO_SSI Tes_DE_TO_SSI Test, ESMF_ArrayCreate_SSI Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 944
GetUTest.F90, line 944
t.F90, line 944
  PASS  ArraySync() for E  PASS  ArraySync() for ESMF  PASS  ArraySync() for ESMF_PIN_DE_TO_SS  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArSMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PA_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 9I Test, ESMF_ArrayCreateGetUTest.F90, line 966
rayCreateGetUTest.F90, line 966
  SS  LocalArrayGet Fortran array pointer for last ssiLocalDe for E66
  PASS  LocalArra  PASS  LocalArrayGet Fortran array PASS  LocalArrayGet Fortran array pointer for laSMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
yGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, st ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreatTO_SSI Test, ESMF_ArrayCreateGetUTest.F90, lESMF_ArrayCreateGetUTest.F90, line 979
eGetUTest.F90, line 979
ine 979
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Test data in LocalArray   PASS  Test data in LocalArray ffor last ssiLocalDe for ESMF_PIN_DE_Tor last ssiLocalDe for ESMF_PIN_DE_O_SSI Test, ESMF_ArrayCreateGetUTesTO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
t.F90, line 1009
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  ArrayCreate from Copy (REF), ESMF_P  PASS  ArrayCreate from Copy (REF), ES  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI   PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArraIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayGet FortrMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  yCreateGetUTest.F90, line 1023
  PASS  ArrayGan array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035  PASS  ArrayGet Fortran array pointer for ESMF_PPASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arret Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_
  PASS  ArrayGet ssiLocalDeCount ESMF_IN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035ayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
ArrayCreateGetUTest.F90, line 1035
PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053

    PASS  ArrayGet localDeToDeMap EPASS  ArrayGet ssiLocalDeCount ESMF  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arra  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_SMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1yCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
ArrayCreateGetUTest.F90, line 1053
053
  PASS  ArrayGet l  PASS  ArrayGet localDeToDeMap ESMF_P  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arocalDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTesrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072MF_ArrayCreateGetUTest.F90, line 1072
t.F90, line 1072

  PASS  A  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI ar  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI a  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ErraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCrearayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArrayGet FortrrrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094
SMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LteGetUTest.F90, line 1094
  PASS  LocalArrayGet Fan array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTes  PASS  LocalArrayGet Fortran array pointer for last ssiLocalocalArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrat.F90, line 1107
De for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTestN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 11yCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
.F90, line 1107
07
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Te  PASS  Test data in Localst data in LocalArray for last ssiLArray for last ssiLocalDe for ESMocalDe for ESMF_PIN_DE_TO_SSI arrF_PIN_DE_TO_SSI arrayCpy Test, ESMayCpy Test, ESMF_ArrayCreateGetUF_ArrayCreateGetUTest.F90, lineTest.F90, line 1137
 1137
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Arr  PASS  ArrayDestroy   PASS  ArrayDestroy Test for array  PASS  ArrayDestroy Test for arrayCpy with ESMayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreatCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, lF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
1151
eGetUTest.F90, line 1151
ine 1151
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO  PASS  ArrayCreate f  PASS  ArrayCreate from Copy (REF),_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
rom Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetU--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1374280:
            rank = 2, typekind = 6, base_addr = 0x7f16754c9000
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
 Test, ESMF_ArrayCreateGetUTest.F90, line 1166
_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1Test.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1393430:
            rank = 2, typekind = 6, base_addr = 0x7f16754ca000
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
(13,11) =  10
(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(11,12) =  10
(12,12) =  10
(13,12) =  10
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  P166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF)--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x283c520:
            rank = 2, typekind = 6, base_addr = 0x7f5782291000
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
( 8,13) =  20
( 1,14) =  20
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
( 2,23) =  20
, ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTesreateGetUTest.F90, line 1177
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 1177
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
( 6,23) =  20
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x283c850:
            rank = 2, typekind = 6, base_addr = 0x7f5782292000
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
t.F90, line 1177
 ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line   PASS  ArrayGet ssiLocalD(14,23) =  30
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayC1185
  PASS  ArrayGet localDeToDeMeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetU_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1py Test, ESMF_ArrayCreateGetUTest.F90, line 1185
ap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
Test.F90, line 1185
177
  PASS  ArrayG  PASS  ArrayGet et ssiLocalDeCount ESMF_PIN_DE_TO  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI alocalDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Tes_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90,rrayCpy Test, ESMF_ArrayCreateGetUTest.F90, lint, ESMF_ArrayCreateGetUTest.F90, line 1204
 line 1185
e 1204
  PASS  Test  PASS  Test dat  PASS  ArrayGet localDeToDeMap  data in LocalArray for last ssiLocalDe for ESa in LocalArray for last ssiLocalDe for ESMF_ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreaPIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateateGetUTest.F90, line 1204
teGetUTest.F90, line 1236
GetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Arr  PASS  ArraySync() for  PASS  ArraySync() for ESMF_PIN_DE_TO_  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy aySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250 ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F9SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
Test, ESMF_ArrayCreateGetUTest.F90, line 1250

  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_0, line 1250
  PASS  ArrayDestroy Test f  PASS  ArrayDestroy Test for arrayCpy wi  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DSSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
or arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_Arrath ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.FE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
yCreateGetUTest.F90, line 1262
90, line 1262
  PASS  ArrayDestroy Test for array   PASS  ArrayDestroy Test for array  PASS  ArrayDestroy Test for array with   PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMwith ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
 with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
F_ArrayCreateGetUTest.F90, line 1274
1274
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
  PASS  ArrayCreate Assm  PASS  ArrayCreate AssmdShape 1D ESMF_T  PASS  ArrayGet Fortran array pointdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreat  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTestYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
er, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
eGetUTest.F90, line 1296
  PASS .F90, line 1296
  PASS  ArrayGet F  PASS  A ArrayGet Fortran array pointer, 1D ESMF_TYPEKINortran array pointer, 1D ESMF_TYPEKIND_R8 Test  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUrrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGD_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
, ESMF_ArrayCreateGetUTest.F90, line 1303
Test.F90, line 1303
etUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1392460:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
  PASS  ArrayGet w  PASS  ArrayGet w/ incompatible Fortrdim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test,/ incompatible Fortran array pointer, 1D ESMF_T  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Testan array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG ESMF_ArrayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy Test, YPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
etUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
ESMF_ArrayCreateGetUTest.F90, line 1324
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20c1420:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x283d0d0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b81940:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKI  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ES( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIN  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArraND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, liMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 131D_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
yCreateGetUTest.F90, line 1317
  PASS  Arrane 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1392460:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
7
  PASS  ArrayDestroy Test, ESMF_ArrayCre  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F9yDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge wateGetUTest.F90, line 1324
0, line 1324
idths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTe  PASS  ArrayCreate AssmdS  PASS  ArrayCreate AssmdShape 1D ESMF_TY  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negativest.F90, line 1347
hape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths PEKIND_R8 w/ negative computationalEdge widths Test, ESMF_Arra computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, lin  PASS  ArrayCreate AssmdSTest, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---yCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = noe 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x1b81940:
hape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366

 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x20c1420:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0

 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x283d0d0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PAS            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShap  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUT(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ S  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative compe 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths est.F90, line 1373
negative computationalEdge widths Test, ESMF_ArrayCreateGetutationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMFUTest.F90, line 1340
  PASS  ArrayDestroy 1340
  PASS  ArrayDestroy Test, ESMF_ArrayC  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCTest, ESMF_ArrayCreateGetUTest.F90, line 1347
reateGetUTest.F90, line 1347
 1347
reateGetUTest.F90, line 1387
  PASS  ArrayCreate AssmdShape 3D ESMF_TY  PASS  ArrayCreate  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1406
 AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayC  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTestKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  Array.F90, line 1366
  PASS  ArrayGet Fortran   PASS  ArrayGet Fortran array pointer, 2D ESMF_TreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Test, ESMF_ArrayCreatGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_Arraarray pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTeYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
eGetUTest.F90, line 1420
yCreateGetUTest.F90, line 1373
st.F90, line 1373
  PAS  PASS  ArrayCreate AssmdShap  PASS  ArrayGet w/ incompatible   PASS  ArrayGet w/ incompatible Fortran array S  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKINDe 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreatpointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGeeGetUTest.F90, line 1380
  PASS  ArrayDestroy T90, line 1380
  PASS  ArrayDestroy Test, ESMF_  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, litUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTesest, ESMF_ArrayCreateGetUTest.F90, line 1387
ArrayCreateGetUTest.F90, line 1387
ne 1387
t.F90, line 1453
  PASS  PASS  ArrayCreate AssmdS  ArrayCreate AssmdShape 3D ESMF_TYP  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Thape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, liest, ESMF_ArrayCreateGetUTest.F90, line 1406
UTest.F90, line 1406
  PASS   PASS  Create test Array for extra edge element tene 1406
  PASS  ArrayGet Fortran array pointe  PASS  ArrayGet Fortran array pointer, 3D ESMF_T ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMst, ESMF_ArrayCreateGetUTest.F90, line 1514
r, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, linYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
F_ArrayCreateGetUTest.F90, line 1413
  PASS  A  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTese 1413
  PASS  ArrayDestroy Test, ESMF_ArrayC  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTesrrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
t.F90, line 1543
reateGetUTest.F90, line 1420
t.F90, line 1420
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
  PASS  ArrayCreat  PASS  ArrayCreate AssmdShape 4D ESM Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1392460:
            rank = 1, typekind = 6, base_addr = 0x7f16698802d0
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  6.9038e-310
( 2) =  9.311e-13
( 3) =  -1.07501e+59
( 4) =  6.60776e-317
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---
 e AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_Arra  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 143 PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
yCreateGetUTest.F90, line 1439
  PAUTest.F90, line 1439
  PASS  ArrayGet 9
  PASS  ArrayGet Fortran array poin  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
SS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, EFortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCrter, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, li  PASS  Create Array on siSMF_ArrayCreateGetUTest.F90, line 1446
  PASS eateGetUTest.F90, line 1446
  PASS  ArrayDestrne 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCrngle DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
 ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
oy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
eateGetUTest.F90, line 1453
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  Create test Arra  PASS  Create test Array for extra   PASS  Create test Array for extra edge element test, E  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
y for extra edge element test, ESMF_ArrayCreateGetUTest.F90, liedge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
SMF_ArrayCreateGetUTest.F90, line 1514
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
ne 1514
  PASS  Ar  PASS  ArrayDestroy Test  PASS  ArrayDestroy Test, ESMF_ArrayCreatrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, li, ESMF_ArrayCreateGetUTest.F90, line 1543
eGetUTest.F90, line 1543
ne 1543
  PASS  Crea  PASS  Create Array on si  PASS  Create Array on single DE DistGridte Array on single DE DistGrid, ESMF_ArrayCreateGngle DE DistGrid, ESMF_ArrayCreateGetUTest.F90, li, ESMF_ArrayCreateGetUTest.F90, line 1562
etUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Readyne 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---

 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  Array{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on   PASS  ArrayPrint Array on single DE DistGriPrint Array on single DE DistGrid, ESMF_ArrayCsingle DE DistGrid, ESMF_ArrayCreateGetUTest.F90d, ESMF_ArrayCreateGetUTest.F90, line 1569
reateGetUTest.F90, line 1569
  PA, line 1569
  PASS  ArrayDestroy T  PASS  ArrayDestroy Test, ESMF_ArrayCrSS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F9est, ESMF_ArrayCreateGetUTest.F90, line 1576
eateGetUTest.F90, line 1576
0, line 1576
  PASS  PASS  Create Array on s  PASS  Create Array on single DE DistGri  Create Array on single DE DistGrid with Fortraingle DE DistGrid with Fortran allocation, ESMF_Ad with Fortran allocation, ESMF_ArrayCreateGetUTn allocation, ESMF_ArrayCreateGetUTest.F90, lrrayCreateGetUTest.F90, line 1592
est.F90, line 1592
  PASS  Arrine 1592
  PASS  ArrayDestro  PASS  ArrayDestroy Test, ESMF_ArrayCreateGeayDestroy Test, ESMF_ArrayCreateGetUTest.F90, liy Test, ESMF_ArrayCreateGetUTest.F90, line 159tUTest.F90, line 1599
ne 1599
9
  PASS    PASS  Create Array o  PASS  Create Array on 4 DE Create Array on 4 DE DistGrid with only DE 0 eln 4 DE DistGrid with only DE 0 elements, with ForDistGrid with only DE 0 elements, with Fortran aements, with Fortran allocation, ESMF_ArrayCreateGtran allocation, ESMF_ArrayCreateGetUTest.F90, linellocation, ESMF_ArrayCreateGetUTest.F90, line 1627
etUTest.F90, line 1627
  PASS   1627
  PASS  ArrayDestroy Test  PASS  ArrayDestroy Test, ESMArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, , ESMF_ArrayCreateGetUTest.F90, line 1634
F_ArrayCreateGetUTest.F90, line 1634
line 1634
  Ending Test, fi  Ending Test, file ESMF_ArrayCrea  Ending Test, file ESMF_ArrayCreateGetUle ESMF_ArrayCreateGetUTest.F90, line 1644
teGetUTest.F90, line 1644
Test.F90, line 1644
  PET 0  Test Elapsed Time   90.1930000000000263  msec.
  PET 1  Test Elapsed T  PET 3  Test Elapsed Time   53.7ime   53.9739999999999682  m899999999999920  msec.
sec.
  PET 2  Test Elapsed Time   54.1739999999999711  msec.
