build time -- 2022-05-27 05:27:41.307530
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS 4
  Beginning Test, file ESMF_UtilUTest.F90, line 124
  NUMBER_OF_PROCESSORS 4
  NUMBER_OF_PROCESSORS 4

  ESMF_VERSION_MAJ_PROCESSORS 4

  ESMF_VERS
  ESMF_VERSION_MAJOR = 8
  ES
  ESMF_VERSION_MAJOR = 8
  ESMF_VOR = 8
  ESMF_VERSION_MINOR = 3
 ION_MAJOR = 8
  ESMF_VMF_VERSION_MINOR = 3
  ERSION_MINOR = 3
  ESM ESMF_VERSION_REVISION  ERSION_MINOR = 3
  ESMF_VERSESMF_VERSION_REVISION      = 0
  ESMFF_VERSION_REVISION      = 0
  ESMF_VERSION_PATCHLEVEL    = 0
  ESMF_VERSION_PATCHLEVEL    = 0
  ESMF_VERSION_STRING=8.3.0 beION_REVISION      = 0
  ESMF_VERSION_PATCHLEVEL    = 0_VERSION_PATCHLEVEL    = 0
  ESMF_VERSION_STRING=8.3.0 beta sn    = 0
  ESMF_VERSION_STRING=8.3.0 beta snapshota snapshot
  PASS  Co
  ESMF_VERSION_STRING=8.3.0 beta snapsapshot
  PASS  Comparint
  PASS  Comparing numerimparing numeric and character major version, ESMF_Uthot
  PASS  Comparing ng numeric and character major version, ESMF_c and character major version, ESMF_UtilUTilUTest.F90, line 153
umeric and character major version, ESMF_UtUtilUTest.F90, line 153
  est.F90, line 153
  PASS  Comp  PASS  Comparing numeric and character minor version, ESilUTest.F90, line 153
PASS  Comparing numeric and character minor versaring numeric and character minor version, ESMFMF_UtilUTest.F90, line 164
  PASS  Comparing numeric and character minorion, ESMF_UtilUTest.F90, line 164
_UtilUTest.F90, line 164
  PASS  Comparing numeric and character revi version, ESMF_UtilUTest.F90, line 164
  PASS  Comparing numeric and chara  PASS  Comparing numeric and character resion, ESMF_UtilUTest.F90, line 179
  PASS  Comparing cter revision, ESMF_UtilUTest.F90, line 179
vision, ESMF_UtilUTest.F90, line 179
  PASS  No arg VersionPrint test, ESMF_Utinumeric and character revision, ESMF_UtilUlUTest.F90, line 191
Test.F90, line 179
  PASS  No arg VersionPrint test, ESMF_UtilUTest.  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90,   ESMF_VERSION_STRING:       8.3.0 b  PASS  No arg VersionPriF90, line 191
   ESMF_VERSION_S line 191
   ESMF_VERSION_Seta snapshot
  PASS  One line VersionPrint testnt test, ESMF_UtilUTest.F90, line 191
TRING:       8.3.0 beta snapshot
  PASS  OneTRING:       8.3.0 beta snapshot
  PASS  O, ESMF_UtilUTest.F90, line 199
   ESM   ESMF_VERSION_STRING:       8.3. line VersionPrint test, ESMF_UtilUTest.F90, linene line VersionPrint test, ESMF_UtilUTest.F90, F_VERSION_STRING:       8.3.0 beta snapshot
   ESMF0 beta snapshot
  PASS  One line Versio 199
   ESMF_VERSION_STRING:    line 199
   ESMF_VERSION_STRING_VERSION_STRING_GIT:   v8.3.0b16
   ESMF_VERSION_MnPrint test, ESMF_UtilUTest.F90, line 199
   8.3.0 beta snapshot
   ESMF_VERSION_STRING_GI:       8.3.0 beta snapshot
   ESMF_VERSION_STAJOR:         8
   ESMF_VERSION_MINOR:         3
      ESMF_VERSION_STRING:       8.T:   v8.3.0b16
   ESMF_VERSION_MAJOR:         8
 RING_GIT:   v8.3.0b16
   ESMF_VERSION_MAJOR:  ESMF_VERSION_REVISION:      0
   ESMF_VERSION_PATC3.0 beta snapshot
   ESMF_VERSION_STRING_GI  ESMF_VERSION_MINOR:         3
   ESMF_VERSION_       8
   ESMF_VERSION_MINOR:         3
   ESHLEVEL:    0
   ESMF_VERSION_PUBLIC:        F
   ET:   v8.3.0b16
   ESMF_VERSION_MAJOR:       REVISION:      0
   ESMF_VERSION_PATCHLEVEL:    MF_VERSION_REVISION:      0
   ESMF_VERSION_PATSMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeli  8
   ESMF_VERSION_MINOR:         3
   ES0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VECHLEVEL:    0
   ESMF_VERSION_PUBLIC:        ng Framework
 
 Copyright (c) 2002-2022 University MF_VERSION_REVISION:      0
   ESMF_VERSIONRSION_BETASNAPSHOT:  T
 
 Earth System Modeling F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth SyCorporation for Atmospheric Research,
 Massachusett_PATCHLEVEL:    0
   ESMF_VERSION_PUBLIC: Framework
 
 Copyright (c) 2002-2022 University stem Modeling Framework
 
 Copyright (c) 2002s Institute of Technology, Geophysical Fluid Dynami       F
   ESMF_VERSION_BETASNAPSHOT:  T
Corporation for Atmospheric Research,
 Massachu-2022 University Corporation for Atmospheric Rcs Laboratory,
 University of Michigan, National Ce 
 Earth System Modeling Framework
 
 Copysetts Institute of Technology, Geophysical Fluidesearch,
 Massachusetts Institute of Technolognters for Environmental Prediction,
 Los Alamos Naright (c) 2002-2022 University Corporation f Dynamics Laboratory,
 University of Michigan, Ny, Geophysical Fluid Dynamics Laboratory,
 Univtional Laboratory, Argonne National Laboratory,
 NAor Atmospheric Research,
 Massachusetts Inational Centers for Environmental Prediction,
 ersity of Michigan, National Centers for EnviroSA Goddard Space Flight Center.
 All rights reservestitute of Technology, Geophysical Fluid DyLos Alamos National Laboratory, Argonne National nmental Prediction,
 Los Alamos National Labord.
 
 Permission is hereby granted, free of charge,namics Laboratory,
 University of Michigan,Laboratory,
 NASA Goddard Space Flight Center.
atory, Argonne National Laboratory,
 NASA Godd to any person obtaining a copy
 of this software  National Centers for Environmental Predict All rights reserved.
 
 Permission is hereby gard Space Flight Center.
 All rights reserved.and associated documentation files (the 'Software'),ion,
 Los Alamos National Laboratory, Argonranted, free of charge, to any person obtaining 
 
 Permission is hereby granted, free of charg to
 deal with the Software without restriction, inne National Laboratory,
 NASA Goddard Space a copy
 of this software and associated documentae, to any person obtaining a copy
 of this softcluding without limitation the
 rights to use, copy,Flight Center.
 All rights reserved.
 
 Pertion files (the 'Software'), to
 deal with the Soware and associated documentation files (the 'S modify, merge, publish, distribute, sublicense, anmission is hereby granted, free of charge, tftware without restriction, including without lioftware'), to
 deal with the Software without rd/or
 sell copies of the Software, and to permit pero any person obtaining a copy
 of this softmitation the
 rights to use, copy, modify, mergeestriction, including without limitation the
 rsons to whom the Software is
 furnished to do so, sware and associated documentation files (the, publish, distribute, sublicense, and/or
 sell cights to use, copy, modify, merge, publish, disubject to the following conditions:
    1. Redistri 'Software'), to
 deal with the Software wiopies of the Software, and to permit persons totribute, sublicense, and/or
 sell copies of thbutions of source code must retain the above copyrithout restriction, including without limita whom the Software is
 furnished to do so, subjee Software, and to permit persons to whom the Sght notice,
       this list of conditions and the tion the
 rights to use, copy, modify, mergct to the following conditions:
    1. Redistriboftware is
 furnished to do so, subject to thefollowing disclaimers.
    2. Redistributions in bie, publish, distribute, sublicense, and/or
utions of source code must retain the above copy following conditions:
    1. Redistributions nary form must reproduce the above copyright
       sell copies of the Software, and to permitright notice,
       this list of conditions anof source code must retain the above copyright  notice, this list of conditions and the following  persons to whom the Software is
 furnished the following disclaimers.
    2. Redistributinotice,
       this list of conditions and thedisclaimers in the
       documentation and/or othed to do so, subject to the following conditions in binary form must reproduce the above copyr following disclaimers.
    2. Redistributions r materials provided with the distribution.
    3.ons:
    1. Redistributions of source code ight
       notice, this list of conditions andin binary form must reproduce the above copyri Neither the names of the organizations developing must retain the above copyright notice,
   the following disclaimers in the
       documenght
       notice, this list of conditions and tthis software, nor
       the names of its contribut     this list of conditions and the followingtation and/or other materials provided with the dishe following disclaimers in the
       documentaors may be used to endorse or promote products
       disclaimers.
    2. Redistributions in binatribution.
    3. Neither the names of the orgation and/or other materials provided with the  derived from this Software without specific priorry form must reproduce the above copyrightnizations developing this software, nor
       distribution.
    3. Neither the names of the  written permission.
 
 THE SOFTWARE IS PROVIDED '
       notice, this list of conditions andthe names of its contributors may be used to endorganizations developing this software, nor
  AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  the following disclaimers in the
       dorse or promote products
       derived from th     the names of its contributors may be usedIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIEocumentation and/or other materials provideis Software without specific prior written perm to endorse or promote products
       derivedS OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURd with the distribution.
    3. Neither theission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WI from this Software without specific prior wriPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CO names of the organizations developing this THOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED,tten permission.
 
 THE SOFTWARE IS PROVIDED 'ANTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY Csoftware, nor
       the names of its contr INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF S IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACibutors may be used to endorse or promote pMERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROMroducts
       derived from this Software wSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A , OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE ithout specific prior written permission.
CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PAS 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDS  Multi-line VersionPrint test, ESMF_UtilUTest.F90,T WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED,IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  line 207
   ESMF_VERSION_STRING:    INCLUDING BUT NOT LIMITED TO THE WARRANTIES ISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TO    8.3.0 beta snapshot

   ESMF_VERSION_STRING:   OF MERCHANTABILITY,
 FITNESS FOR A PARTICULTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFRT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN C    8.3.0 beta snapshot
   ESMF_VERSION_STRING_GITAR PURPOSE AND NONINFRINGEMENT. IN NO EVENTTWARE.
  PASS  Multi-line VersionPrint testONNECTION WITH THE SOFTWARE OR THE USE OR OTHER:   v8.3.0b16
   ESMF_VERSION_MAJOR:         8
   E SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDE, ESMF_UtilUTest.F90, line 207
   DEALINGS
 WITH THE SOFTWARE.
  PASS  MulSMF_VERSION_MINOR:         3
   ESMF_VERSION_REVISRS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHE ESMF_VERSION_STRING:       8.3.0 beta snapshotti-line VersionPrint test, ESMF_UtilUTest.F90,ION:      0
   ESMF_VERSION_PATCHLEVEL:    0
   ESR
 LIABILITY, WHETHER IN AN ACTION OF CONTR

   ESMF_VERSION_STRING:       8.3.0 beta snap line 207
   ESMF_VERSION_MF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPACT, TORT OR OTHERWISE, ARISING
 FROM, OUT shot
   ESMF_VERSION_STRING_GIT:   v8.3.0b1STRING:       8.3.0 beta snapshot

   ESMF_VERSSHOT:  T
 
 Earth System Modeling Framework
 
 CopOF OR IN CONNECTION WITH THE SOFTWARE OR TH6
   ESMF_VERSION_MAJOR:         8
   ESMF_VERSION_ION_STRING:       8.3.0 beta snapshot
   ESMF_VERSIyright (c) 2002-2022 University Corporation for AtmE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.MINOR:         3
   ESMF_VERSION_REVISION:      0
 ON_STRING_GIT:   v8.3.0b16
   ESMF_VERSION_MAJOR:ospheric Research,
 Massachusetts Institute of Tec
  PASS  Multi-line VersionPrint test  ESMF_VERSION_PATCHLEVEL:    0
   ESMF_VERSION_P         8
   ESMF_VERSION_MINOR:         3
   hnology, Geophysical Fluid Dynamics Laboratory,
 , ESMF_UtilUTest.F90, line 207
UBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 ESMF_VERSION_REVISION:      0
   ESMF_VERSION_PATUniversity of Michigan, National Centers for Envir   ESMF_VERSION_STRING:       8.3.0 b
 Earth System Modeling Framework
 
 Copyright (c)CHLEVEL:    0
   ESMF_VERSION_PUBLIC:        F
  onmental Prediction,
 Los Alamos National Laboratoreta snapshot

   ESMF_VERSION_STRING:      2002-2022 University Corporation for Atmospheric R ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Mody, Argonne National Laboratory,
 NASA Goddard Space  8.3.0 beta snapshot
   ESMF_VERSION_STRINGesearch,
 Massachusetts Institute of Technology, Geopeling Framework
 
 Copyright (c) 2002-2022 Univers Flight Center.
 All rights reserved.
 
 Permission _GIT:   v8.3.0b16
   ESMF_VERSION_MAJOR:    hysical Fluid Dynamics Laboratory,
 University of Micity Corporation for Atmospheric Research,
 Massachuis hereby granted, free of charge, to any person ob     8
   ESMF_VERSION_MINOR:         3
   higan, National Centers for Environmental Predictisetts Institute of Technology, Geophysical Fluid Dtaining a copy
 of this software and associated doESMF_VERSION_REVISION:      0
   ESMF_VERSIon,
 Los Alamos National Laboratory, Argonne Nationynamics Laboratory,
 University of Michigan, Naticumentation files (the 'Software'), to
 deal with thON_PATCHLEVEL:    0
   ESMF_VERSION_PUBLIC:al Laboratory,
 NASA Goddard Space Flight Center.
 Aonal Centers for Environmental Prediction,
 Los Ae Software without restriction, including without         F
   ESMF_VERSION_BETASNAPSHOT:  Tll rights reserved.
 
 Permission is hereby grantedlamos National Laboratory, Argonne National Laboralimitation the
 rights to use, copy, modify, merge,
 
 Earth System Modeling Framework
 
 Co, free of charge, to any person obtaining a copy
 otory,
 NASA Goddard Space Flight Center.
 All rig publish, distribute, sublicense, and/or
 sell copiepyright (c) 2002-2022 University Corporatiof this software and associated documentation files hts reserved.
 
 Permission is hereby granted, frs of the Software, and to permit persons to n for Atmospheric Research,
 Massachusetts (the 'Software'), to
 deal with the Software withouee of charge, to any person obtaining a copy
 of twhom the Software is
 furnished to do so, subject to thInstitute of Technology, Geophysical Fluid Dt restriction, including without limitation the
 righis software and associated documentation files (te following conditions:
    1. Redistributions of sourcynamics Laboratory,
 University of Michiganhts to use, copy, modify, merge, publish, distributhe 'Software'), to
 deal with the Software withoute code must retain the above copyright notice,
       t, National Centers for Environmental Predicte, sublicense, and/or
 sell copies of the Software, restriction, including without limitation the
 rihis list of conditions and the following disclaimers.
ion,
 Los Alamos National Laboratory, Argon and to permit persons to whom the Software is
 furghts to use, copy, modify, merge, publish, distrib    2. Redistributions in binary form must reproduce tne National Laboratory,
 NASA Goddard Spacenished to do so, subject to the following conditionute, sublicense, and/or
 sell copies of the Softwhe above copyright
       notice, this list of conditio Flight Center.
 All rights reserved.
 
 Pes:
    1. Redistributions of source code must retainare, and to permit persons to whom the Software is
ns and the following disclaimers in the
       documentrmission is hereby granted, free of charge,  the above copyright notice,
       this list of con furnished to do so, subject to the following condiation and/or other materials provided with the distributto any person obtaining a copy
 of this softditions and the following disclaimers.
    2. Redisttions:
    1. Redistributions of source code must rion.
    3. Neither the names of the organizations deveware and associated documentation files (tributions in binary form must reproduce the above cetain the above copyright notice,
       this lisloping this software, nor
       the names of its conhe 'Software'), to
 deal with the Software opyright
       notice, this list of conditions and t of conditions and the following disclaimers.
   tributors may be used to endorse or promote products
  without restriction, including without limithe following disclaimers in the
       documentati 2. Redistributions in binary form must reproduce      derived from this Software without specific priotation the
 rights to use, copy, modify, meon and/or other materials provided with the distrithe above copyright
       notice, this list of cr written permission.
 
 THE SOFTWARE IS PROVIDED 'AS rge, publish, distribute, sublicense, and/obution.
    3. Neither the names of the organizationonditions and the following disclaimers in the
   IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED,r
 sell copies of the Software, and to perms developing this software, nor
       the names of     documentation and/or other materials provided w INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHAit persons to whom the Software is
 furnisheits contributors may be used to endorse or promote prith the distribution.
    3. Neither the names of tNTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRd to do so, subject to the following conditoducts
       derived from this Software without sphe organizations developing this software, nor
  INGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRions:
    1. Redistributions of source codecific prior written permission.
 
 THE SOFTWARE I     the names of its contributors may be used to IGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERe must retain the above copyright notice,
 S PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, Eendorse or promote products
       derived from th
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR      this list of conditions and the folloXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THis Software without specific prior written permissi OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITHwing disclaimers.
    2. Redistributions inE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARon.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARR THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE binary form must reproduce the above copyrightTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT.
  PASS  Single and multi-line VersionPrint test, 
       notice, this list of conditions andE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR  NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,ESMF_UtilUTest.F90, line 215
 the following disclaimers in the
       ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER I
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRIdocumentation and/or other materiN AN ACTION OF CONTRACT, TORT OR OTHERWISNGEMENT. IN NO EVENT SHALL THE
 CONTRIBals provided with the distributioE, ARISING
 FROM, OUT OF OR IN CONNECTIOUTORS OR COPYRIGHT HOLDERS BE LIABLE FOn.
    3. Neither the names of tN WITH THE SOFTWARE OR THE USE OR OTHERR ANY CLAIM, DAMAGES OR OTHER
 LIABILIThe organizations developing this s DEALINGS
 WITH THE SOFTWARE.
  PASY, WHETHER IN AN ACTION OF CONTRACT, Toftware, nor
       the names of S  Single and multi-line VersionPrint teORT OR OTHERWISE, ARISING
 FROM, OUT Oits contributors may be used to est, ESMF_UtilUTest.F90, line 215
F OR IN CONNECTION WITH THE SOFTWARE ORndorse or promote products
        THE USE OR OTHER DEALINGS
derived from this Softw WITH THE SOFTWARE.
  Pare without specific prASS  Single and multi-line Vior written permission.
 ersionPrint test, ESMF_Util
 THE SOFTWARE IS PROVIUTest.F90, line 215
DED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 215
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.F90, line 240
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_00, ESMF_UtilUTest.F90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 257
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_02, ESMF_UtilUTest.F90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_03, ESMF_UtilUTest.F90, line 266
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 275
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F90, line 290
  PASS  Testing ESMF_UtilGetArgC, command line argument   PASS  ESMF_Utilcount value, ESMF_UtilUTesIOUnitFlush, open scrat.F90, line 297
tch file: IOtempfile_01, ESMF_UtilUTest.F90, line 2  PASS  Test66
ing ESMF_UtilGetArgC, argindex < 0, ESMF_Util  PASS  ESMF_UtilIOUnitFUTest.F90, line 305
lush, flush the scratch  command nfile, ESMF_UtilUTest.F9ame = ./ESMF_UtilUTest
 0, line 275
 PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 314
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90, line 322
 arg_len = 16 , len_trim (arg) = 16
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 332
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 342
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 351
  PASS  Testing ESMF_UtilGetArgIndex for  PASS  Testing ESMF_U program path, ESMF_UtilUTesttilGetArgC, command line arg.F90, line 360
ument count, ESMF_UtilUTe  PASS  Testist.F90, line 290
ng ascending real sort, ESMF_  PASS  Testing EUtilUTest.F90, line 375
SMF_UtilGetArgC, command lin  PASS  Testing sore argument count value, ESted ascending real results, MF_UtilUTest.F90, line 297
ESMF_UtilUTest.F90, line 389
  PASS  Testing descending real sort, ESM  PASS  Testing ESMF_UtilGF_UtilUTest.F90, line 398
etArgC, argindex < 0, ESMF_  PASS  Testing ESMF_UtilGetArgC, command line ar  PASS  Testing sorted desUtilUTest.F90, line 305
gument count, ESMF_UtilUTest.F90, lincending real results, ESMF_UtilUTest.F90, command name = ./ESMF_Ute 290
  PASS  T line 412
  PASS ilUTest
  PASS  Testing ESMF_UtilGeesting ESMF_UtilGetArgC, command line  Testing ascending double precision real tArgC, get command name, ESMF_UtilUTestargument count value, ESMF_UtilUTest.Fsort, ESMF_UtilUTest.F90, line 423
.F90, line 314
90, line 297
  PASS  Testing sorted as  PASS  Testing ESMF_UtilGetArgC, comm  PASS  Testing ESMF_UtilGetArgC,cending double precision real results, ESand line argument count, ESMF_Util get truncated command name, ESMF_UtilU  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UMF_UtilUTest.F90, line 437
  PASS UTest.F90, line 290
  Test.F90, line 322
 arg_len = tilUTest.F90, line 305
 Testing descending double precision real sort, ESMF_PASS  Testing ESMF_UtilGetArgC, command li16 , len_trim (arg) = 16
  PASS  Testing E command name = ./ESMF_UtilUTest
  PASS  TUtilUTest.F90, line 446
  PASS  Testinne argument count value, ESMF_UtilUTest.F9SMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTeesting ESMF_UtilGetArgC, get command name, ESMF_Utg sorted descending double precision real results, ESM0, line 297
st.F90, line 332
ilUTest.F90, line 314
F_UtilUTest.F90, line 460
    PASS  Testi  PASS  Testing ESMF_UtilGetArgC, PASS  Testing ascending integer sort, ESng ESMF_UtilGetArgC, argindex < 0argindex > nargs, ESMF_UtilUTest.F90, l  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilMF_UtilUTest.F90, line 471
  PASS  Test, ESMF_UtilUTest.F90, line 305
ine 342
  PASS  Testing ESMUTest.F90, line 322
 arg_ling sorted ascending integer results, ESMF_UtilUTest. command name = ./ESMF_UtilUTeF_UtilGetArgIndex for program path, ESMF_UtilUTest.en = 16 , len_trim (arg) = 16
  PASS  TesF90, line 486
  PASS  Testing dst
  PASS  Testing ESMF_UtilGetArgC, gF90, line 351
  PASS  Testingting ESMF_UtilGetArgC, compare arg lengths, ESMF_escending integer sort, ESMF_UtilUTest.F90, line 495
et command name, ESMF_UtilUTest.F90, line 3 ESMF_UtilGetArgIndex for program path, ESMF_UtilUUtilUTest.F90, line 332
  PASS  Testing sorted descending integ14
 Test.F90, line 360
  PASer results, ESMF_UtilUTest.F90, line 510
 PASS  Testing ESMF_UtilGetArgC, S  Testing ascending real sort, ESMF_Ut  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.  PASS  Testing ascending doublget truncated command name, ESMF_UtilUTest.ilUTest.F90, line 375
  PASS  TestiF90, line 342
  PASS  e integer sort, ESMF_UtilUTest.F90, line 521
F90, line 322
 arg_lng sorted ascending real results, ESMF_UtilUTest.FTesting ESMF_UtilGetArgIndex for program path, E  PASS  Testing sorted ascending double inteen = 16 , len_trim (arg) = 16
  PAS90, line 389
  PASS  Testing SMF_UtilUTest.F90, line 351
ger results, ESMF_UtilUTest.F90, line 536
S  Testing ESMF_UtilGetArgC, compare arg ldescending real sort, ESMF_UtilUTest.F90, line 398  PASS  Testing ESMF_UtilGetArgIndex for program  PASS  Testing descending double integer engths, ESMF_UtilUTest.F90, line 332

  PASS  Testing sorted descendin path, ESMF_UtilUTest.F90, line 360
sort, ESMF_UtilUTest.F90, line 545
  PAg real results, ESMF_UtilUTest.F90, linSS  Testing sorted descending  PASS  Testing ESMF_UtilGee 412
  PASS  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 37 double integer results, ESMF_UtilUTest.F90, line 560
tArgC, argindex > nargs, ESMF_UtilUTest.F90,  Testing ascending double precision real sort, ESMF5
  PASS  Testing sorted ascending r  PASS  Testing ascending character line 342
  PASS  _UtilUTest.F90, line 423
  PASS  eal results, ESMF_UtilUTest.F90, line 389
 string sort, ESMF_UtilUTest.F90, line 571
Testing ESMF_UtilGetArgIndex for program paTesting sorted ascending double precision real res  PASS  Testing sorted ascending charth, ESMF_UtilUTest.F90, line 351
ults, ESMF_UtilUTest.F90, line 437
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 398
acter string results, ESMF_UtilUTest.F90, line 583
  PASS  Testing ESMF_  PASS  Testing descending double   PASS  Testing descendingUtilGetArgIndex for program path,precision real sort, ESMF_UtilUTest.F90  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 4 character string sort, ESMF_UtilUTest.F90, line 592
 ESMF_UtilUTest.F90, line 360
, line 446
  PASS  Testing sorted 12
  PASS  Testing ascendi  PASS  Testing sorted descending cha  PASS  Testing ascending real descending double precision real results, ESMF_Uting double precision real sort, ESMF_UtilUTest.F9racter string results, ESMF_UtilUTest.F90, line 604
sort, ESMF_UtilUTest.F90, line 375
lUTest.F90, line 460
  PAS0, line 423
  PASS  Testing sort  PASS  Testing sorted ascS  Testing ascending integer sort, ESMF_ed ascending double precision real resuending real results, ESMF_UtilUTeUtilUTest.F90, line 471
lts, ESMF_UtilUTest.F90, line 437
st.F90, line 389
  PASS  Testing sorted ascending integ  PASS  Testing deser results, ESMF_UtilUTest.F  PASS  Testing descending double precision real cending real sort, ESMF_UtilUTest90, line 486
  PASsort, ESMF_UtilUTest.F90, line 446
.F90, line 398
S  Testing descending integer sort, ES  PASS  Testing sorMF_UtilUTest.F90, line 495
  PASS  Testing sorted descending double precision ted descending real results, ESMF_  PASS  Testing sorted desreal results, ESMF_UtilUTest.F90, line UtilUTest.F90, line 412
cending integer results, ESMF_UtilUTest460
  PASS  Tes  PASS  Testing asc.F90, line 510
  Pting ascending integer sort, ESMF_UtilUTending double precision real sort, ASS  Testing ascending double integer soest.F90, line 471
  PESMF_UtilUTest.F90, line 423
rt, ESMF_UtilUTest.F90, line 521
ASS  Testing sorted ascending integer   PASS  Testing sorte  PASS  Testing sorted ascendresults, ESMF_UtilUTest.F90, line 486
d ascending double precision reaing double integer results, ESMF_UtilUTl results, ESMF_UtilUTeest.F90, line 536
  PASS  Testing descending integer sort, ESMF_Ust.F90, line 437
  PASS  Testing descending tilUTest.F90, line 495
  PASS  Testing descending dodouble integer sort, ESMF_UtilUTest.F90  PASS  Testing sorted descending intuble precision real sort, ESMF_Ut, line 545
  PASS  Testineger results, ESMF_UtilUTest.F90, lineilUTest.F90, line 446
g sorted descending double integer res 510
  PASS  Test  PASS  Testing sorted descenults, ESMF_UtilUTest.F90, line 560
ing ascending double integer sort, ESMding double precision real result  PASS  Testing ascendiF_UtilUTest.F90, line 521
s, ESMF_UtilUTest.F90, line 460
ng character string sort, ESMF_UtilUTes  PASS  Testing sorted ascending   PASS  Tet.F90, line 571
  PASSdouble integer results, ESMF_UtilUTessting ascending integer sort, ESM  Testing sorted ascending character stt.F90, line 536
 F_UtilUTest.F90, line 471
ring results, ESMF_UtilUTest.F90, line  PASS  Testing descending double inte  PASS  Testing sorted a583
  PASS  Testing deger sort, ESMF_UtilUTest.F90, line 545scending integer results, ESMF_Utscending character string sort, ESMF_Uti
  PASS  Testing sort  PASS  Testing creating a ilUTest.F90, line 486
 lUTest.F90, line 592
  PASS  Tested descending double integer results, ESMF_UtilUTedirectory, ESMF_UtilUTest.F90, line 618
 PASS  Testing descending integer sort, ESMing sorted descending character string results, ESMst.F90, line 560
  PASS  TestiF_UtilUTest.F90, line 495
F_UtilUTest.F90, line 604
ng ascending character string sort, E  PASS  Testing sorteSMF_UtilUTest.F90, line 571d descending integer re
  PASS  Tesults, ESMF_UtilUTest.F9sting sorted ascending char0, line 510
acter string results, ESMF  PASS  Testing_UtilUTest.F90, line 583
 ascending double integer sort, ESM  PASS  Testing descendinF_UtilUTest.F90, line g character string sort, ES521
  PAMF_UtilUTest.F90, line 592
  PASS  Testing creating a dSS  Testing sorted ascending doubirectory which already exists,le integer results, ESMF  PASS  Testing sorted descending character strin ESMF_UtilUTest.F90, line 626
_UtilUTest.F90, line 536
g results, ESMF_UtilUTest.F90, line   PASS  T604
esting descending double integer sort, ESMF_UtilUTest.F90, line 545
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, line 560
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, l  PASS  Testing creating a diine 571
rectory, ESMF_UtilUTest.F  PASS  Testing sor90, line 618
ted ascending character string results, ESMF_Ut  PASS  TestinilUTest.F90, line 583
g creating a directory which already exist  PASS  Testing descs w/relaxedFlag, ESMF_UtilUTending character stringest.F90, line 634
 sort, ESMF_UtilUTest.F90, line 592
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, line 604
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, line 626
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 642
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 618
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, line 6  PASS26
  PASS  T  Testing creating a directory which alresting removing a directory eady exists w/relaxedFlag, which does not exist, ESMF_UtESMF_UtilUTest.F90, line 63ilUTest.F90, line 650
4
  PASS  Testing creating a directory which alread  PASS  Testiy exists, ESMF_UtilUTe  PASS  Testing creating a directory wng removing a directory which does not st.F90, line 626
hich already exists w/relaxedFlag, ESMFexist, relaxed, ESMF_UtilUTest.F90, line _UtilUTest.F90, line 634
658
  PASS  Testing getting  PASS  Testing the current directory, ESM removing a directory, ESMFF_UtilUTest.F90, line 672
_UtilUTest.F90, line 642
 current directory name =>/scratch/cluster/sacks/esmf-testing/nag_6.2_mvapich2_O_develop/test/  PASS  Testing creating testO/Linux.nag.64.mvapich2a directory which alre.default<
  PASS  Tady exists w/relaxedFlaesting directory name for valg, ESMF_UtilUTest.F90, id characters, ESMF_UtilUTesline 634
t.F90, line 691
  PASS  Testing getting the current directory with smal  PASS  Testing reml string, ESMF_UtilUTest.F90oving a directory, ESMF_Ut, line 699
ilUTest.F90, line 642
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line   PASS  Testing removing a direct711
  PASSory which does not exist, ESM  Testing converting string tF_UtilUTest.F90, line 650
o lower case, ESMF_UtilUTest.F90, line 721
  PASS  Testing remo  PASS  ESMF_Utving a directory, ESMF_ilString2Int() - no blanks - UtilUTest.F90, line 642
Test, ESMF_UtilUTest.F90, line 733
  PAS  PASS  Testing remS  ESMF_UtilString2Int() -   PASS  Testinoving a directory which does not exist,  PASS  Testing removing a directory which dono blanks - Test, ESMF_UtilUTest.F90, line 740
g removing a directory which does not exis relaxed, ESMF_UtilUTest.F90, line 658
es not exist, ESMF_UtilUTest.F90, line 650
  PASS  ESMF_UtilStringInt2Strt, ESMF_UtilUTest.F90, line 650
  PASS  Testing getting the cuing() - Test, ESMF_UtilUTest.F90, line   PASS  Testing removingrrent directory, ESMF_UtilUTest.F90, l  PASS  Testing removing a directory which does not exist, relaxed, ESMF749
  PASS  String -> Integer -> S a directory which does not exist, relaxed, ine 672
 current directory name =>/sc_UtilUTest.F90, line 658
tring conversion correctness - Test, ESMF_UtilUTesESMF_UtilUTest.F90, line 658
ratch/cluster/sacks/esmf-testing/nag_6.2_mvapich2_  PASS  Testing getting the current directort.F90, line 756
  PASS  ESMF_Util  PASS  Testing getting the cO_develop/test/testO/Linux.nag.64.mvapich2.defauly, ESMF_UtilUTest.F90, line 672
 String2Int() - negative value - Test, ESMF_UtilUTurrent directory, ESMF_UtilUTest.F90, linet<
  PASS  Testing directory name for valcurrent directory name =>/scratch/cluster/sacks/est.F90, line 764
  PASS  ESMF_Util 672
 current directory name =id characters, ESMF_UtilUTest.F90, line 691
esmf-testing/nag_6.2_mvapich2_O_develop/test/testString2Int() - negative value - Test, ESMF_UtilUT>/scratch/cluster/sacks/esmf-testing/nag_6O/Linux.nag.64.mvapich2.default<
est.F90, line 771
  PA.2_mvapich2_O_develop/test/testO/  PASS  Testing getting the current directory with s  PASS  Testing directory name for valid charSS  ESMF_UtilString2Int() - explicit positive valuLinux.nag.64.mvapich2.default<
  PAmall string, ESMF_UtilUTest.F90, line 699
acters, ESMF_UtilUTest.F90, line 691
e - Test, ESMF_UtilUTest.F90, line 779
SS  Testing directory name for valid charac  PASS  Testing converting string to U  PASS  ESMF_UtilString2Int() - expters, ESMF_UtilUTest.F90, line 691PPER case, ESMF_UtilUTest.F90, line 711
  PASS  Testing getting the current directory with small licit positive value - Test, ESMF_UtilUTest.F90, l
   PASS  Testing converting strinstring, ESMF_UtilUTest.F90, line 699
ine 786
  PASS  ESMF_UtilString2I PASS  Testing getting the current directog to lower case, ESMF_UtilUTest.F90, line 721
  PASS  Testing converting string to UPnt() - leading blanks - Test, ESMF_UtilUTest.F90,ry with small string, ESMF_UtilUTest.F90, PER case, ESMF_UtilUTest.F90, line 711
 line 794
  PASS  ESMF_Uline 699
  P  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtiltilString2Int() - leading blanks - TesASS  Testing converting string tUTest.F90, line 733
    PASS  Testing converting string to lower case, ESMF_UtilUTest.F90t, ESMF_UtilUTest.F90, line 801
o UPPER case, ESMF_UtilUTest.F90, line 711
PASS  ESMF_UtilString2Int() - no blanks - Test, ES, line 721
  PASS    PASS  ESMF_UtilString2Int() - trailing blanks   PASS  Testing convertingMF_UtilUTest.F90, line 740
  ESMF_UtilString2Int() - no blanks - Test, ESMF_Ut- Test, ESMF_UtilUTest.F90, line 809
 string to lower case, ESMF_UtilUTest.F90,PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 733
  PASS  ESM  PASS  ESMF_UtilString2Int() - trailing blanks - line 721
  PASilUTest.F90, line 749
  PASS  StriF_UtilString2Int() - no blanks - Test, ESMF_Util Test, ESMF_UtilUTest.F90, line 816
S  ESMF_UtilString2Int() - no blanks - Testng -> Integer -> String conversion correctness - TeUTest.F90, line 740
  PASS   PASS  ESMF_UtilString2I, ESMF_UtilUTest.F90, line 733
st, ESMF_UtilUTest.F90, line 756
 ESMF_UtilStringInt2String() - Test, ESMF_UtilUnt() - special string missing - Test, ESMF_UtilUT  PASS  ESMF_UtilString2Int() - no blan  PASS  ESMF_UtilString2Int() - negative value - Test.F90, line 749
  PASS  Stringest.F90, line 826
  PASS  ESMF_Utks - Test, ESMF_UtilUTest.F90, line 740
Test, ESMF_UtilUTest.F90, line 764
 -> Integer -> String conversion correctness - ilString2Int() - special string - Test, ESMF_Util  PASS  ESMF_UtilStrin  PASS  ESMF_UtilString2Int() - negative value -Test, ESMF_UtilUTest.F90, line 756
UTest.F90, line 836
  PASS  ESMF_UgInt2String() - Test, ESMF_UtilUTest.F90,  Test, ESMF_UtilUTest.F90, line 771
  PASS  ESMF_UtilString2Int() - negative valutilString2Int() - special string - Test, ESMF_Utiline 749
  PASS  String ->   PASS  ESMF_UtilString2Int() - explicit positie - Test, ESMF_UtilUTest.F90, line 764
lUTest.F90, line 843
Integer -> String conversion correctness - ve value - Test, ESMF_UtilUTest.F90, line 779
  PASS  ESMF_UtilString2Int() - negative va  PASS  ESMF_UtilString2Real() - noTest, ESMF_UtilUTest.F90, line 756
  PASS  ESMF_UtilString2Int() - explicilue - Test, ESMF_UtilUTest.F90, line 771
 blanks - Test, ESMF_UtilUTest.F90, line 856
  PASS  ESMF_UtilString2Int() - t positive value - Test, ESMF_UtilUTest.F90, line  PASS  ESMF_UtilString2Int() - explici  PASS  ESMF_UtilString2Real() - no blanegative value - Test, ESMF_UtilUTest.F90, 786
  PASS  ESMF_UtilString2Int() t positive value - Test, ESMF_UtilUTest.F90, linenks - Test, ESMF_UtilUTest.F90, line 863
 line 764
  PASS  ESMF_UtilSt- leading blanks - Test, ESMF_UtilUTest.F90, line  779
  PASS  ESMF_UtilString2Int()  PASS  ESMF_UtilString2Real() - negative ring2Int() - negative value - Test, ESMF_Ut794
  PASS  ESMF_UtilString2Int() - - explicit positive value - Test, ESMF_UtilUTesvalue - Test, ESMF_UtilUTest.F90, line 871
ilUTest.F90, line 771
  PAS leading blanks - Test, ESMF_UtilUTest.F90, line 8t.F90, line 786
  PASS  ESMF_Util  PASS  ESMF_UtilString2Real() - negative S  ESMF_UtilString2Int() - explicit positi01
  PASS  ESMF_UtilString2Int()String2Int() - leading blanks - Test, ESMF_UtilUvalue - Test, ESMF_UtilUTest.F90, line 878
ve value - Test, ESMF_UtilUTest.F90, line  - trailing blanks - Test, ESMF_UtilUTest.F90, liTest.F90, line 794
  PASS  ESMF_Ut  PASS  ESMF_UtilString2Real() - expli779
  PASS  ESMF_UtilStringne 809
  PASS  ESMF_UtilString2IntilString2Int() - leading blanks - Test, ESMF_Ucit positive value - Test, ESMF_UtilUTest.F90, li2Int() - explicit positive value - Test, E() - trailing blanks - Test, ESMF_UtilUTest.F90, ltilUTest.F90, line 801
  PASS  ne 886
  PASS  ESMF_UtilString2ReSMF_UtilUTest.F90, line 786
ine 816
  PESMF_UtilString2Int() - trailing blanks - Test, al() - explicit positive value - Test, ESMF_UtilUT  PASS  ESMF_UtilString2Int() - leading blASS  ESMF_UtilString2Int() - special string missinESMF_UtilUTest.F90, line 809
  PASSest.F90, line 893
  PASS  ESMF_Utanks - Test, ESMF_UtilUTest.F90, line 794
g - Test, ESMF_UtilUTest.F90, line 826
  ESMF_UtilString2Int() - trailing blanks - TestilString2Real() - leading blanks - Test, ESMF_Uti  PASS  ESMF_UtilString2Int(  PASS  ESMF_UtilString2Int() - special str, ESMF_UtilUTest.F90, line 816
lUTest.F90, line 901
  PASS  ESMF) - leading blanks - Test, ESMF_UtilUTest.ing - Test, ESMF_UtilUTest.F90, line 836
_UtilString2Real() - leading blanks -F90, line 801
  P  PASS  ESMF_UtilString2Int() -   PASS  ESMF_UtilString2Int() - special string missing - Test, E Test, ESMF_UtilUTest.F90, line 908
ASS  ESMF_UtilString2Int() - trailing blanspecial string - Test, ESMF_UtilUTest.F90, line 8SMF_UtilUTest.F90, line 826
  PA  PASS  ESMF_UtilString2Real() - trailing blankks - Test, ESMF_UtilUTest.F90, line 809
43
  PASS SS  ESMF_UtilString2Int() - special string - Tess - Test, ESMF_UtilUTest.F90, line 916
  PASS  ESMF_UtilString2Int() ESMF_UtilString2Real() - no blanks - Test, ESMF_t, ESMF_UtilUTest.F90, line 836
  P  PASS  ESMF_UtilString2Real() - leading blank - trailing blanks - Test, ESMF_UtilUTest.F9UtilUTest.F90, line 856
  PASS  ESMFASS  ESMF_UtilString2Int() - special string - Ts - Test, ESMF_UtilUTest.F90, line 923
0, line 816
_UtilString2Real() - no blanks - Test, ESMF_UtilUTeest, ESMF_UtilUTest.F90, line 843
  PASS  ESMF_UtilString2Double() - no blan  PASS  ESMF_UtilString2Int() - specst.F90, line 863
  PASS  ESMF_Utiks - Test, ESMF_UtilUTest.F90, line 936ial string missing - Test, ESMF_UlString2Real() - negative value - Test  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.
  PASS  ESMF_UtilString2Double() tilUTest.F90, line 826
  PA, ESMF_UtilUTest.F90, line 871
  PF90, line 856
  PASS  ESMF_UtilSt- no blanks - Test, ESMF_UtilUTest.F90, line 943
SS  ESMF_UtilString2Int() - special string ASS  ESMF_UtilString2Real() - negative value - Tesring2Real() - no blanks - Test, ESMF_UtilUTest.F  PASS  ESMF_UtilString2Double()- Test, ESMF_UtilUTest.F90, line 836
t, ESMF_UtilUTest.F90, line 878
90, line 863
  PASS  ESMF_UtilStr - negative value - Test, ESMF_UtilUTest.F90, lin  PASS  ESMF_UtilString2Int() - spe  PASS  ESMF_UtilString2Real() - explicit positiveing2Real() - negative value - Test, ESMF_UtilUTese 951
  PASS  ESMF_UtilString2Doucial string - Test, ESMF_UtilUTest.F90, lin value - Test, ESMF_UtilUTest.F90, line 886
t.F90, line 871
  PASS  ESMF_Utilble() - negative value - Test, ESMF_UtilUTest.F90e 843
   PASS  ESMF_UtilString2Real() - explicitString2Real() - negative value - Test, ESMF_Uti, line 958
  PASS  ESMF_UtilString PASS  ESMF_UtilString2Real() - no blanks - positive value - Test, ESMF_UtilUTest.F90, line 8lUTest.F90, line 878
  PASS  ES2Double() - explicit positive value - Test, ESMF_U Test, ESMF_UtilUTest.F90, line 856
93
  PASS  ESMF_UtilString2Real() MF_UtilString2Real() - explicit positive value - tilUTest.F90, line 966
  PASS  ESM  PASS  ESMF_UtilString2Real() - no - leading blanks - Test, ESMF_UtilUTest.F90, line Test, ESMF_UtilUTest.F90, line 886
F_UtilString2Double() - explicit positive value -blanks - Test, ESMF_UtilUTest.F90, line 86901
  PASS  ESMF_UtilString2Real()   PASS  ESMF_UtilString2Real() - explicit posit Test, ESMF_UtilUTest.F90, line 973
3
  PASS  ESMF_UtilString2- leading blanks - Test, ESMF_UtilUTest.F90, line ive value - Test, ESMF_UtilUTest.F90, line 893
  PASS  ESMF_UtilString2Double() - leading blanReal() - negative value - Test, ESMF_UtilUT908
  PASS  ESMF_UtilString2Real() ks - Test, ESMF_UtilUTest.F90, line 98est.F90, line 871
 - trailing blanks - Test, ESMF_UtilUTe  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F1
  PASS  ESMF_UtilString2Double() - PASS  ESMF_UtilString2Real() - negative vast.F90, line 916
  PASS  ESMF_UtilSt90, line 901
  PASS  ESMF_UtilStrin leading blanks - Test, ESMF_UtilUTest.F90, line 9lue - Test, ESMF_UtilUTest.F90, line 878
ring2Real() - leading blanks - Test, ESMF_UtilUTesg2Real() - leading blanks - Test, ESMF_UtilUTest.88
  PASS  ESMF_UtilString2Double  PASS  ESMF_UtilString2Reat.F90, line 923
  PASS  ESMF_UF90, line 908
  PASS  ESMF_UtilSt() - trailing blanks - Test, ESMF_UtilUTest.F90, lil() - explicit positive value - Test, ESMF_tilString2Double() - no blanks - Test, ESMF_UtilUTring2Real() - trailing blanks - Test, ESMF_UtilUne 996
  PASS  ESMF_UtilString2DoubUtilUTest.F90, line 886
  Pest.F90, line 936
  PASS  ESMF_UtiTest.F90, line 916
  PASS  ESMF_Ule() - leading blanks - Test, ESMF_UtilUTest.F90ASS  ESMF_UtilString2Real() - explicit posilString2Double() - no blanks - Test, ESMF_UtilUTestilString2Real() - leading blanks - Test, ESMF_U, line 1003
  PASS  Testing contive value - Test, ESMF_UtilUTest.F90, lint.F90, line 943
  PASS  ESMF_UtitilUTest.F90, line 923
  PASS  Ecatenating strings, ESMF_UtilUTest.F90, line 1016e 893
  PASS  ESMF_UtilStrinlString2Double() - negative value - Test, ESMF_UtiSMF_UtilString2Double() - no blanks - Test, ESMF
  PASS  Testing converting2Real() - leading blanks - Test, ESMF_UtillUTest.F90, line 951
  PASS  ESMF_UtilUTest.F90, line 936
  PASS  Eg C string to Fortran string, ESMF_UtilUTest.F90, lUTest.F90, line 901
  PASS  E_UtilString2Double() - negative value - Test, ESMF_SMF_UtilString2Double() - no blanks - Test, ESMF_ine 1031
  PASS  Testing convSMF_UtilString2Real() - leading blanks - TUtilUTest.F90, line 958
  PASS  ESUtilUTest.F90, line 943
  PASSerting Fortran string to C string, ESMF_UtilUTest.est, ESMF_UtilUTest.F90, line 908
MF_UtilString2Double() - explicit positive value -  ESMF_UtilString2Double() - negative value - TeF90, line 1047
  Ending Test, file  PASS  ESMF_UtilString2Real() - tra Test, ESMF_UtilUTest.F90, line 966
st, ESMF_UtilUTest.F90, line 951
 ESMF_UtilUTest.F90, line 1053
iling blanks - Test, ESMF_UtilUTest.F90, l  PASS  ESMF_UtilString2Double() - explicit po  PASS  ESMF_UtilString2Double() - negative valine 916
  PASS  ESsitive value - Test, ESMF_UtilUTest.F90ue - Test, ESMF_UtilUTest.F90, line 9MF_UtilString2Real() - leading bl, line 973
  PASS  ESMF_58
  PASS  ESMF_UtilStanks - Test, ESMF_UtilUTest.F90, UtilString2Double() - leading blanks - ring2Double() - explicit positive valline 923
  PASTest, ESMF_UtilUTest.F90, line 981
ue - Test, ESMF_UtilUTest.F90, line 96S  ESMF_UtilString2Double() - no   PASS  ESMF_UtilString2Doub6
  PASS  ESMF_UtilStrblanks - Test, ESMF_UtilUTest.F90le() - leading blanks - Test, ESMF_Utiing2Double() - explicit positive value, line 936
  PASS lUTest.F90, line 988
   - Test, ESMF_UtilUTest.F90, line 973
 ESMF_UtilString2Double() - no blPASS  ESMF_UtilString2Double() - trailianks - Test, ESMF_UtilUng blanks - Test, ESMF_Util  PASS  ESMF_UtilString2Double() - leading blankTest.F90, line 943
UTest.F90, line 996
  PAs - Test, ESMF_UtilUTest.F90, line 9  PASS  ESMF_UtilString2DouSS  ESMF_UtilString2Double() - leading81
  PASS  ESMF_UtilStrble() - negative value - Test, ES blanks - Test, ESMF_UtilUTest.F90, liing2Double() - leading blanks - Test,MF_UtilUTest.F90, line 951
ne 1003
  PASS  Test ESMF_UtilUTest.F90, line 988
  PASS  ESMF_UtilStriing concatenating strings, ESMF_UtilUT  PASS  ESMF_UtilString2Doublng2Double() - negative value - Teest.F90, line 1016
e() - trailing blanks - Test, ESMF_Ust, ESMF_UtilUTest.F90, line 958  PASS  Testing converting C stritilUTest.F90, line 996

  PASS  ESMF_Uting to Fortran string, ESMF_UtilUTest.F  PASS  ESMF_UtilString2Double() - llString2Double() - explicit posi90, line 1031
  PAeading blanks - Test, ESMF_UtilUTest.tive value - Test, ESMF_UtilUTesSS  Testing converting Fortran string F90, line 1003
  PASt.F90, line 966
  to C string, ESMF_UtilUTest.F90, line S  Testing concatenating strings, ESMFPASS  ESMF_UtilString2Double() -1047
  Ending Test, file_UtilUTest.F90, line 1016
 explicit positive value - Test, ESMF_UtilUTest.F90, line 1053
 ESMF_UtilUTest.F90, li  PASS  Testing converting C string tone 973
 Fortran string, ESMF_Util  PASS  ESMF_UtilStrinUTest.F90, line 1031
g2Double() - leading blanks - Test,   PASS  Testing converting ESMF_UtilUTest.F90, lineFortran string to C string, 981
  P ESMF_UtilUTest.F90, line ASS  ESMF_UtilString2Do1047
  Endinuble() - leading blanksg Test, file ESMF_UtilUTes - Test, ESMF_UtilUTest.F90, line 1053
t.F90, line 988
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, line 996
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, line 1003
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1016
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 1031
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 1047
  Ending Test, file ESMF_UtilUTest.F90, line 1053
  PET   PET 2  Test Elapsed Tim0  Test Elapsed Time   25.14199999e   24.6949999999999932  msec.99999959  msec.

  PET 3  Test Elaps  Ped Time   25.0289999999999ET 1  Test Elapsed Time964  msec.
   26.8249999999999886  msec.
