build time -- 2022-03-08 11:46:07.051888
0:   Beginning Test, file ESMF_NUOPC_UTest.F90, line 226
2:   Beginning Test, file ESMF_NUOPC_UTest.F90, line 226
3:   Beginning Test, file ESMF_NUOPC_UTest.F90, line 226
1:   Beginning Test, file ESMF_NUOPC_UTest.F90, line 226
3:   NUMBER_OF_PROCESSORS           4
0:   NUMBER_OF_PROCESSORS           4
1:   NUMBER_OF_PROCESSORS           4
2:   NUMBER_OF_PROCESSORS           4
3:   PASS  NUOPC_NoOp() Test, ESMF_NUOPC_UTest.F90, line 281
0:   PASS  NUOPC_NoOp() Test, ESMF_NUOPC_UTest.F90, line 281
1:   PASS  NUOPC_NoOp() Test, ESMF_NUOPC_UTest.F90, line 281
2:   PASS  NUOPC_NoOp() Test, ESMF_NUOPC_UTest.F90, line 281
0:   PASS  NUOPC_CompSpecialize() for GridComp before Derive() Test, ESMF_NUOPC_UTe
0:  st.F90, line 48
1:   PASS  NUOPC_CompSpecialize() for GridComp before Derive() Test, ESMF_NUOPC_UTe
1:  st.F90, line 48
2:   PASS  NUOPC_CompSpecialize() for GridComp before Derive() Test, ESMF_NUOPC_UTe
2:  st.F90, line 48
3:   PASS  NUOPC_CompSpecialize() for GridComp before Derive() Test, ESMF_NUOPC_UTe
3:  st.F90, line 48
3:   PASS  NUOPC_CompDerive() for GridComp Test, ESMF_NUOPC_UTest.F90, line 55
1:   PASS  NUOPC_CompDerive() for GridComp Test, ESMF_NUOPC_UTest.F90, line 55
0:   PASS  NUOPC_CompDerive() for GridComp Test, ESMF_NUOPC_UTest.F90, line 55
2:   PASS  NUOPC_CompDerive() for GridComp Test, ESMF_NUOPC_UTest.F90, line 55
3:   PASS  NUOPC_CompSpecialize() for GridComp Test, ESMF_NUOPC_UTest.F90, line 66
0:   PASS  NUOPC_CompSpecialize() for GridComp Test, ESMF_NUOPC_UTest.F90, line 66
1:   PASS  NUOPC_CompSpecialize() for GridComp Test, ESMF_NUOPC_UTest.F90, line 66
2:   PASS  NUOPC_CompSpecialize() for GridComp Test, ESMF_NUOPC_UTest.F90, line 66
3:   PASS  NUOPC_CompSetEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F90, line 
3:  77
0:   PASS  NUOPC_CompSetEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F90, line 
0:  77
1:   PASS  NUOPC_CompSetEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F90, line 
1:  77
2:   PASS  NUOPC_CompSetEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F90, line 
2:  77
3:   PASS  NUOPC_CompSetInternalEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F9
3:  0, line 88
1:   PASS  NUOPC_CompSetInternalEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F9
1:  0, line 88
2:   PASS  NUOPC_CompSetInternalEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F9
2:  0, line 88
0:   PASS  NUOPC_CompSetInternalEntryPoint() for GridComp Test, ESMF_NUOPC_UTest.F9
0:  0, line 88
0:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 105
1:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 105
2:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 105
3:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 105
2:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 116
3:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 116
0:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 116
1:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 116
0:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 127
1:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 127
2:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 127
3:   PASS  NUOPC_DriverAddComp() Test, ESMF_NUOPC_UTest.F90, line 127
0:   PASS  NUOPC_CompGet() Test, ESMF_NUOPC_UTest.F90, line 301
1:   PASS  NUOPC_CompGet() Test, ESMF_NUOPC_UTest.F90, line 301
2:   PASS  NUOPC_CompGet() Test, ESMF_NUOPC_UTest.F90, line 301
3:   PASS  NUOPC_CompGet() Test, ESMF_NUOPC_UTest.F90, line 301
0:   PASS  NUOPC_CompAttributeGet() for GridComp Test, ESMF_NUOPC_UTest.F90, line 3
0:  10
1:   PASS  NUOPC_CompAttributeGet() for GridComp Test, ESMF_NUOPC_UTest.F90, line 3
1:  10
3:   PASS  NUOPC_CompAttributeGet() for GridComp Test, ESMF_NUOPC_UTest.F90, line 3
3:  10
2:   PASS  NUOPC_CompAttributeGet() for GridComp Test, ESMF_NUOPC_UTest.F90, line 3
2:  10
3:   PASS  ESMF_UtilString2Int() for Verbosity Test, ESMF_NUOPC_UTest.F90, line 320
0:   PASS  ESMF_UtilString2Int() for Verbosity Test, ESMF_NUOPC_UTest.F90, line 320
1:   PASS  ESMF_UtilString2Int() for Verbosity Test, ESMF_NUOPC_UTest.F90, line 320
2:   PASS  ESMF_UtilString2Int() for Verbosity Test, ESMF_NUOPC_UTest.F90, line 320
3:   PASS  NUOPC_DriverGetComp() Test, ESMF_NUOPC_UTest.F90, line 328
0:   PASS  NUOPC_DriverGetComp() Test, ESMF_NUOPC_UTest.F90, line 328
1:   PASS  NUOPC_DriverGetComp() Test, ESMF_NUOPC_UTest.F90, line 328
2:   PASS  NUOPC_DriverGetComp() Test, ESMF_NUOPC_UTest.F90, line 328
0:  NUOPC_DriverPrint for PET:           0
0:    Model, Mediator, and Driver components, in the order
0:    that they were added to the Driver:
1:  NUOPC_DriverPrint for PET:           1
1:    Model, Mediator, and Driver components, in the order
1:    that they were added to the Driver:
3:  NUOPC_DriverPrint for PET:           3
3:    Model, Mediator, and Driver components, in the order
3:    that they were added to the Driver:
3:            1 :  testComp1
0:            1 :  testComp1
0:            2 :  testComp2
0:    Connector components, in the order
0:    that they were added to the Driver:
0:            1 :  testComp1-TO-testComp2
1:            1 :  testComp1
1:            2 :  testComp2
1:    Connector components, in the order
1:    that they were added to the Driver:
1:            1 :  testComp1-TO-testComp2
3:            2 :  testComp2
3:    Connector components, in the order
3:    that they were added to the Driver:
3:            1 :  testComp1-TO-testComp2
2:  NUOPC_DriverPrint for PET:           2
2:    Model, Mediator, and Driver components, in the order
2:    that they were added to the Driver:
2:            1 :  testComp1
2:            2 :  testComp2
2:    Connector components, in the order
2:    that they were added to the Driver:
0: NUOPC_RunSequenceArrayPrint: element     1 out of      1
1: NUOPC_RunSequenceArrayPrint: element     1 out of      1
2:            1 :  testComp1-TO-testComp2
2: NUOPC_RunSequenceArrayPrint: element     1 out of      1
3: NUOPC_RunSequenceArrayPrint: element     1 out of      1
0: runSeq::
1: runSeq::
3: runSeq::
2: runSeq::
0:  runElementPrint:      1     2     1 F T
0:  runElementPrint:      2     1     1 F T
0:  runElementPrint:      1    -1     1 F T
1:  runElementPrint:      1     2     1 F T
1:  runElementPrint:      2     1     1 F T
1:  runElementPrint:      1    -1     1 F T
2:  runElementPrint:      1     2     1 F T
2:  runElementPrint:      2     1     1 F T
2:  runElementPrint:      1    -1     1 F T
2:  runElementPrint:      2    -1     1 F T
2:  runElementPrint:     -1    -1     0 F F
0:  runElementPrint:      2    -1     1 F T
0:  runElementPrint:     -1    -1     0 F F
0: ::
0:   PASS  NUOPC_DriverPrint() Test, ESMF_NUOPC_UTest.F90, line 336
1:  runElementPrint:      2    -1     1 F T
1:  runElementPrint:     -1    -1     0 F F
1: ::
1:   PASS  NUOPC_DriverPrint() Test, ESMF_NUOPC_UTest.F90, line 336
2: ::
2:   PASS  NUOPC_DriverPrint() Test, ESMF_NUOPC_UTest.F90, line 336
3:  runElementPrint:      1     2     1 F T
3:  runElementPrint:      2     1     1 F T
3:  runElementPrint:      1    -1     1 F T
3:  runElementPrint:      2    -1     1 F T
3:  runElementPrint:     -1    -1     0 F F
3: ::
3:   PASS  NUOPC_DriverPrint() Test, ESMF_NUOPC_UTest.F90, line 336
0:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 344
3:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 344
1:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 344
2:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 344
0:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 35
0:  1
1:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 35
1:  1
2:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 35
2:  1
3:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 35
3:  1
0:   PASS  NUOPC_DriverSetRunSequence() with correct slot Test, ESMF_NUOPC_UTest.F9
0:  0, line 359
3:   PASS  NUOPC_DriverSetRunSequence() with correct slot Test, ESMF_NUOPC_UTest.F9
3:  0, line 359
1:   PASS  NUOPC_DriverSetRunSequence() with correct slot Test, ESMF_NUOPC_UTest.F9
1:  0, line 359
2:   PASS  NUOPC_DriverSetRunSequence() with correct slot Test, ESMF_NUOPC_UTest.F9
2:  0, line 359
0:   PASS  NUOPC_DriverSetRunSequence() with wrong slot Test, ESMF_NUOPC_UTest.F90,
0:   line 367
1:   PASS  NUOPC_DriverSetRunSequence() with wrong slot Test, ESMF_NUOPC_UTest.F90,
1:   line 367
3:   PASS  NUOPC_DriverSetRunSequence() with wrong slot Test, ESMF_NUOPC_UTest.F90,
3:   line 367
0:   PASS  NUOPC_DriverNewRunSequence() Test, ESMF_NUOPC_UTest.F90, line 375
1:   PASS  NUOPC_DriverNewRunSequence() Test, ESMF_NUOPC_UTest.F90, line 375
0:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 383
3:   PASS  NUOPC_DriverNewRunSequence() Test, ESMF_NUOPC_UTest.F90, line 375
1:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 383
0:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 39
0:  0
1:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 39
1:  0
3:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 383
3:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 39
3:  0
0:   PASS  NUOPC_DriverAddRunElement() Test, ESMF_NUOPC_UTest.F90, line 398
1:   PASS  NUOPC_DriverAddRunElement() Test, ESMF_NUOPC_UTest.F90, line 398
3:   PASS  NUOPC_DriverAddRunElement() Test, ESMF_NUOPC_UTest.F90, line 398
0:   PASS  NUOPC_FreeFormatCreate() from stringList RunSequence Test, ESMF_NUOPC_UT
0:  est.F90, line 417
1:   PASS  NUOPC_FreeFormatCreate() from stringList RunSequence Test, ESMF_NUOPC_UT
1:  est.F90, line 417
3:   PASS  NUOPC_FreeFormatCreate() from stringList RunSequence Test, ESMF_NUOPC_UT
3:  est.F90, line 417
2:   PASS  NUOPC_DriverSetRunSequence() with wrong slot Test, ESMF_NUOPC_UTest.F90,
2:   line 367
2:   PASS  NUOPC_DriverNewRunSequence() Test, ESMF_NUOPC_UTest.F90, line 375
2:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 383
2:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 39
2:  0
2:   PASS  NUOPC_DriverAddRunElement() Test, ESMF_NUOPC_UTest.F90, line 398
2:   PASS  NUOPC_FreeFormatCreate() from stringList RunSequence Test, ESMF_NUOPC_UT
2:  est.F90, line 417
0:   PASS  NUOPC_DriverIngestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 425
3:   PASS  NUOPC_DriverIngestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 425
1:   PASS  NUOPC_DriverIngestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 425
0:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 433
1:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 433
3:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 433
0:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 44
0:  0
1:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 44
1:  0
3:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 44
3:  0
0:   PASS  NUOPC_FreeFormatGetLine() Test, ESMF_NUOPC_UTest.F90, line 448
1:   PASS  NUOPC_FreeFormatGetLine() Test, ESMF_NUOPC_UTest.F90, line 448
3:   PASS  NUOPC_FreeFormatGetLine() Test, ESMF_NUOPC_UTest.F90, line 448
0:   PASS  NUOPC_FreeFormatAdd() Test, ESMF_NUOPC_UTest.F90, line 456
1:   PASS  NUOPC_FreeFormatAdd() Test, ESMF_NUOPC_UTest.F90, line 456
3:   PASS  NUOPC_FreeFormatAdd() Test, ESMF_NUOPC_UTest.F90, line 456
0:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 464
1:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 464
3:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 464
0:   PASS  NUOPC_DriverEgestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 472
1:   PASS  NUOPC_DriverEgestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 472
3:   PASS  NUOPC_DriverEgestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 472
1:   PASS  NUOPC_FreeFormatPrint() Test, ESMF_NUOPC_UTest.F90, line 480
0:   PASS  NUOPC_FreeFormatPrint() Test, ESMF_NUOPC_UTest.F90, line 480
3:   PASS  NUOPC_FreeFormatPrint() Test, ESMF_NUOPC_UTest.F90, line 480
1:   PASS  NUOPC_FreeFormatGet() Test, ESMF_NUOPC_UTest.F90, line 488
0:   PASS  NUOPC_FreeFormatGet() Test, ESMF_NUOPC_UTest.F90, line 488
3:   PASS  NUOPC_FreeFormatGet() Test, ESMF_NUOPC_UTest.F90, line 488
1:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 496
0:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 496
3:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 496
0:   PASS  NUOPC_FreeFormatCreate() from stringList PetList Test, ESMF_NUOPC_UTest.
0:  F90, line 504
1:   PASS  NUOPC_FreeFormatCreate() from stringList PetList Test, ESMF_NUOPC_UTest.
1:  F90, line 504
3:   PASS  NUOPC_FreeFormatCreate() from stringList PetList Test, ESMF_NUOPC_UTest.
3:  F90, line 504
0:   PASS  NUOPC_IngestPetList() Test, ESMF_NUOPC_UTest.F90, line 512
1:   PASS  NUOPC_IngestPetList() Test, ESMF_NUOPC_UTest.F90, line 512
3:   PASS  NUOPC_IngestPetList() Test, ESMF_NUOPC_UTest.F90, line 512
0:   PASS  Verify ingested PetList size Test, ESMF_NUOPC_UTest.F90, line 521
1:   PASS  Verify ingested PetList size Test, ESMF_NUOPC_UTest.F90, line 521
3:   PASS  Verify ingested PetList size Test, ESMF_NUOPC_UTest.F90, line 521
0:   PASS  Verify ingested PetList content Test, ESMF_NUOPC_UTest.F90, line 530
1:   PASS  Verify ingested PetList content Test, ESMF_NUOPC_UTest.F90, line 530
3:   PASS  Verify ingested PetList content Test, ESMF_NUOPC_UTest.F90, line 530
0:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 538
1:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 538
3:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 538
1:   PASS  NUOPC_CheckSetClock() Test, ESMF_NUOPC_UTest.F90, line 552
3:   PASS  NUOPC_CheckSetClock() Test, ESMF_NUOPC_UTest.F90, line 552
0:   PASS  NUOPC_CheckSetClock() Test, ESMF_NUOPC_UTest.F90, line 552
3:   PASS  NUOPC_AdjustClock() - first create clockB - Test, ESMF_NUOPC_UTest.F90, 
3:  line 563
0:   PASS  NUOPC_AdjustClock() - first create clockB - Test, ESMF_NUOPC_UTest.F90, 
0:  line 563
1:   PASS  NUOPC_AdjustClock() - first create clockB - Test, ESMF_NUOPC_UTest.F90, 
1:  line 563
3:   PASS  NUOPC_AdjustClock() - adjust clockB - Test, ESMF_NUOPC_UTest.F90, line 5
3:  71
0:   PASS  NUOPC_AdjustClock() - adjust clockB - Test, ESMF_NUOPC_UTest.F90, line 5
0:  71
1:   PASS  NUOPC_AdjustClock() - adjust clockB - Test, ESMF_NUOPC_UTest.F90, line 5
1:  71
3: Printing currTime to stdout:    0  1  1  0  0  0   0
0: Printing currTime to stdout:    0  1  1  0  0  0   0
1: Printing currTime to stdout:    0  1  1  0  0  0   0
1:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 580
3:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 580
0:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 580
3:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 589
0:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 589
1:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 589
3: Printing startTime to stdout:    0  1  1  0  0  0   0
0: Printing startTime to stdout:    0  1  1  0  0  0   0
0:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 598
1: Printing startTime to stdout:    0  1  1  0  0  0   0
1:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 598
3:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 598
3:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 607
0:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 607
1:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 607
3: Printing stopTime to stdout:    0  1  1  0 30  0   0
0: Printing stopTime to stdout:    0  1  1  0 30  0   0
1: Printing stopTime to stdout:    0  1  1  0 30  0   0
1:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 616
3:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 616
0:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 616
3:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 625
0:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 625
1:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 625
1:   PASS  NUOPC_CompAreServicesSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
1:  633
3:   PASS  NUOPC_CompAreServicesSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
3:  633
0:   PASS  NUOPC_CompAreServicesSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
0:  633
2:   PASS  NUOPC_DriverIngestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 425
2:   PASS  NUOPC_DriverGet() slotCount Test, ESMF_NUOPC_UTest.F90, line 433
2:   PASS  NUOPC_DriverGet() slotCount validate Test, ESMF_NUOPC_UTest.F90, line 44
2:  0
2:   PASS  NUOPC_FreeFormatGetLine() Test, ESMF_NUOPC_UTest.F90, line 448
2:   PASS  NUOPC_FreeFormatAdd() Test, ESMF_NUOPC_UTest.F90, line 456
3:   PASS  NUOPC_CompAttributeInit() for CplComp Test, ESMF_NUOPC_UTest.F90, line 6
3:  41
0:   PASS  NUOPC_CompAttributeInit() for CplComp Test, ESMF_NUOPC_UTest.F90, line 6
0:  41
1:   PASS  NUOPC_CompAttributeInit() for CplComp Test, ESMF_NUOPC_UTest.F90, line 6
1:  41
2:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 464
2:   PASS  NUOPC_DriverEgestRunSequence() Test, ESMF_NUOPC_UTest.F90, line 472
3:   PASS  NUOPC_CompAttributeAdd() for CplComp Test, ESMF_NUOPC_UTest.F90, line 64
3:  9
0:   PASS  NUOPC_CompAttributeAdd() for CplComp Test, ESMF_NUOPC_UTest.F90, line 64
0:  9
1:   PASS  NUOPC_CompAttributeAdd() for CplComp Test, ESMF_NUOPC_UTest.F90, line 64
1:  9
2:   PASS  NUOPC_FreeFormatPrint() Test, ESMF_NUOPC_UTest.F90, line 480
3:   PASS  NUOPC_CompAttributeSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 65
3:  7
0:   PASS  NUOPC_CompAttributeSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 65
0:  7
1:   PASS  NUOPC_CompAttributeSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 65
1:  7
2:   PASS  NUOPC_FreeFormatGet() Test, ESMF_NUOPC_UTest.F90, line 488
3:   PASS  NUOPC_CompAttributeGet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 66
3:  5
1:   PASS  NUOPC_CompAttributeGet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 66
1:  5
2:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 496
0:   PASS  NUOPC_CompAttributeGet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 66
0:  5
2:   PASS  NUOPC_FreeFormatCreate() from stringList PetList Test, ESMF_NUOPC_UTest.
2:  F90, line 504
2:   PASS  NUOPC_IngestPetList() Test, ESMF_NUOPC_UTest.F90, line 512
3:   PASS  NUOPC_CompAttributeReset() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
3:  673
1:   PASS  NUOPC_CompAttributeReset() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
1:  673
0:   PASS  NUOPC_CompAttributeReset() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
0:  673
2:   PASS  Verify ingested PetList size Test, ESMF_NUOPC_UTest.F90, line 521
2:   PASS  Verify ingested PetList content Test, ESMF_NUOPC_UTest.F90, line 530
2:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 538
2:   PASS  NUOPC_CheckSetClock() Test, ESMF_NUOPC_UTest.F90, line 552
2:   PASS  NUOPC_AdjustClock() - first create clockB - Test, ESMF_NUOPC_UTest.F90, 
2:  line 563
2:   PASS  NUOPC_AdjustClock() - adjust clockB - Test, ESMF_NUOPC_UTest.F90, line 5
2:  71
2: Printing currTime to stdout:    0  1  1  0  0  0   0
2:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 580
2:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 589
2: Printing startTime to stdout:    0  1  1  0  0  0   0
2:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 598
2:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 607
2: Printing stopTime to stdout:    0  1  1  0 30  0   0
2:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 616
2:   PASS  ESMF_ClockPrint() Test, ESMF_NUOPC_UTest.F90, line 625
2:   PASS  NUOPC_CompAreServicesSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
2:  633
2:   PASS  NUOPC_CompAttributeInit() for CplComp Test, ESMF_NUOPC_UTest.F90, line 6
2:  41
2:   PASS  NUOPC_CompAttributeAdd() for CplComp Test, ESMF_NUOPC_UTest.F90, line 64
2:  9
2:   PASS  NUOPC_CompAttributeSet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 65
2:  7
2:   PASS  NUOPC_CompAttributeGet() for CplComp Test, ESMF_NUOPC_UTest.F90, line 66
2:  5
0:   PASS  NUOPC_InitAttributes() Test, ESMF_NUOPC_UTest.F90, line 681
1:   PASS  NUOPC_InitAttributes() Test, ESMF_NUOPC_UTest.F90, line 681
3:   PASS  NUOPC_InitAttributes() Test, ESMF_NUOPC_UTest.F90, line 681
1:   PASS  NUOPC_GetAttribute() Test, ESMF_NUOPC_UTest.F90, line 689
0:   PASS  NUOPC_GetAttribute() Test, ESMF_NUOPC_UTest.F90, line 689
3:   PASS  NUOPC_GetAttribute() Test, ESMF_NUOPC_UTest.F90, line 689
1:   PASS  NUOPC_SetAttribute() Test, ESMF_NUOPC_UTest.F90, line 697
3:   PASS  NUOPC_SetAttribute() Test, ESMF_NUOPC_UTest.F90, line 697
0:   PASS  NUOPC_SetAttribute() Test, ESMF_NUOPC_UTest.F90, line 697
2:   PASS  NUOPC_CompAttributeReset() for CplComp Test, ESMF_NUOPC_UTest.F90, line 
2:  673
0:   PASS  NUOPC_UpdateTimestamp() Test, ESMF_NUOPC_UTest.F90, line 705
1:   PASS  NUOPC_UpdateTimestamp() Test, ESMF_NUOPC_UTest.F90, line 705
3:   PASS  NUOPC_UpdateTimestamp() Test, ESMF_NUOPC_UTest.F90, line 705
0:   PASS  NUOPC_FieldDictionaryAddEntry() Test, ESMF_NUOPC_UTest.F90, line 713
1:   PASS  NUOPC_FieldDictionaryAddEntry() Test, ESMF_NUOPC_UTest.F90, line 713
3:   PASS  NUOPC_FieldDictionaryAddEntry() Test, ESMF_NUOPC_UTest.F90, line 713
0:   PASS  NUOPC_FieldDictionaryGetEntry() Test, ESMF_NUOPC_UTest.F90, line 721
1:   PASS  NUOPC_FieldDictionaryGetEntry() Test, ESMF_NUOPC_UTest.F90, line 721
3:   PASS  NUOPC_FieldDictionaryGetEntry() Test, ESMF_NUOPC_UTest.F90, line 721
0:   PASS  NUOPC_FieldDictionaryHasEntry() (existing entry) Test, ESMF_NUOPC_UTest.
0:  F90, line 729
1:   PASS  NUOPC_FieldDictionaryHasEntry() (existing entry) Test, ESMF_NUOPC_UTest.
1:  F90, line 729
3:   PASS  NUOPC_FieldDictionaryHasEntry() (existing entry) Test, ESMF_NUOPC_UTest.
3:  F90, line 729
0:   PASS  NUOPC_FieldDictionaryHasEntry() return value (existing entry) Test, ESMF
0:  _NUOPC_UTest.F90, line 736
1:   PASS  NUOPC_FieldDictionaryHasEntry() return value (existing entry) Test, ESMF
1:  _NUOPC_UTest.F90, line 736
3:   PASS  NUOPC_FieldDictionaryHasEntry() return value (existing entry) Test, ESMF
3:  _NUOPC_UTest.F90, line 736
0:   PASS  NUOPC_FieldDictionaryHasEntry() (not existing entry) Test, ESMF_NUOPC_UT
0:  est.F90, line 744
1:   PASS  NUOPC_FieldDictionaryHasEntry() (not existing entry) Test, ESMF_NUOPC_UT
1:  est.F90, line 744
3:   PASS  NUOPC_FieldDictionaryHasEntry() (not existing entry) Test, ESMF_NUOPC_UT
3:  est.F90, line 744
0:   PASS  NUOPC_FieldDictionaryHasEntry() return value (not existing entry) Test, 
0:  ESMF_NUOPC_UTest.F90, line 751
1:   PASS  NUOPC_FieldDictionaryHasEntry() return value (not existing entry) Test, 
1:  ESMF_NUOPC_UTest.F90, line 751
3:   PASS  NUOPC_FieldDictionaryHasEntry() return value (not existing entry) Test, 
3:  ESMF_NUOPC_UTest.F90, line 751
1:   PASS  NUOPC_FieldDictionarySetSyno() (existing entry) Test, ESMF_NUOPC_UTest.F
1:  90, line 760
3:   PASS  NUOPC_FieldDictionarySetSyno() (existing entry) Test, ESMF_NUOPC_UTest.F
3:  90, line 760
0:   PASS  NUOPC_FieldDictionarySetSyno() (existing entry) Test, ESMF_NUOPC_UTest.F
0:  90, line 760
1:   PASS  NUOPC_FieldDictionarySetSyno() (non existing entry) Test, ESMF_NUOPC_UTe
1:  st.F90, line 769
3:   PASS  NUOPC_FieldDictionarySetSyno() (non existing entry) Test, ESMF_NUOPC_UTe
3:  st.F90, line 769
0:   PASS  NUOPC_FieldDictionarySetSyno() (non existing entry) Test, ESMF_NUOPC_UTe
0:  st.F90, line 769
0:   PASS  NUOPC_FieldDictionaryMatchSyno() (existing entry) Test, ESMF_NUOPC_UTest
0:  .F90, line 778
1:   PASS  NUOPC_FieldDictionaryMatchSyno() (existing entry) Test, ESMF_NUOPC_UTest
1:  .F90, line 778
3:   PASS  NUOPC_FieldDictionaryMatchSyno() (existing entry) Test, ESMF_NUOPC_UTest
3:  .F90, line 778
0:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (existing entry) Test, ESM
0:  F_NUOPC_UTest.F90, line 785
1:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (existing entry) Test, ESM
1:  F_NUOPC_UTest.F90, line 785
3:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (existing entry) Test, ESM
3:  F_NUOPC_UTest.F90, line 785
0:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry1) Test, ESMF_NUOPC_
0:  UTest.F90, line 794
1:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry1) Test, ESMF_NUOPC_
1:  UTest.F90, line 794
3:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry1) Test, ESMF_NUOPC_
3:  UTest.F90, line 794
0:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry1) Test
0:  , ESMF_NUOPC_UTest.F90, line 801
3:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry1) Test
3:  , ESMF_NUOPC_UTest.F90, line 801
1:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry1) Test
1:  , ESMF_NUOPC_UTest.F90, line 801
0:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry2) Test, ESMF_NUOPC_
0:  UTest.F90, line 810
3:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry2) Test, ESMF_NUOPC_
3:  UTest.F90, line 810
1:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry2) Test, ESMF_NUOPC_
1:  UTest.F90, line 810
0:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry2) Test
0:  , ESMF_NUOPC_UTest.F90, line 817
3:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry2) Test
3:  , ESMF_NUOPC_UTest.F90, line 817
1:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry2) Test
1:  , ESMF_NUOPC_UTest.F90, line 817
0:   PASS  NUOPC_FieldDictionarySetup() Test, ESMF_NUOPC_UTest.F90, line 825
3:   PASS  NUOPC_FieldDictionarySetup() Test, ESMF_NUOPC_UTest.F90, line 825
1:   PASS  NUOPC_FieldDictionarySetup() Test, ESMF_NUOPC_UTest.F90, line 825
3:   PASS  NUOPC_FieldDictionaryEgest() Test, ESMF_NUOPC_UTest.F90, line 833
0:   PASS  NUOPC_FieldDictionaryEgest() Test, ESMF_NUOPC_UTest.F90, line 833
1:   PASS  NUOPC_FieldDictionaryEgest() Test, ESMF_NUOPC_UTest.F90, line 833
3:   PASS  NUOPC_FreeFormatLog() for fdFF Test, ESMF_NUOPC_UTest.F90, line 841
3:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 849
0:   PASS  NUOPC_FreeFormatLog() for fdFF Test, ESMF_NUOPC_UTest.F90, line 841
1:   PASS  NUOPC_FreeFormatLog() for fdFF Test, ESMF_NUOPC_UTest.F90, line 841
3:   PASS  NUOPC_GetTimestamp() for Field Test, ESMF_NUOPC_UTest.F90, line 857
0:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 849
1:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 849
0:   PASS  NUOPC_GetTimestamp() for Field Test, ESMF_NUOPC_UTest.F90, line 857
1:   PASS  NUOPC_GetTimestamp() for Field Test, ESMF_NUOPC_UTest.F90, line 857
3:   PASS  NUOPC_IsAtTime() for Field Test, ESMF_NUOPC_UTest.F90, line 865
0:   PASS  NUOPC_IsAtTime() for Field Test, ESMF_NUOPC_UTest.F90, line 865
1:   PASS  NUOPC_IsAtTime() for Field Test, ESMF_NUOPC_UTest.F90, line 865
2:   PASS  NUOPC_InitAttributes() Test, ESMF_NUOPC_UTest.F90, line 681
2:   PASS  NUOPC_GetAttribute() Test, ESMF_NUOPC_UTest.F90, line 689
2:   PASS  NUOPC_SetAttribute() Test, ESMF_NUOPC_UTest.F90, line 697
2:   PASS  NUOPC_UpdateTimestamp() Test, ESMF_NUOPC_UTest.F90, line 705
2:   PASS  NUOPC_FieldDictionaryAddEntry() Test, ESMF_NUOPC_UTest.F90, line 713
2:   PASS  NUOPC_FieldDictionaryGetEntry() Test, ESMF_NUOPC_UTest.F90, line 721
2:   PASS  NUOPC_FieldDictionaryHasEntry() (existing entry) Test, ESMF_NUOPC_UTest.
2:  F90, line 729
2:   PASS  NUOPC_FieldDictionaryHasEntry() return value (existing entry) Test, ESMF
2:  _NUOPC_UTest.F90, line 736
2:   PASS  NUOPC_FieldDictionaryHasEntry() (not existing entry) Test, ESMF_NUOPC_UT
2:  est.F90, line 744
2:   PASS  NUOPC_FieldDictionaryHasEntry() return value (not existing entry) Test, 
2:  ESMF_NUOPC_UTest.F90, line 751
2:   PASS  NUOPC_FieldDictionarySetSyno() (existing entry) Test, ESMF_NUOPC_UTest.F
2:  90, line 760
2:   PASS  NUOPC_FieldDictionarySetSyno() (non existing entry) Test, ESMF_NUOPC_UTe
2:  st.F90, line 769
2:   PASS  NUOPC_FieldDictionaryMatchSyno() (existing entry) Test, ESMF_NUOPC_UTest
2:  .F90, line 778
2:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (existing entry) Test, ESM
2:  F_NUOPC_UTest.F90, line 785
2:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry1) Test, ESMF_NUOPC_
2:  UTest.F90, line 794
2:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry1) Test
2:  , ESMF_NUOPC_UTest.F90, line 801
2:   PASS  NUOPC_FieldDictionaryMatchSyno() (non existing entry2) Test, ESMF_NUOPC_
2:  UTest.F90, line 810
2:   PASS  NUOPC_FieldDictionaryMatchSyno() return value (not existing entry2) Test
2:  , ESMF_NUOPC_UTest.F90, line 817
2:   PASS  NUOPC_FieldDictionarySetup() Test, ESMF_NUOPC_UTest.F90, line 825
2:   PASS  NUOPC_FieldDictionaryEgest() Test, ESMF_NUOPC_UTest.F90, line 833
2:   PASS  NUOPC_FreeFormatLog() for fdFF Test, ESMF_NUOPC_UTest.F90, line 841
2:   PASS  NUOPC_FreeFormatDestroy() Test, ESMF_NUOPC_UTest.F90, line 849
2:   PASS  NUOPC_GetTimestamp() for Field Test, ESMF_NUOPC_UTest.F90, line 857
2:   PASS  NUOPC_IsAtTime() for Field Test, ESMF_NUOPC_UTest.F90, line 865
3:   PASS  ESMF_GridCreate1PeriDimUfrm() Test, ESMF_NUOPC_UTest.F90, line 876
0:   PASS  ESMF_GridCreate1PeriDimUfrm() Test, ESMF_NUOPC_UTest.F90, line 876
1:   PASS  ESMF_GridCreate1PeriDimUfrm() Test, ESMF_NUOPC_UTest.F90, line 876
1:   PASS  Complete field for further testing Test, ESMF_NUOPC_UTest.F90, line 886
3:   PASS  Complete field for further testing Test, ESMF_NUOPC_UTest.F90, line 886
0:   PASS  Complete field for further testing Test, ESMF_NUOPC_UTest.F90, line 886
2:   PASS  ESMF_GridCreate1PeriDimUfrm() Test, ESMF_NUOPC_UTest.F90, line 876
2:   PASS  Complete field for further testing Test, ESMF_NUOPC_UTest.F90, line 886
2: ERROR: 0 set loglevel to 0
0: ERROR: 0 set loglevel to 0
1: ERROR: 0 set loglevel to 0
3: ERROR: 0 set loglevel to 0
1: ERROR: 0 set loglevel to 0
2: ERROR: 0 set loglevel to 0
3: ERROR: 0 set loglevel to 0
0: ERROR: 0 set loglevel to 0
1: ERROR: 0 set loglevel to 0
3: ERROR: 0 set loglevel to 0
0: ERROR: 0 set loglevel to 0
2: ERROR: 0 set loglevel to 0
2: ERROR: 0 set loglevel to 0
0: ERROR: 0 set loglevel to 0
3: ERROR: 0 set loglevel to 0
1: ERROR: 0 set loglevel to 0
0: MPT ERROR: Rank 0(g:0) received signal SIGSEGV(11).
0: 	Process ID: 12581, Host: r6i7n25, Program: /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/test/testg/Linux.intel.64.mpt.default/ESMF_NUOPC_UTest
0: 	MPT Version: HPE MPT 2.19  02/23/19 05:30:09
0: 
0: MPT: --------stack traceback-------
0: MPT: Attaching to program: /proc/12581/exe, process 12581
0: MPT: Try: zypper install -C "debuginfo(build-id)=4e96cf37d52b9c2f3648e691878b682da5abfa42"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=5eb2f40ad3b0125943aba8f08dd08609351a2967"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=b115bb26e97505a5bd3b56d70d20459aa1206ac9"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=4f3d05f200db29c6835a48e466e0378a8541fd36"
0: MPT: (no debugging symbols found)...done.
0: MPT: [Thread debugging using libthread_db enabled]
0: MPT: Using host libthread_db library "/glade/u/apps/ch/os/lib64/libthread_db.so.1".
0: MPT: Try: zypper install -C "debuginfo(build-id)=113718dffda97ded5e3e87c2c557efb3657c185c"
0: MPT: (no debugging symbols found)...done.
0: MPT: done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=5f9ec139af58fa59c33f72d1b3e56f083f1613ae"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=93c4deac1088eb84fbd01cf2a2c54399f516e9a7"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=ad6d98e9e3042e77c051f1f27e971460bf1e428b"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=4c08f43bb18e99a7df4bad5c4a52bac67ddf9b8d"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=3ae04b58bd81ea7745dba789d89937e719309568"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=76d8c012144838e4e5466798858289fba2057537"
0: MPT: (no debugging symbols found)...done.
0: MPT: Try: zypper install -C "debuginfo(build-id)=ba8002518966160a27c335e04ce8932989f69056"
0: MPT: (no debugging symbols found)...done.
0: MPT: 0x00002b4c38a5c6da in waitpid ()
0: MPT:    from /glade/u/apps/ch/os/lib64/libpthread.so.0
0: MPT: Missing separate debuginfos, use: zypper install glibc-debuginfo-2.22-49.16.x86_64
0: MPT: (gdb) #0  0x00002b4c38a5c6da in waitpid ()
0: MPT:    from /glade/u/apps/ch/os/lib64/libpthread.so.0
0: MPT: #1  0x00002b4c3919bdb6 in mpi_sgi_system (
0: MPT: #2  MPI_SGI_stacktraceback (
0: MPT:     header=header@entry=0x7ffcb7fe5180 "MPT ERROR: Rank 0(g:0) received signal SIGSEGV(11).\n\tProcess ID: 12581, Host: r6i7n25, Program: /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/test/testg/Linux.intel.64.mpt."...) at sig.c:340
0: MPT: #3  0x00002b4c3919bfb2 in first_arriver_handler (signo=signo@entry=11, 
0: MPT:     stack_trace_sem=stack_trace_sem@entry=0x2b4c3e140080) at sig.c:489
0: MPT: #4  0x00002b4c3919c34b in slave_sig_handler (signo=11, 
0: MPT:     siginfo=<optimized out>, extra=<optimized out>) at sig.c:564
0: MPT: #5  <signal handler called>
0: MPT: #6  0x00002b4c335aed9d in ESMCI::LogErr::MsgFoundError (
0: MPT:     this=0x2b4c37d92b80 <ESMC_LogDefault>, rcToCheck=0, 
0: MPT:     msg=0x2b4c3602a40c "Internal subroutine call returned Error", LINE=2047, 
0: MPT:     FILE=0x2b4c3602a434 "ESMCI_PIO_Handler.C", 
0: MPT:     method=0x2b4c3602b528 "ESMCI::PIO_IODescHandler::constructPioDecomp()", 
0: MPT:     rcToReturn=0x2b4c31f4ceb8)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/LogErr/src/ESMCI_LogErr.C:586
0: MPT: #7  0x00002b4c338fa534 in ESMCI::PIO_IODescHandler::constructPioDecomp (
0: MPT:     iosys=65536, arr_p=0x221f670, newDecomp_p=0x7ffcb7fe64c4)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/src/ESMCI_PIO_Handler.C:2047
0: MPT: #8  0x00002b4c338f63d1 in ESMCI::PIO_Handler::getIODesc (this=0x221fd70, 
0: MPT:     iosys=65536, arr_p=0x221f670, ioDims=0x7ffcb7fe6cd8, 
0: MPT:     nioDims=0x7ffcb7fe6ae4, arrDims=0x7ffcb7fe6ce0, narrDims=0x7ffcb7fe6ae8, 
0: MPT:     basepiotype=0x7ffcb7fe6aec, rc=0x7ffcb7fe6ac8)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/src/ESMCI_PIO_Handler.C:1644
0: MPT: #9  0x00002b4c338ed593 in ESMCI::PIO_Handler::arrayWrite (this=0x221fd70, 
0: MPT:     arr_p=0x221f670, name=0x221fcf8 "bottom_depth", dimLabels=..., 
0: MPT:     timeslice=0x0, varAttPack=0x0, gblAttPack=0x0, rc=0x7ffcb7feab24)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/src/ESMCI_PIO_Handler.C:781
0: MPT: #10 0x00002b4c335888f5 in ESMCI::IO::write (this=0x221fd10, timeslice=0x0)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/src/ESMCI_IO.C:735
0: MPT: #11 0x00002b4c33586780 in ESMCI::IO::write (this=0x221fd10, file=..., 
0: MPT:     iofmt=ESMF_IOFMT_NETCDF, overwrite=false, status=ESMC_FILESTATUS_REPLACE, 
0: MPT:     timeslice=0x0)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/src/ESMCI_IO.C:481
0: MPT: #12 0x00002b4c3357544e in c_esmc_iowrite_ (ptr=0x7ffcb7febb48, 
0: MPT:     file=0x7ffcb7febad0 "field_test.nc", len_file=0x7ffcb7feb8c4, 
0: MPT:     opt_iofmt=0x7ffcb7feb948, opt_overwrite=0x7ffcb7feb938, 
0: MPT:     opt_status=0x7ffcb7feb928, timeslice=0x0, schema=0x0, 
0: MPT:     len_schema=0x7ffcb7feb8b8, rc=0x7ffcb7feb8d0, file_l=13, schema_l=0)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/interface/ESMCI_IO_F.C:169
0: MPT: #13 0x00002b4c34984f2b in esmf_iomod::esmf_iowrite (io=..., filename=..., 
0: MPT:     keywordenforcer=<error reading variable: Cannot access memory at address 0x0>, overwrite=.FALSE., status=..., 
0: MPT:     timeslice=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     iofmt=..., schema=..., rc=18, .tmp.FILENAME.len_V$111=13, 
0: MPT:     .tmp.SCHEMA.len_V$119=0)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/IO/interface/ESMF_IO.F90:519
0: MPT: #14 0x00002b4c345b5ae6 in esmf_fieldwrmod::esmf_fieldwrite (field=..., 
0: MPT:     filename=..., 
0: MPT:     keywordenforcer=<error reading variable: Cannot access memory at address 0x0>, variablename=..., convention=..., purpose=..., 
0: MPT:     overwrite=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     status=..., 
0: MPT:     timeslice=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     iofmt=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     rc=18, .tmp.FILENAME.len_V$833=13, .tmp.VARIABLENAME.len_V$837=256, 
0: MPT:     .tmp.CONVENTION.len_V$83a=0, .tmp.PURPOSE.len_V$83d=0)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/Infrastructure/Field/src/ESMF_FieldWr.F90:298
0: MPT: #15 0x00002b4c351c1670 in nuopc_auxiliary::nuopc_fieldwrite (field=..., 
0: MPT:     filename=..., 
0: MPT:     overwrite=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     status=..., 
0: MPT:     timeslice=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     iofmt=<error reading variable: Cannot access memory at address 0x0>, 
0: MPT:     relaxedflag=4294967295, rc=0, .tmp.FILENAME.len_V$3436=13)
0: MPT:     at /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/src/addon/NUOPC/src/NUOPC_Auxiliary.F90:305
0: MPT: #16 0x000000000041a5b4 in esmf_nuopc_utest () at ESMF_NUOPC_UTest.F90:908
0: MPT: #17 0x000000000040c01e in main ()
0: MPT: #18 0x00002b4c39e0a6e5 in __libc_start_main ()
0: MPT:    from /glade/u/apps/ch/os/lib64/libc.so.6
0: MPT: #19 0x000000000040bf29 in _start () at ../sysdeps/x86_64/start.S:118
0: MPT: (gdb) A debugging session is active.
0: MPT: 
0: MPT: 	Inferior 1 [process 12581] will be detached.
0: MPT: 
0: MPT: Quit anyway? (y or n) [answered Y; input not from terminal]
0: MPT: Detaching from program: /proc/12581/exe, process 12581
0: 
0: MPT: -----stack traceback ends-----
0: MPT: On host r6i7n25, Program /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/test/testg/Linux.intel.64.mpt.default/ESMF_NUOPC_UTest, Rank 0, Process 12581: Dumping core on signal SIGSEGV(11) into directory /glade/scratch/rlong/esmf-testing/intel_18.0.5_mpt_g_jedwards_pio_update2/test/testg/Linux.intel.64.mpt.default
-1: MPT ERROR: MPI_COMM_WORLD rank 0 has terminated without calling MPI_Finalize()
-1: 	aborting job
MPT: Received signal 11
